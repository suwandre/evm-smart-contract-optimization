{
	"id": "796bb67670e2c5d66b20c9cc24d25767",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractS/ContractSV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.25;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\";\r\n\r\ncontract ContractSV1 is ERC721 {\r\n    // custom error\r\n    error InvalidQuantity();\r\n\r\n    // the next token ID to mint\r\n    uint256 private _nextTokenId;\r\n\r\n    constructor() ERC721(\"Test Token\", \"TTK\") {\r\n        _nextTokenId = 1;\r\n    }\r\n\r\n    // singular function to mint 1 or multiple NFTs\r\n    function batchMint(address to, uint256 quantity) public {\r\n        if (quantity == 0) revert InvalidQuantity();\r\n\r\n        for (uint256 i = 0; i < quantity; i++) {\r\n            _safeMint(to, _nextTokenId);\r\n\r\n            unchecked {\r\n                _nextTokenId++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, expect 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Ferma's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked has failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"contracts/ContractS/ContractSV1.sol": {
				"ContractSV1": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQuantity",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ContractS/ContractSV1.sol\":177:778  contract ContractSV1 is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ContractS/ContractSV1.sol\":339:416  constructor() ERC721(\"Test Token\", \"TTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2a32b9ba102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x54544b)\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1454:1459  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1446:1451  _name */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1446:1459  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1486  symbol_ */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"contracts/ContractS/ContractSV1.sol\":407:408  1 */\n  0x01\n    /* \"contracts/ContractS/ContractSV1.sol\":392:404  _nextTokenId */\n  0x06\n    /* \"contracts/ContractS/ContractSV1.sol\":392:408  _nextTokenId = 1 */\n  sstore\n  pop\n    /* \"contracts/ContractS/ContractSV1.sol\":177:778  contract ContractSV1 is ERC721 {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_23:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_24:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_22:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1555:1652   */\n  tag_31\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_32\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_33)\n    /* \"#utility.yul\":1776:2439   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_38:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_41:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_33:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/ContractS/ContractSV1.sol\":177:778  contract ContractSV1 is ERC721 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ContractS/ContractSV1.sol\":177:778  contract ContractSV1 is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x43508b05\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1584   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/ContractS/ContractSV1.sol\":477:775  function batchMint(address to, uint256 quantity) public {... */\n    tag_9:\n      tag_36\n      tag_48\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_30\n      tag_51\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":2725:2750   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2713:2715   */\n      0x20\n        /* \"#utility.yul\":2698:2716   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2579:2756   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1662:1666  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1712:1737  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n      tag_81\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1768:1801  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_83\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1678:1853  return... */\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2409:2422  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2441:2446  _name */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2434:2446  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3563:3570  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      tag_93\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3596:3603  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3582:3595  _requireOwned */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5963:6090  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3402:3404  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3406:3413  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3393:3401  _approve */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4305:4306  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4537:4558  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4569:4571  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4573:4580  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4561:4568  _update */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4537:4595  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4626:4630  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4609:4622  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n      tag_108\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5433:5448   */\n      dup1\n      dup7\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5415:5449   */\n      mstore\n        /* \"#utility.yul\":5465:5483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5458:5492   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5528:5543   */\n      dup3\n      and\n        /* \"#utility.yul\":5508:5526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5501:5544   */\n      mstore\n        /* \"#utility.yul\":5327:5345   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_104\n        /* \"#utility.yul\":5152:5550   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4222:4720  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4889:4893  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4895:4897  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4899:4906  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4872:4888  safeTransferFrom */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractS/ContractSV1.sol\":477:775  function batchMint(address to, uint256 quantity) public {... */\n    tag_49:\n        /* \"contracts/ContractS/ContractSV1.sol\":548:556  quantity */\n      dup1\n        /* \"contracts/ContractS/ContractSV1.sol\":560:561  0 */\n      0x00\n        /* \"contracts/ContractS/ContractSV1.sol\":548:561  quantity == 0 */\n      sub\n        /* \"contracts/ContractS/ContractSV1.sol\":544:587  if (quantity == 0) revert InvalidQuantity() */\n      tag_114\n      jumpi\n        /* \"contracts/ContractS/ContractSV1.sol\":570:587  InvalidQuantity() */\n      mload(0x40)\n      0x524f409b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractS/ContractSV1.sol\":544:587  if (quantity == 0) revert InvalidQuantity() */\n    tag_114:\n        /* \"contracts/ContractS/ContractSV1.sol\":605:614  uint256 i */\n      0x00\n        /* \"contracts/ContractS/ContractSV1.sol\":600:768  for (uint256 i = 0; i < quantity; i++) {... */\n    tag_115:\n        /* \"contracts/ContractS/ContractSV1.sol\":624:632  quantity */\n      dup2\n        /* \"contracts/ContractS/ContractSV1.sol\":620:621  i */\n      dup2\n        /* \"contracts/ContractS/ContractSV1.sol\":620:632  i < quantity */\n      lt\n        /* \"contracts/ContractS/ContractSV1.sol\":600:768  for (uint256 i = 0; i < quantity; i++) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/ContractS/ContractSV1.sol\":654:681  _safeMint(to, _nextTokenId) */\n      tag_118\n        /* \"contracts/ContractS/ContractSV1.sol\":664:666  to */\n      dup4\n        /* \"contracts/ContractS/ContractSV1.sol\":668:680  _nextTokenId */\n      sload(0x06)\n        /* \"contracts/ContractS/ContractSV1.sol\":654:663  _safeMint */\n      tag_119\n        /* \"contracts/ContractS/ContractSV1.sol\":654:681  _safeMint(to, _nextTokenId) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ContractS/ContractSV1.sol\":727:739  _nextTokenId */\n      0x06\n        /* \"contracts/ContractS/ContractSV1.sol\":727:741  _nextTokenId++ */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ContractS/ContractSV1.sol\":634:637  i++ */\n      add\n        /* \"contracts/ContractS/ContractSV1.sol\":600:768  for (uint256 i = 0; i < quantity; i++) {... */\n      jump(tag_115)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2247:2254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2287:2294  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2273:2286  _requireOwned */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1982:1989  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2074:2075  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2104:2113  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2564:2577  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2596:2603  _symbol */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2589:2603  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3835:3843  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3845:3853  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3802:3820  _setApprovalForAll */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5110:5114  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5116:5118  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5120:5127  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5097:5109  transferFrom */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5186:5190  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5192:5194  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5196:5203  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5205:5209  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5138:5171  ERC721Utils.checkOnERC721Received */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2740:2753  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2779:2786  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2765:2778  _requireOwned */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      jump\t// in\n    tag_141:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2798:2819  string memory baseURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3249:3258  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3173:3265  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2798:2832  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2873:2874  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2855:2862  baseURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2849:2870  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2849:2874  bytes(baseURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_144\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_145)\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2891:2898  baseURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2900:2907  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2900:2916  tokenId.toString */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2877:2919  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2842:2924  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16214:16455  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16277:16284  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16339:16427  if (owner == address(0)) {... */\n      tag_83\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16385:16416  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2725:2750   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2698:2716   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16385:16416  ERC721NonexistentToken(tokenId) */\n      tag_104\n        /* \"#utility.yul\":2579:2756   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14494:14614  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14574:14607  _approve(to, tokenId, auth, true) */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14583:14585  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14587:14594  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14596:14600  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14602:14606  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14574:14582  _approve */\n      tag_161\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14574:14607  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8863:9658  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8949:8956  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9060:9078  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9056:9142  if (auth != address(0)) {... */\n      tag_165\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9094:9131  _checkAuthorized(from, auth, tokenId) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9111:9115  from */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9117:9121  auth */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9123:9130  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9094:9110  _checkAuthorized */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9094:9131  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9186:9204  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9182:9438  if (from != address(0)) {... */\n      tag_167\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9302:9350  _approve(address(0), tokenId, address(0), false) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9319:9320  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9323:9330  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9340:9341  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9344:9349  false */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9302:9310  _approve */\n      tag_161\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9302:9350  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9393:9408  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9393:9402  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9393:9408  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9393:9413  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9182:9438  if (from != address(0)) {... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9452:9468  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9448:9555  if (to != address(0)) {... */\n      tag_169\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9512:9525  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9512:9521  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9512:9525  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9512:9530  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9529:9530  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9512:9530  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9448:9555  if (to != address(0)) {... */\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9565:9581  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9565:9572  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9565:9581  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9565:9586  _owners[tokenId] = to */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9602:9629  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9565:9581  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9602:9629  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9647:9651  from */\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8863:9658  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10658:10758  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10725:10751  _safeMint(to, tokenId, \"\") */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10735:10737  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10739:10746  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10725:10751  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10725:10734  _safeMint */\n      tag_172\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10725:10751  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15667:15979  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15774:15796  operator == address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15770:15861  if (operator == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15819:15850  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15819:15850  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15819:15850  ERC721InvalidOperator(operator) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15770:15861  if (operator == address(0)) {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15870:15895  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15870:15888  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15870:15895  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15870:15905  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15870:15916  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15931:15972  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap2\n      dup3\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15931:15972  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15931:15972  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15667:15979  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":870:1833  function checkOnERC721Received(... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1050:1064  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1050:1068  to.code.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1046:1827  if (to.code.length > 0) {... */\n      tag_193\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1088:1155  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1088:1124  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1088:1155  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      tag_179\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1125:1133  operator */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1135:1139  from */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1141:1148  tokenId */\n      dup8\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1150:1154  data */\n      dup8\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1088:1155  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      0x04\n      add\n      tag_180\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_182\n      swap2\n      dup2\n      add\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      0x01\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1084:1817  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n      tag_184\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_189\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_188)\n    tag_189:\n      0x60\n      swap2\n      pop\n    tag_188:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1445:1451  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1445:1458  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1462:1463  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1445:1463  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1441:1803  if (reason.length == 0) {... */\n      tag_190\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1549:1588  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1549:1588  IERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1549:1588  IERC721Errors.ERC721InvalidReceiver(to) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1441:1803  if (reason.length == 0) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1755:1761  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1749:1762  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1740:1746  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1736:1738  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1732:1747  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1725:1763  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1084:1817  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n    tag_184:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1202:1253  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1198:1380  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_194\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1322:1361  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1322:1361  IERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1322:1361  IERC721Errors.ERC721InvalidReceiver(to) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1198:1380  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1156:1394  returns (bytes4 retval) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":1084:1817  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":870:1833  function checkOnERC721Received(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_198\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_199\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_203:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_204:\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_204\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14796:15458  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14956:14965  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14956:14987  emitEvent || auth != address(0) */\n      dup1\n      tag_212\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14969:14987  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14956:14987  emitEvent || auth != address(0) */\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14952:15412  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15003:15016  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15019:15041  _requireOwned(tokenId) */\n      tag_214\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15033:15040  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15019:15032  _requireOwned */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15019:15041  _requireOwned(tokenId) */\n      jump\t// in\n    tag_214:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15003:15041  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15169:15187  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15169:15204  auth != address(0) && owner != auth */\n      tag_215\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15200:15204  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15191:15204  owner != auth */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15191:15196  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15191:15204  owner != auth */\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15169:15204  auth != address(0) && owner != auth */\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15169:15238  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15208:15238  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15169:15238  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15165:15307  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15265:15292  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15265:15292  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15265:15292  ERC721InvalidApprover(auth) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15165:15307  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15325:15334  emitEvent */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15321:15402  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15379:15386  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15375:15377  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15359:15387  Approval(owner, to, tokenId) */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15368:15373  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15359:15387  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15321:15402  if (emitEvent) {... */\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14989:15412  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14952:15412  if (emitEvent || auth != address(0)) {... */\n    tag_213:\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15422:15446  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15422:15437  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15422:15446  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15422:15451  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14796:15458  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7107:7475  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7219:7257  _isAuthorized(owner, spender, tokenId) */\n      tag_222\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7233:7238  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7240:7247  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7249:7256  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7219:7232  _isAuthorized */\n      tag_223\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7219:7257  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_222:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7214:7469  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_112\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7277:7296  owner == address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7273:7459  if (owner == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7323:7354  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2725:2750   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2698:2716   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7323:7354  ERC721NonexistentToken(tokenId) */\n      tag_104\n        /* \"#utility.yul\":2579:2756   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7273:7459  if (owner == address(0)) {... */\n    tag_225:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7400:7444  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7207:7262   */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7400:7444  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7189:7263   */\n      mstore\n        /* \"#utility.yul\":7279:7297   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7272:7306   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7162:7180   */\n      0x44\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7400:7444  ERC721InsufficientApproval(spender, tokenId) */\n      tag_104\n        /* \"#utility.yul\":7015:7312   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10979:11186  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11073:11091  _mint(to, tokenId) */\n      tag_231\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11079:11081  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11083:11090  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11073:11078  _mint */\n      tag_232\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11073:11091  _mint(to, tokenId) */\n      jump\t// in\n    tag_231:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11101:11179  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11157:11158  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11161:11163  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11165:11172  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11174:11178  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11101:11134  ERC721Utils.checkOnERC721Received */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11101:11179  ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24673:25589  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24726:24733  uint256 */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24810:24818  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24801:24818  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24797:24900  if (value >= 10 ** 64) {... */\n      tag_236\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24847:24855  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24838:24855  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24883:24885  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24873:24885  result += 64 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24797:24900  if (value >= 10 ** 64) {... */\n    tag_236:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24926:24934  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24917:24922  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24917:24934  value >= 10 ** 32 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24913:25016  if (value >= 10 ** 32) {... */\n      tag_239\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24963:24971  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24954:24971  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24999:25001  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24989:25001  result += 32 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24913:25016  if (value >= 10 ** 32) {... */\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25042:25050  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25033:25038  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25033:25050  value >= 10 ** 16 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25029:25132  if (value >= 10 ** 16) {... */\n      tag_242\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25079:25087  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25070:25087  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25115:25117  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25105:25117  result += 16 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25029:25132  if (value >= 10 ** 16) {... */\n    tag_242:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25158:25165  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25149:25154  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25149:25165  value >= 10 ** 8 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25145:25245  if (value >= 10 ** 8) {... */\n      tag_245\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25194:25201  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25185:25201  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25229:25230  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25219:25230  result += 8 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25145:25245  if (value >= 10 ** 8) {... */\n    tag_245:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25271:25278  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25262:25267  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25262:25278  value >= 10 ** 4 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25258:25358  if (value >= 10 ** 4) {... */\n      tag_248\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25307:25314  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25298:25314  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25342:25343  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25332:25343  result += 4 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25258:25358  if (value >= 10 ** 4) {... */\n    tag_248:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25384:25391  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25375:25380  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25375:25391  value >= 10 ** 2 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25371:25471  if (value >= 10 ** 2) {... */\n      tag_251\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25420:25427  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25411:25427  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25455:25456  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25445:25456  result += 2 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25371:25471  if (value >= 10 ** 2) {... */\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25497:25504  10 ** 1 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25488:25493  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25488:25504  value >= 10 ** 1 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25484:25550  if (value >= 10 ** 1) {... */\n      tag_83\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25534:25535  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25524:25535  result += 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":25576:25582  result */\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":24673:25589  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_223:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6504:6508  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6539:6560  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6539:6666  spender != address(0) &&... */\n      tag_259\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6586:6593  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6582  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6629  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_258\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      dup1\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\n    tag_258:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_259\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6520:6666  return... */\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9980:10307  function _mint(address to, uint256 tokenId) internal {... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10047:10063  to == address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10043:10130  if (to == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10086:10119  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10116:10117  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10086:10119  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10086:10119  ERC721InvalidReceiver(address(0)) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10043:10130  if (to == address(0)) {... */\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10139:10160  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10163:10195  _update(to, tokenId, address(0)) */\n      tag_264\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10171:10173  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10175:10182  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10192:10193  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10163:10170  _update */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10163:10195  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_264:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10139:10195  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10209:10236  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10205:10301  if (previousOwner != address(0)) {... */\n      tag_112\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10259:10290  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10287:10288  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10259:10290  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1584   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10259:10290  ERC721InvalidSender(address(0)) */\n      tag_104\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"#utility.yul\":14:191   */\n    tag_267:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_273:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_275:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_145\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":638:938   */\n    tag_268:\n        /* \"#utility.yul\":691:694   */\n      0x00\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":723:735   */\n      mload\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":751:754   */\n      dup5\n        /* \"#utility.yul\":744:763   */\n      mstore\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":798:803   */\n      dup5\n        /* \"#utility.yul\":794:810   */\n      add\n        /* \"#utility.yul\":787:791   */\n      0x20\n        /* \"#utility.yul\":782:785   */\n      dup7\n        /* \"#utility.yul\":778:792   */\n      add\n        /* \"#utility.yul\":772:819   */\n      mcopy\n        /* \"#utility.yul\":864:865   */\n      0x00\n        /* \"#utility.yul\":857:861   */\n      0x20\n        /* \"#utility.yul\":848:854   */\n      dup3\n        /* \"#utility.yul\":843:846   */\n      dup7\n        /* \"#utility.yul\":839:855   */\n      add\n        /* \"#utility.yul\":835:862   */\n      add\n        /* \"#utility.yul\":828:866   */\n      mstore\n        /* \"#utility.yul\":927:931   */\n      0x20\n        /* \"#utility.yul\":920:922   */\n      0x1f\n        /* \"#utility.yul\":916:923   */\n      not\n        /* \"#utility.yul\":911:913   */\n      0x1f\n        /* \"#utility.yul\":903:909   */\n      dup4\n        /* \"#utility.yul\":899:914   */\n      add\n        /* \"#utility.yul\":895:924   */\n      and\n        /* \"#utility.yul\":890:893   */\n      dup6\n        /* \"#utility.yul\":886:925   */\n      add\n        /* \"#utility.yul\":882:932   */\n      add\n        /* \"#utility.yul\":875:932   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":638:938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":943:1174   */\n    tag_29:\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup2\n        /* \"#utility.yul\":1074:1095   */\n      mstore\n        /* \"#utility.yul\":1055:1059   */\n      0x00\n        /* \"#utility.yul\":1112:1168   */\n      tag_145\n        /* \"#utility.yul\":1164:1166   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1167   */\n      add\n        /* \"#utility.yul\":1141:1147   */\n      dup5\n        /* \"#utility.yul\":1112:1168   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":1179:1359   */\n    tag_32:\n        /* \"#utility.yul\":1238:1244   */\n      0x00\n        /* \"#utility.yul\":1291:1293   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1289   */\n      sub\n        /* \"#utility.yul\":1262:1294   */\n      slt\n        /* \"#utility.yul\":1259:1311   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1259:1311   */\n    tag_282:\n      pop\n        /* \"#utility.yul\":1330:1353   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1179:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1791   */\n    tag_269:\n        /* \"#utility.yul\":1663:1683   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1712:1766   */\n      dup2\n      and\n        /* \"#utility.yul\":1702:1767   */\n      dup2\n      eq\n        /* \"#utility.yul\":1692:1785   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1692:1785   */\n    tag_285:\n        /* \"#utility.yul\":1595:1791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1796:2050   */\n    tag_38:\n        /* \"#utility.yul\":1864:1870   */\n      0x00\n        /* \"#utility.yul\":1872:1878   */\n      dup1\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1913:1922   */\n      dup4\n        /* \"#utility.yul\":1904:1911   */\n      dup6\n        /* \"#utility.yul\":1900:1923   */\n      sub\n        /* \"#utility.yul\":1896:1928   */\n      slt\n        /* \"#utility.yul\":1893:1945   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1938:1939   */\n      dup1\n        /* \"#utility.yul\":1931:1943   */\n      revert\n        /* \"#utility.yul\":1893:1945   */\n    tag_287:\n        /* \"#utility.yul\":1964:1993   */\n      tag_288\n        /* \"#utility.yul\":1983:1992   */\n      dup4\n        /* \"#utility.yul\":1964:1993   */\n      tag_269\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1954:1993   */\n      swap5\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2025:2043   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2012:2044   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1796:2050   */\n      jump\t// out\n        /* \"#utility.yul\":2055:2383   */\n    tag_42:\n        /* \"#utility.yul\":2132:2138   */\n      0x00\n        /* \"#utility.yul\":2140:2146   */\n      dup1\n        /* \"#utility.yul\":2148:2154   */\n      0x00\n        /* \"#utility.yul\":2201:2203   */\n      0x60\n        /* \"#utility.yul\":2189:2198   */\n      dup5\n        /* \"#utility.yul\":2180:2187   */\n      dup7\n        /* \"#utility.yul\":2176:2199   */\n      sub\n        /* \"#utility.yul\":2172:2204   */\n      slt\n        /* \"#utility.yul\":2169:2221   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2214:2215   */\n      dup1\n        /* \"#utility.yul\":2207:2219   */\n      revert\n        /* \"#utility.yul\":2169:2221   */\n    tag_290:\n        /* \"#utility.yul\":2240:2269   */\n      tag_291\n        /* \"#utility.yul\":2259:2268   */\n      dup5\n        /* \"#utility.yul\":2240:2269   */\n      tag_269\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2230:2269   */\n      swap3\n      pop\n        /* \"#utility.yul\":2288:2326   */\n      tag_292\n        /* \"#utility.yul\":2322:2324   */\n      0x20\n        /* \"#utility.yul\":2311:2320   */\n      dup6\n        /* \"#utility.yul\":2307:2325   */\n      add\n        /* \"#utility.yul\":2288:2326   */\n      tag_269\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2278:2326   */\n      swap2\n      pop\n        /* \"#utility.yul\":2373:2375   */\n      0x40\n        /* \"#utility.yul\":2362:2371   */\n      dup5\n        /* \"#utility.yul\":2358:2376   */\n      add\n        /* \"#utility.yul\":2345:2377   */\n      calldataload\n        /* \"#utility.yul\":2335:2377   */\n      swap1\n      pop\n        /* \"#utility.yul\":2055:2383   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2388:2574   */\n    tag_56:\n        /* \"#utility.yul\":2447:2453   */\n      0x00\n        /* \"#utility.yul\":2500:2502   */\n      0x20\n        /* \"#utility.yul\":2488:2497   */\n      dup3\n        /* \"#utility.yul\":2479:2486   */\n      dup5\n        /* \"#utility.yul\":2475:2498   */\n      sub\n        /* \"#utility.yul\":2471:2503   */\n      slt\n        /* \"#utility.yul\":2468:2520   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2513:2514   */\n      dup1\n        /* \"#utility.yul\":2506:2518   */\n      revert\n        /* \"#utility.yul\":2468:2520   */\n    tag_294:\n        /* \"#utility.yul\":2539:2568   */\n      tag_145\n        /* \"#utility.yul\":2558:2567   */\n      dup3\n        /* \"#utility.yul\":2539:2568   */\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":2761:3108   */\n    tag_65:\n        /* \"#utility.yul\":2826:2832   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup1\n        /* \"#utility.yul\":2887:2889   */\n      0x40\n        /* \"#utility.yul\":2875:2884   */\n      dup4\n        /* \"#utility.yul\":2866:2873   */\n      dup6\n        /* \"#utility.yul\":2862:2885   */\n      sub\n        /* \"#utility.yul\":2858:2890   */\n      slt\n        /* \"#utility.yul\":2855:2907   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2900:2901   */\n      dup1\n        /* \"#utility.yul\":2893:2905   */\n      revert\n        /* \"#utility.yul\":2855:2907   */\n    tag_298:\n        /* \"#utility.yul\":2926:2955   */\n      tag_299\n        /* \"#utility.yul\":2945:2954   */\n      dup4\n        /* \"#utility.yul\":2926:2955   */\n      tag_269\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2916:2955   */\n      swap2\n      pop\n        /* \"#utility.yul\":3005:3007   */\n      0x20\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3008   */\n      add\n        /* \"#utility.yul\":2977:3009   */\n      calldataload\n        /* \"#utility.yul\":3052:3057   */\n      dup1\n        /* \"#utility.yul\":3045:3058   */\n      iszero\n        /* \"#utility.yul\":3038:3059   */\n      iszero\n        /* \"#utility.yul\":3031:3036   */\n      dup2\n        /* \"#utility.yul\":3028:3060   */\n      eq\n        /* \"#utility.yul\":3018:3078   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3074:3075   */\n      0x00\n        /* \"#utility.yul\":3071:3072   */\n      dup1\n        /* \"#utility.yul\":3064:3076   */\n      revert\n        /* \"#utility.yul\":3018:3078   */\n    tag_300:\n        /* \"#utility.yul\":3097:3102   */\n      dup1\n        /* \"#utility.yul\":3087:3102   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2761:3108   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3113:3297   */\n    tag_202:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3162:3163   */\n      0x00\n        /* \"#utility.yul\":3155:3243   */\n      mstore\n        /* \"#utility.yul\":3262:3266   */\n      0x41\n        /* \"#utility.yul\":3259:3260   */\n      0x04\n        /* \"#utility.yul\":3252:3267   */\n      mstore\n        /* \"#utility.yul\":3286:3290   */\n      0x24\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3276:3291   */\n      revert\n        /* \"#utility.yul\":3302:4440   */\n    tag_69:\n        /* \"#utility.yul\":3397:3403   */\n      0x00\n        /* \"#utility.yul\":3405:3411   */\n      dup1\n        /* \"#utility.yul\":3413:3419   */\n      0x00\n        /* \"#utility.yul\":3421:3427   */\n      dup1\n        /* \"#utility.yul\":3474:3477   */\n      0x80\n        /* \"#utility.yul\":3462:3471   */\n      dup6\n        /* \"#utility.yul\":3453:3460   */\n      dup8\n        /* \"#utility.yul\":3449:3472   */\n      sub\n        /* \"#utility.yul\":3445:3478   */\n      slt\n        /* \"#utility.yul\":3442:3495   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3488:3489   */\n      dup1\n        /* \"#utility.yul\":3481:3493   */\n      revert\n        /* \"#utility.yul\":3442:3495   */\n    tag_303:\n        /* \"#utility.yul\":3514:3543   */\n      tag_304\n        /* \"#utility.yul\":3533:3542   */\n      dup6\n        /* \"#utility.yul\":3514:3543   */\n      tag_269\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3504:3543   */\n      swap4\n      pop\n        /* \"#utility.yul\":3562:3600   */\n      tag_305\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3585:3594   */\n      dup7\n        /* \"#utility.yul\":3581:3599   */\n      add\n        /* \"#utility.yul\":3562:3600   */\n      tag_269\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3552:3600   */\n      swap3\n      pop\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3636:3645   */\n      dup6\n        /* \"#utility.yul\":3632:3650   */\n      add\n        /* \"#utility.yul\":3619:3651   */\n      calldataload\n        /* \"#utility.yul\":3609:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3702:3704   */\n      0x60\n        /* \"#utility.yul\":3691:3700   */\n      dup6\n        /* \"#utility.yul\":3687:3705   */\n      add\n        /* \"#utility.yul\":3674:3706   */\n      calldataload\n        /* \"#utility.yul\":3725:3743   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3766:3768   */\n      dup1\n        /* \"#utility.yul\":3758:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3769   */\n      gt\n        /* \"#utility.yul\":3752:3786   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3779:3780   */\n      dup1\n        /* \"#utility.yul\":3772:3784   */\n      revert\n        /* \"#utility.yul\":3752:3786   */\n    tag_306:\n        /* \"#utility.yul\":3820:3826   */\n      dup2\n        /* \"#utility.yul\":3809:3818   */\n      dup8\n        /* \"#utility.yul\":3805:3827   */\n      add\n        /* \"#utility.yul\":3795:3827   */\n      swap2\n      pop\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3858:3862   */\n      0x1f\n        /* \"#utility.yul\":3854:3856   */\n      dup4\n        /* \"#utility.yul\":3850:3863   */\n      add\n        /* \"#utility.yul\":3846:3873   */\n      slt\n        /* \"#utility.yul\":3836:3891   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3884:3885   */\n      dup1\n        /* \"#utility.yul\":3877:3889   */\n      revert\n        /* \"#utility.yul\":3836:3891   */\n    tag_307:\n        /* \"#utility.yul\":3923:3925   */\n      dup2\n        /* \"#utility.yul\":3910:3926   */\n      calldataload\n        /* \"#utility.yul\":3945:3947   */\n      dup2\n        /* \"#utility.yul\":3941:3943   */\n      dup2\n        /* \"#utility.yul\":3938:3948   */\n      gt\n        /* \"#utility.yul\":3935:3971   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3951:3969   */\n      tag_309\n      tag_202\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4026:4028   */\n      0x40\n        /* \"#utility.yul\":4020:4029   */\n      mload\n        /* \"#utility.yul\":3994:3996   */\n      0x1f\n        /* \"#utility.yul\":4080:4093   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4076:4098   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4100:4102   */\n      0x3f\n        /* \"#utility.yul\":4072:4103   */\n      add\n        /* \"#utility.yul\":4068:4108   */\n      and\n        /* \"#utility.yul\":4056:4109   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4124:4142   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4144:4166   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4121:4167   */\n      or\n        /* \"#utility.yul\":4118:4190   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":4170:4188   */\n      tag_311\n      tag_202\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4210:4220   */\n      dup2\n        /* \"#utility.yul\":4206:4208   */\n      0x40\n        /* \"#utility.yul\":4199:4221   */\n      mstore\n        /* \"#utility.yul\":4245:4247   */\n      dup3\n        /* \"#utility.yul\":4237:4243   */\n      dup2\n        /* \"#utility.yul\":4230:4248   */\n      mstore\n        /* \"#utility.yul\":4285:4292   */\n      dup11\n        /* \"#utility.yul\":4280:4282   */\n      0x20\n        /* \"#utility.yul\":4275:4277   */\n      dup5\n        /* \"#utility.yul\":4271:4273   */\n      dup8\n        /* \"#utility.yul\":4267:4278   */\n      add\n        /* \"#utility.yul\":4263:4283   */\n      add\n        /* \"#utility.yul\":4260:4293   */\n      gt\n        /* \"#utility.yul\":4257:4310   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4306:4307   */\n      0x00\n        /* \"#utility.yul\":4303:4304   */\n      dup1\n        /* \"#utility.yul\":4296:4308   */\n      revert\n        /* \"#utility.yul\":4257:4310   */\n    tag_312:\n        /* \"#utility.yul\":4362:4364   */\n      dup3\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4353:4355   */\n      dup7\n        /* \"#utility.yul\":4349:4360   */\n      add\n        /* \"#utility.yul\":4344:4346   */\n      0x20\n        /* \"#utility.yul\":4336:4342   */\n      dup4\n        /* \"#utility.yul\":4332:4347   */\n      add\n        /* \"#utility.yul\":4319:4365   */\n      calldatacopy\n        /* \"#utility.yul\":4407:4408   */\n      0x00\n        /* \"#utility.yul\":4402:4404   */\n      0x20\n        /* \"#utility.yul\":4397:4399   */\n      dup5\n        /* \"#utility.yul\":4389:4395   */\n      dup4\n        /* \"#utility.yul\":4385:4400   */\n      add\n        /* \"#utility.yul\":4381:4405   */\n      add\n        /* \"#utility.yul\":4374:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4434   */\n      dup1\n        /* \"#utility.yul\":4418:4434   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3302:4440   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4705   */\n    tag_77:\n        /* \"#utility.yul\":4513:4519   */\n      0x00\n        /* \"#utility.yul\":4521:4527   */\n      dup1\n        /* \"#utility.yul\":4574:4576   */\n      0x40\n        /* \"#utility.yul\":4562:4571   */\n      dup4\n        /* \"#utility.yul\":4553:4560   */\n      dup6\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4577   */\n      slt\n        /* \"#utility.yul\":4542:4594   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4542:4594   */\n    tag_314:\n        /* \"#utility.yul\":4613:4642   */\n      tag_315\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4613:4642   */\n      tag_269\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4603:4642   */\n      swap2\n      pop\n        /* \"#utility.yul\":4661:4699   */\n      tag_316\n        /* \"#utility.yul\":4695:4697   */\n      0x20\n        /* \"#utility.yul\":4684:4693   */\n      dup5\n        /* \"#utility.yul\":4680:4698   */\n      add\n        /* \"#utility.yul\":4661:4699   */\n      tag_269\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4651:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4445:4705   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4710:5147   */\n    tag_87:\n        /* \"#utility.yul\":4789:4790   */\n      0x01\n        /* \"#utility.yul\":4785:4797   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4832:4844   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4853:4914   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4907:4911   */\n      0x7f\n        /* \"#utility.yul\":4899:4905   */\n      dup3\n        /* \"#utility.yul\":4895:4912   */\n      and\n        /* \"#utility.yul\":4885:4912   */\n      swap2\n      pop\n        /* \"#utility.yul\":4853:4914   */\n    tag_318:\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":4952:4958   */\n      dup3\n        /* \"#utility.yul\":4949:4963   */\n      lt\n        /* \"#utility.yul\":4929:4947   */\n      dup2\n        /* \"#utility.yul\":4926:4964   */\n      sub\n        /* \"#utility.yul\":4923:5141   */\n      tag_319\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4987:5075   */\n      mstore\n        /* \"#utility.yul\":5098:5102   */\n      0x22\n        /* \"#utility.yul\":5095:5096   */\n      0x04\n        /* \"#utility.yul\":5088:5103   */\n      mstore\n        /* \"#utility.yul\":5126:5130   */\n      0x24\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5116:5131   */\n      revert\n        /* \"#utility.yul\":4923:5141   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":4710:5147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5767   */\n    tag_270:\n        /* \"#utility.yul\":5597:5600   */\n      0x00\n        /* \"#utility.yul\":5635:5640   */\n      dup2\n        /* \"#utility.yul\":5629:5641   */\n      mload\n        /* \"#utility.yul\":5679:5685   */\n      dup1\n        /* \"#utility.yul\":5672:5676   */\n      0x20\n        /* \"#utility.yul\":5665:5670   */\n      dup5\n        /* \"#utility.yul\":5661:5677   */\n      add\n        /* \"#utility.yul\":5656:5659   */\n      dup6\n        /* \"#utility.yul\":5650:5686   */\n      mcopy\n        /* \"#utility.yul\":5741:5742   */\n      0x00\n        /* \"#utility.yul\":5705:5721   */\n      swap4\n      add\n        /* \"#utility.yul\":5730:5743   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":5705:5721   */\n      swap1\n      swap2\n        /* \"#utility.yul\":5555:5767   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5772:6039   */\n    tag_149:\n        /* \"#utility.yul\":5951:5954   */\n      0x00\n        /* \"#utility.yul\":5976:6033   */\n      tag_259\n        /* \"#utility.yul\":6002:6032   */\n      tag_324\n        /* \"#utility.yul\":6028:6031   */\n      dup4\n        /* \"#utility.yul\":6020:6026   */\n      dup7\n        /* \"#utility.yul\":6002:6032   */\n      tag_270\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5994:6000   */\n      dup5\n        /* \"#utility.yul\":5976:6033   */\n      tag_270\n      jump\t// in\n        /* \"#utility.yul\":6044:6567   */\n    tag_180:\n        /* \"#utility.yul\":6238:6242   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6348:6350   */\n      dup1\n        /* \"#utility.yul\":6340:6346   */\n      dup8\n        /* \"#utility.yul\":6336:6351   */\n      and\n        /* \"#utility.yul\":6325:6334   */\n      dup4\n        /* \"#utility.yul\":6318:6352   */\n      mstore\n        /* \"#utility.yul\":6400:6402   */\n      dup1\n        /* \"#utility.yul\":6392:6398   */\n      dup7\n        /* \"#utility.yul\":6388:6403   */\n      and\n        /* \"#utility.yul\":6383:6385   */\n      0x20\n        /* \"#utility.yul\":6372:6381   */\n      dup5\n        /* \"#utility.yul\":6368:6386   */\n      add\n        /* \"#utility.yul\":6361:6404   */\n      mstore\n      pop\n        /* \"#utility.yul\":6440:6446   */\n      dup4\n        /* \"#utility.yul\":6435:6437   */\n      0x40\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6438   */\n      add\n        /* \"#utility.yul\":6413:6447   */\n      mstore\n        /* \"#utility.yul\":6483:6486   */\n      0x80\n        /* \"#utility.yul\":6478:6480   */\n      0x60\n        /* \"#utility.yul\":6467:6476   */\n      dup4\n        /* \"#utility.yul\":6463:6481   */\n      add\n        /* \"#utility.yul\":6456:6487   */\n      mstore\n        /* \"#utility.yul\":6504:6561   */\n      tag_326\n        /* \"#utility.yul\":6556:6559   */\n      0x80\n        /* \"#utility.yul\":6545:6554   */\n      dup4\n        /* \"#utility.yul\":6541:6560   */\n      add\n        /* \"#utility.yul\":6533:6539   */\n      dup5\n        /* \"#utility.yul\":6504:6561   */\n      tag_268\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6496:6561   */\n      swap7\n        /* \"#utility.yul\":6044:6567   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6572:6821   */\n    tag_183:\n        /* \"#utility.yul\":6641:6647   */\n      0x00\n        /* \"#utility.yul\":6694:6696   */\n      0x20\n        /* \"#utility.yul\":6682:6691   */\n      dup3\n        /* \"#utility.yul\":6673:6680   */\n      dup5\n        /* \"#utility.yul\":6669:6692   */\n      sub\n        /* \"#utility.yul\":6665:6697   */\n      slt\n        /* \"#utility.yul\":6662:6714   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6710:6711   */\n      0x00\n        /* \"#utility.yul\":6707:6708   */\n      dup1\n        /* \"#utility.yul\":6700:6712   */\n      revert\n        /* \"#utility.yul\":6662:6714   */\n    tag_328:\n        /* \"#utility.yul\":6742:6751   */\n      dup2\n        /* \"#utility.yul\":6736:6752   */\n      mload\n        /* \"#utility.yul\":6761:6791   */\n      tag_145\n        /* \"#utility.yul\":6785:6790   */\n      dup2\n        /* \"#utility.yul\":6761:6791   */\n      tag_267\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220fb44cc82375c9ec73676d5d27d2f35dc54d7385a6c6474ae4f8b434a9f6371b864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:15",
										"nodeType": "YulBlock",
										"src": "0:2698:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:15",
													"nodeType": "YulBlock",
													"src": "46:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:15",
																		"nodeType": "YulLiteral",
																		"src": "63:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:15",
																				"nodeType": "YulLiteral",
																				"src": "70:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:15",
																				"nodeType": "YulLiteral",
																				"src": "75:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:15"
																		},
																		"nativeSrc": "66:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:15"
																},
																"nativeSrc": "56:31:15",
																"nodeType": "YulFunctionCall",
																"src": "56:31:15"
															},
															"nativeSrc": "56:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:15",
																		"nodeType": "YulLiteral",
																		"src": "103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:15",
																		"nodeType": "YulLiteral",
																		"src": "106:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:15"
																},
																"nativeSrc": "96:15:15",
																"nodeType": "YulFunctionCall",
																"src": "96:15:15"
															},
															"nativeSrc": "96:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:15",
																		"nodeType": "YulLiteral",
																		"src": "127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:15",
																		"nodeType": "YulLiteral",
																		"src": "130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:15"
																},
																"nativeSrc": "120:15:15",
																"nodeType": "YulFunctionCall",
																"src": "120:15:15"
															},
															"nativeSrc": "120:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:15"
											},
											{
												"body": {
													"nativeSrc": "201:325:15",
													"nodeType": "YulBlock",
													"src": "201:325:15",
													"statements": [
														{
															"nativeSrc": "211:22:15",
															"nodeType": "YulAssignment",
															"src": "211:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:15",
																		"nodeType": "YulLiteral",
																		"src": "225:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:15"
																},
																"nativeSrc": "221:12:15",
																"nodeType": "YulFunctionCall",
																"src": "221:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:15"
																}
															]
														},
														{
															"nativeSrc": "242:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:15",
																		"nodeType": "YulLiteral",
																		"src": "278:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:15"
																},
																"nativeSrc": "268:12:15",
																"nodeType": "YulFunctionCall",
																"src": "268:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:15",
																	"nodeType": "YulTypedName",
																	"src": "246:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:15",
																"nodeType": "YulBlock",
																"src": "319:31:15",
																"statements": [
																	{
																		"nativeSrc": "321:27:15",
																		"nodeType": "YulAssignment",
																		"src": "321:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:15",
																					"nodeType": "YulLiteral",
																					"src": "343:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:15"
																			},
																			"nativeSrc": "331:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:15"
																},
																"nativeSrc": "292:26:15",
																"nodeType": "YulFunctionCall",
																"src": "292:26:15"
															},
															"nativeSrc": "289:61:15",
															"nodeType": "YulIf",
															"src": "289:61:15"
														},
														{
															"body": {
																"nativeSrc": "409:111:15",
																"nodeType": "YulBlock",
																"src": "409:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:15",
																					"nodeType": "YulLiteral",
																					"src": "430:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:15",
																							"nodeType": "YulLiteral",
																							"src": "437:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:15",
																							"nodeType": "YulLiteral",
																							"src": "442:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:15"
																					},
																					"nativeSrc": "433:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:15"
																			},
																			"nativeSrc": "423:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:15"
																		},
																		"nativeSrc": "423:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:15",
																					"nodeType": "YulLiteral",
																					"src": "474:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:15",
																					"nodeType": "YulLiteral",
																					"src": "477:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:15"
																			},
																			"nativeSrc": "467:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:15"
																		},
																		"nativeSrc": "467:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:15",
																					"nodeType": "YulLiteral",
																					"src": "502:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:15",
																					"nodeType": "YulLiteral",
																					"src": "505:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:15"
																			},
																			"nativeSrc": "495:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:15"
																		},
																		"nativeSrc": "495:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:15",
																				"nodeType": "YulLiteral",
																				"src": "396:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:15"
																		},
																		"nativeSrc": "385:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:15"
																},
																"nativeSrc": "362:38:15",
																"nodeType": "YulFunctionCall",
																"src": "362:38:15"
															},
															"nativeSrc": "359:161:15",
															"nodeType": "YulIf",
															"src": "359:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:15",
														"nodeType": "YulTypedName",
														"src": "181:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:15",
														"nodeType": "YulTypedName",
														"src": "190:6:15",
														"type": ""
													}
												],
												"src": "146:380:15"
											},
											{
												"body": {
													"nativeSrc": "587:65:15",
													"nodeType": "YulBlock",
													"src": "587:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:15",
																		"nodeType": "YulLiteral",
																		"src": "604:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:15"
																},
																"nativeSrc": "597:14:15",
																"nodeType": "YulFunctionCall",
																"src": "597:14:15"
															},
															"nativeSrc": "597:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:15"
														},
														{
															"nativeSrc": "620:26:15",
															"nodeType": "YulAssignment",
															"src": "620:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:15",
																		"nodeType": "YulLiteral",
																		"src": "638:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:15",
																		"nodeType": "YulLiteral",
																		"src": "641:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:15"
																},
																"nativeSrc": "628:18:15",
																"nodeType": "YulFunctionCall",
																"src": "628:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:15",
														"nodeType": "YulTypedName",
														"src": "570:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:15",
														"nodeType": "YulTypedName",
														"src": "578:4:15",
														"type": ""
													}
												],
												"src": "531:121:15"
											},
											{
												"body": {
													"nativeSrc": "738:437:15",
													"nodeType": "YulBlock",
													"src": "738:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:15",
																"nodeType": "YulBlock",
																"src": "771:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:15",
																					"nodeType": "YulLiteral",
																					"src": "792:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:15"
																			},
																			"nativeSrc": "785:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:15"
																		},
																		"nativeSrc": "785:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:15"
																	},
																	{
																		"nativeSrc": "814:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:15",
																					"nodeType": "YulLiteral",
																					"src": "836:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:15",
																					"nodeType": "YulLiteral",
																					"src": "839:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:15"
																			},
																			"nativeSrc": "826:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:15",
																				"nodeType": "YulTypedName",
																				"src": "818:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:15",
																							"nodeType": "YulLiteral",
																							"src": "890:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:15",
																									"nodeType": "YulLiteral",
																									"src": "909:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:15"
																							},
																							"nativeSrc": "893:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:15"
																					},
																					"nativeSrc": "886:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:15"
																			},
																			"nativeSrc": "876:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:15",
																				"nodeType": "YulTypedName",
																				"src": "861:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:15",
																			"nodeType": "YulBlock",
																			"src": "951:23:15",
																			"statements": [
																				{
																					"nativeSrc": "953:19:15",
																					"nodeType": "YulAssignment",
																					"src": "953:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:15",
																					"nodeType": "YulLiteral",
																					"src": "945:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:15"
																			},
																			"nativeSrc": "930:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:15"
																		},
																		"nativeSrc": "927:47:15",
																		"nodeType": "YulIf",
																		"src": "927:47:15"
																	},
																	{
																		"nativeSrc": "987:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:15"
																							},
																							"nativeSrc": "1014:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:15"
																					},
																					"nativeSrc": "1007:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:15"
																			},
																			"nativeSrc": "997:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:15",
																				"nodeType": "YulTypedName",
																				"src": "991:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:15",
																			"nodeType": "YulBlock",
																			"src": "1139:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:15"
																						},
																						"nativeSrc": "1141:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:15"
																					},
																					"nativeSrc": "1141:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:15"
																			},
																			"nativeSrc": "1086:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:15"
																		},
																		"nativeSrc": "1078:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:15",
																			"nodeType": "YulBlock",
																			"src": "1100:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:15"
																						},
																						"nativeSrc": "1111:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:15",
																			"nodeType": "YulBlock",
																			"src": "1082:3:15",
																			"statements": []
																		},
																		"src": "1078:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:15",
																		"nodeType": "YulLiteral",
																		"src": "759:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:15"
																},
																"nativeSrc": "751:11:15",
																"nodeType": "YulFunctionCall",
																"src": "751:11:15"
															},
															"nativeSrc": "748:421:15",
															"nodeType": "YulIf",
															"src": "748:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:15",
														"nodeType": "YulTypedName",
														"src": "710:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:15",
														"nodeType": "YulTypedName",
														"src": "717:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:15",
														"nodeType": "YulTypedName",
														"src": "722:10:15",
														"type": ""
													}
												],
												"src": "657:518:15"
											},
											{
												"body": {
													"nativeSrc": "1265:81:15",
													"nodeType": "YulBlock",
													"src": "1265:81:15",
													"statements": [
														{
															"nativeSrc": "1275:65:15",
															"nodeType": "YulAssignment",
															"src": "1275:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:15"
																								},
																								"nativeSrc": "1304:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:15"
																								},
																								"nativeSrc": "1317:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:15"
																						},
																						"nativeSrc": "1300:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:15"
																				},
																				"nativeSrc": "1296:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:15"
																		},
																		"nativeSrc": "1286:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:15"
																		},
																		"nativeSrc": "1328:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:15"
																},
																"nativeSrc": "1283:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:15",
														"nodeType": "YulTypedName",
														"src": "1242:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:15",
														"nodeType": "YulTypedName",
														"src": "1248:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:15",
														"nodeType": "YulTypedName",
														"src": "1256:4:15",
														"type": ""
													}
												],
												"src": "1180:166:15"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:15",
													"nodeType": "YulBlock",
													"src": "1447:1249:15",
													"statements": [
														{
															"nativeSrc": "1457:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:15"
																},
																"nativeSrc": "1471:10:15",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:15",
																"nodeType": "YulBlock",
																"src": "1524:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:15"
																			},
																			"nativeSrc": "1526:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:15"
																		},
																		"nativeSrc": "1526:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:15",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:15"
																				},
																				"nativeSrc": "1508:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:15"
																		},
																		"nativeSrc": "1504:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:15"
																},
																"nativeSrc": "1493:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:15"
															},
															"nativeSrc": "1490:56:15",
															"nodeType": "YulIf",
															"src": "1490:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:15"
																				},
																				"nativeSrc": "1631:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:15"
																		},
																		"nativeSrc": "1605:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:15"
																},
																"nativeSrc": "1555:97:15",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:15"
															},
															"nativeSrc": "1555:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:15"
														},
														{
															"nativeSrc": "1661:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:15",
																"nodeType": "YulLiteral",
																"src": "1678:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:15",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:15",
																"nodeType": "YulLiteral",
																"src": "1707:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:15",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:15",
															"nodeType": "YulAssignment",
															"src": "1720:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:15",
																"nodeType": "YulLiteral",
																"src": "1733:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:15",
																		"nodeType": "YulBlock",
																		"src": "1783:656:15",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:15"
																							},
																							"nativeSrc": "1824:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:15"
																					},
																					"nativeSrc": "1812:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:15",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:15"
																					},
																					"nativeSrc": "1859:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:15",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:15",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:15",
																					"nodeType": "YulBlock",
																					"src": "1994:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:15"
																												},
																												"nativeSrc": "2033:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:15"
																										},
																										"nativeSrc": "2027:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:15"
																								},
																								"nativeSrc": "2012:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:15"
																							},
																							"nativeSrc": "2012:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:15"
																						},
																						{
																							"nativeSrc": "2071:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:15"
																								},
																								"nativeSrc": "2081:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:15",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:15"
																								},
																								"nativeSrc": "2125:27:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:15"
																					},
																					"nativeSrc": "1938:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:15"
																				},
																				"nativeSrc": "1930:236:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:15",
																					"nodeType": "YulBlock",
																					"src": "1953:28:15",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:15",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:15"
																								},
																								"nativeSrc": "1960:19:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:15",
																					"nodeType": "YulBlock",
																					"src": "1934:3:15",
																					"statements": []
																				},
																				"src": "1930:236:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:15",
																					"nodeType": "YulBlock",
																					"src": "2214:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:15"
																										},
																										"nativeSrc": "2255:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:15"
																								},
																								"nativeSrc": "2249:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:15"
																																		},
																																		"nativeSrc": "2334:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:15"
																																},
																																"nativeSrc": "2330:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:15"
																																},
																																"nativeSrc": "2356:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:15"
																														},
																														"nativeSrc": "2326:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:15"
																												},
																												"nativeSrc": "2322:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:15"
																										},
																										"nativeSrc": "2307:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:15"
																								},
																								"nativeSrc": "2292:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:15"
																							},
																							"nativeSrc": "2292:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:15"
																					},
																					"nativeSrc": "2182:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:15"
																				},
																				"nativeSrc": "2179:201:15",
																				"nodeType": "YulIf",
																				"src": "2179:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:15",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:15"
																									},
																									"nativeSrc": "2410:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:15",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:15"
																							},
																							"nativeSrc": "2406:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:15"
																					},
																					"nativeSrc": "2393:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:15"
																				},
																				"nativeSrc": "2393:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:15"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:15",
																	"nodeType": "YulCase",
																	"src": "1776:663:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:15",
																		"nodeType": "YulBlock",
																		"src": "2456:234:15",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:15",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:15",
																					"nodeType": "YulBlock",
																					"src": "2519:67:15",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:15",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:15"
																										},
																										"nativeSrc": "2552:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:15"
																								},
																								"nativeSrc": "2546:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:15"
																				},
																				"nativeSrc": "2497:89:15",
																				"nodeType": "YulIf",
																				"src": "2497:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:15"
																							},
																							"nativeSrc": "2612:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:15"
																					},
																					"nativeSrc": "2599:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:15"
																				},
																				"nativeSrc": "2599:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:15"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:15",
																	"nodeType": "YulCase",
																	"src": "2448:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:15"
																},
																"nativeSrc": "1753:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:15"
															},
															"nativeSrc": "1746:944:15",
															"nodeType": "YulSwitch",
															"src": "1746:944:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:15",
														"nodeType": "YulTypedName",
														"src": "1432:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:15",
														"nodeType": "YulTypedName",
														"src": "1438:3:15",
														"type": ""
													}
												],
												"src": "1351:1345:15"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2A32B9BA102A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x54544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x10F JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x6A DUP3 DUP3 PUSH2 0x10F JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP PUSH2 0x1CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xE8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x128 JUMPI PUSH2 0x128 PUSH2 0x77 JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x136 DUP5 SLOAD PUSH2 0x8B JUMP JUMPDEST DUP5 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x158 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1C6 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x17E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BA JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10D6 DUP1 PUSH2 0x1DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x43508B05 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2B1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x384 DUP3 PUSH2 0x5E2 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x3AC DUP3 DUP3 CALLER PUSH2 0x61A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3EA DUP4 DUP4 CALLER PUSH2 0x627 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x471 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x559 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x524F409B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH2 0x4C5 DUP4 PUSH1 0x6 SLOAD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH0 PUSH2 0x2E5 DUP3 PUSH2 0x5E2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x3AC CALLER DUP4 DUP4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x564 DUP5 DUP5 DUP5 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x451 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x57C DUP3 PUSH2 0x5E2 JUMP JUMPDEST POP PUSH0 PUSH2 0x592 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5DB JUMP JUMPDEST DUP1 PUSH2 0x5BA DUP5 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CB SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x471 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9BB JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 DUP2 DUP5 DUP7 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x68D JUMPI PUSH2 0x66E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3AC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x838 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x104A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x872 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x86F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x92A DUP4 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x949 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x973 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x97D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xAC7 JUMPI PUSH0 PUSH2 0x9DE DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA0A JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xAC5 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB0E DUP4 DUP4 DUP4 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x471 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x471 CALLER PUSH0 DUP6 DUP6 DUP6 PUSH2 0x7F6 JUMP JUMPDEST PUSH0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xBDF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC0B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC29 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC41 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC55 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC67 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E5 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCF3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xCD0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xCF3 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH0 PUSH2 0xD30 DUP4 DUP4 PUSH0 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5DB DUP2 PUSH2 0xD75 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5DB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE15 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE34 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE5D DUP5 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP PUSH2 0xE6B PUSH1 0x20 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEFD DUP6 PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH2 0xF0B PUSH1 0x20 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF53 JUMPI PUSH2 0xF53 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0xECD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD0 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE PUSH1 0x20 DUP5 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1019 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF3 PUSH2 0x1044 DUP4 DUP7 PUSH2 0x101F JUMP JUMPDEST DUP5 PUSH2 0x101F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x107B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5DB DUP2 PUSH2 0xD75 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PREVRANDAO 0xCC DUP3 CALLDATACOPY TLOAD SWAP15 0xC7 CALLDATASIZE PUSH23 0xD5D27D2F35DC54D7385A6C6474AE4F8B434A9F6371B864 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "177:601:0:-:0;;;339:77;;;;;;;;;;1380:113:2;;;;;;;;;;;;;-1:-1:-1;;;1380:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:2;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:2;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;407:1:0::1;392:12;:16:::0;-1:-1:-1;177:601:0;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:15;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:15;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:15;;;2546:26;2497:89;-1:-1:-1;;1308:1:15;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:15;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:15;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;177:601:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1018": {
									"entryPoint": 1562,
									"id": 1018,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1084": {
									"entryPoint": 2491,
									"id": 1084,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_658": {
									"entryPoint": 2819,
									"id": 658,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getApproved_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_621": {
									"entryPoint": 3192,
									"id": 621,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_814": {
									"entryPoint": 3323,
									"id": 814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1403": {
									"entryPoint": null,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_572": {
									"entryPoint": null,
									"id": 572,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1150": {
									"entryPoint": 1506,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_829": {
									"entryPoint": 1830,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_859": {
									"entryPoint": 2944,
									"id": 859,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1121": {
									"entryPoint": 1855,
									"id": 1121,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_764": {
									"entryPoint": 1575,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_415": {
									"entryPoint": 929,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_323": {
									"entryPoint": 1249,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchMint_56": {
									"entryPoint": 1142,
									"id": 56,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@checkOnERC721Received_1390": {
									"entryPoint": 2038,
									"id": 1390,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@getApproved_432": {
									"entryPoint": 890,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3121": {
									"entryPoint": 2967,
									"id": 3121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 747,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_336": {
									"entryPoint": 1239,
									"id": 336,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_529": {
									"entryPoint": 1111,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_559": {
									"entryPoint": 1369,
									"id": 559,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_448": {
									"entryPoint": 1358,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1751": {
									"entryPoint": null,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_295": {
									"entryPoint": 591,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 1343,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1541": {
									"entryPoint": 2334,
									"id": 1541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_390": {
									"entryPoint": 1393,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_511": {
									"entryPoint": 944,
									"id": 511,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7314:15",
										"nodeType": "YulBlock",
										"src": "0:7314:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:15",
													"nodeType": "YulBlock",
													"src": "58:133:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:15",
																"nodeType": "YulBlock",
																"src": "169:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:15",
																					"nodeType": "YulLiteral",
																					"src": "178:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:15",
																					"nodeType": "YulLiteral",
																					"src": "181:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:15"
																			},
																			"nativeSrc": "171:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:15"
																		},
																		"nativeSrc": "171:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:15",
																						"nodeType": "YulLiteral",
																						"src": "99:66:15",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nativeSrc": "88:78:15",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nativeSrc": "78:89:15",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nativeSrc": "71:97:15",
																"nodeType": "YulFunctionCall",
																"src": "71:97:15"
															},
															"nativeSrc": "68:117:15",
															"nodeType": "YulIf",
															"src": "68:117:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:15",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:177:15"
											},
											{
												"body": {
													"nativeSrc": "265:176:15",
													"nodeType": "YulBlock",
													"src": "265:176:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:15",
																"nodeType": "YulBlock",
																"src": "311:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:15",
																					"nodeType": "YulLiteral",
																					"src": "320:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:15",
																					"nodeType": "YulLiteral",
																					"src": "323:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:15"
																			},
																			"nativeSrc": "313:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:15"
																		},
																		"nativeSrc": "313:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:15"
																		},
																		"nativeSrc": "282:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:15",
																		"nodeType": "YulLiteral",
																		"src": "307:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:15"
																},
																"nativeSrc": "278:32:15",
																"nodeType": "YulFunctionCall",
																"src": "278:32:15"
															},
															"nativeSrc": "275:52:15",
															"nodeType": "YulIf",
															"src": "275:52:15"
														},
														{
															"nativeSrc": "336:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:15"
																},
																"nativeSrc": "349:23:15",
																"nodeType": "YulFunctionCall",
																"src": "349:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:15",
																	"nodeType": "YulTypedName",
																	"src": "340:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:15"
																},
																"nativeSrc": "381:30:15",
																"nodeType": "YulFunctionCall",
																"src": "381:30:15"
															},
															"nativeSrc": "381:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:15"
														},
														{
															"nativeSrc": "420:15:15",
															"nodeType": "YulAssignment",
															"src": "420:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:15",
																"nodeType": "YulIdentifier",
																"src": "430:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:15",
														"nodeType": "YulTypedName",
														"src": "231:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:15",
														"nodeType": "YulTypedName",
														"src": "242:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:15",
														"nodeType": "YulTypedName",
														"src": "254:6:15",
														"type": ""
													}
												],
												"src": "196:245:15"
											},
											{
												"body": {
													"nativeSrc": "541:92:15",
													"nodeType": "YulBlock",
													"src": "541:92:15",
													"statements": [
														{
															"nativeSrc": "551:26:15",
															"nodeType": "YulAssignment",
															"src": "551:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:15",
																		"nodeType": "YulLiteral",
																		"src": "574:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:15"
																},
																"nativeSrc": "559:18:15",
																"nodeType": "YulFunctionCall",
																"src": "559:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:15"
																				},
																				"nativeSrc": "611:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:15"
																		},
																		"nativeSrc": "604:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:15"
																},
																"nativeSrc": "586:41:15",
																"nodeType": "YulFunctionCall",
																"src": "586:41:15"
															},
															"nativeSrc": "586:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:15",
														"nodeType": "YulTypedName",
														"src": "510:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:15",
														"nodeType": "YulTypedName",
														"src": "521:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:15",
														"nodeType": "YulTypedName",
														"src": "532:4:15",
														"type": ""
													}
												],
												"src": "446:187:15"
											},
											{
												"body": {
													"nativeSrc": "699:239:15",
													"nodeType": "YulBlock",
													"src": "699:239:15",
													"statements": [
														{
															"nativeSrc": "709:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "709:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "723:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "723:5:15"
																},
																"nativeSrc": "723:12:15",
																"nodeType": "YulFunctionCall",
																"src": "723:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "713:6:15",
																	"nodeType": "YulTypedName",
																	"src": "713:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "751:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "751:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "756:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:15"
																},
																"nativeSrc": "744:19:15",
																"nodeType": "YulFunctionCall",
																"src": "744:19:15"
															},
															"nativeSrc": "744:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "744:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "782:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:4:15",
																				"nodeType": "YulLiteral",
																				"src": "787:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "778:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:15"
																		},
																		"nativeSrc": "778:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "778:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "798:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "798:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "805:4:15",
																				"nodeType": "YulLiteral",
																				"src": "805:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:15"
																		},
																		"nativeSrc": "794:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "794:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "812:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:15"
																},
																"nativeSrc": "772:47:15",
																"nodeType": "YulFunctionCall",
																"src": "772:47:15"
															},
															"nativeSrc": "772:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "772:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "843:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "843:3:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "848:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "848:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "839:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:15"
																				},
																				"nativeSrc": "839:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "839:16:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "857:4:15",
																				"nodeType": "YulLiteral",
																				"src": "857:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "835:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:15"
																		},
																		"nativeSrc": "835:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "835:27:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:15",
																		"nodeType": "YulLiteral",
																		"src": "864:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "828:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:15"
																},
																"nativeSrc": "828:38:15",
																"nodeType": "YulFunctionCall",
																"src": "828:38:15"
															},
															"nativeSrc": "828:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "828:38:15"
														},
														{
															"nativeSrc": "875:57:15",
															"nodeType": "YulAssignment",
															"src": "875:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "890:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "890:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "903:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "903:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "911:2:15",
																								"nodeType": "YulLiteral",
																								"src": "911:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "899:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "899:3:15"
																						},
																						"nativeSrc": "899:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "899:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "920:2:15",
																								"nodeType": "YulLiteral",
																								"src": "920:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "916:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "916:3:15"
																						},
																						"nativeSrc": "916:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "916:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "895:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:15"
																				},
																				"nativeSrc": "895:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "895:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:15"
																		},
																		"nativeSrc": "886:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "886:39:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "927:4:15",
																		"nodeType": "YulLiteral",
																		"src": "927:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "882:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:15"
																},
																"nativeSrc": "882:50:15",
																"nodeType": "YulFunctionCall",
																"src": "882:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "875:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "638:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "676:5:15",
														"nodeType": "YulTypedName",
														"src": "676:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "683:3:15",
														"nodeType": "YulTypedName",
														"src": "683:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "691:3:15",
														"nodeType": "YulTypedName",
														"src": "691:3:15",
														"type": ""
													}
												],
												"src": "638:300:15"
											},
											{
												"body": {
													"nativeSrc": "1064:110:15",
													"nodeType": "YulBlock",
													"src": "1064:110:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1081:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1092:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1074:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:15"
																},
																"nativeSrc": "1074:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1074:21:15"
															},
															"nativeSrc": "1074:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1074:21:15"
														},
														{
															"nativeSrc": "1104:64:15",
															"nodeType": "YulAssignment",
															"src": "1104:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1141:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1164:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1164:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1149:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:15"
																		},
																		"nativeSrc": "1149:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1112:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "1112:28:15"
																},
																"nativeSrc": "1112:56:15",
																"nodeType": "YulFunctionCall",
																"src": "1112:56:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1104:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1104:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "943:231:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1033:9:15",
														"nodeType": "YulTypedName",
														"src": "1033:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1044:6:15",
														"nodeType": "YulTypedName",
														"src": "1044:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1055:4:15",
														"nodeType": "YulTypedName",
														"src": "1055:4:15",
														"type": ""
													}
												],
												"src": "943:231:15"
											},
											{
												"body": {
													"nativeSrc": "1249:110:15",
													"nodeType": "YulBlock",
													"src": "1249:110:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:15",
																"nodeType": "YulBlock",
																"src": "1295:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:15"
																			},
																			"nativeSrc": "1297:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:15"
																		},
																		"nativeSrc": "1297:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1270:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1266:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:15"
																		},
																		"nativeSrc": "1266:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1262:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:15"
																},
																"nativeSrc": "1262:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:15"
															},
															"nativeSrc": "1259:52:15",
															"nodeType": "YulIf",
															"src": "1259:52:15"
														},
														{
															"nativeSrc": "1320:33:15",
															"nodeType": "YulAssignment",
															"src": "1320:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1330:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:15"
																},
																"nativeSrc": "1330:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1330:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1320:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1179:180:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:15",
														"nodeType": "YulTypedName",
														"src": "1215:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1226:7:15",
														"nodeType": "YulTypedName",
														"src": "1226:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1238:6:15",
														"nodeType": "YulTypedName",
														"src": "1238:6:15",
														"type": ""
													}
												],
												"src": "1179:180:15"
											},
											{
												"body": {
													"nativeSrc": "1465:125:15",
													"nodeType": "YulBlock",
													"src": "1465:125:15",
													"statements": [
														{
															"nativeSrc": "1475:26:15",
															"nodeType": "YulAssignment",
															"src": "1475:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:15"
																},
																"nativeSrc": "1483:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1532:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1540:42:15",
																				"nodeType": "YulLiteral",
																				"src": "1540:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:15"
																		},
																		"nativeSrc": "1528:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:15"
																},
																"nativeSrc": "1510:74:15",
																"nodeType": "YulFunctionCall",
																"src": "1510:74:15"
															},
															"nativeSrc": "1510:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "1510:74:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1364:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:15",
														"nodeType": "YulTypedName",
														"src": "1434:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:15",
														"nodeType": "YulTypedName",
														"src": "1445:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:15",
														"nodeType": "YulTypedName",
														"src": "1456:4:15",
														"type": ""
													}
												],
												"src": "1364:226:15"
											},
											{
												"body": {
													"nativeSrc": "1644:147:15",
													"nodeType": "YulBlock",
													"src": "1644:147:15",
													"statements": [
														{
															"nativeSrc": "1654:29:15",
															"nodeType": "YulAssignment",
															"src": "1654:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1676:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:15"
																},
																"nativeSrc": "1663:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1663:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1769:16:15",
																"nodeType": "YulBlock",
																"src": "1769:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1778:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1771:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:15"
																			},
																			"nativeSrc": "1771:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:15"
																		},
																		"nativeSrc": "1771:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1705:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1705:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1716:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1716:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1723:42:15",
																						"nodeType": "YulLiteral",
																						"src": "1723:42:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1712:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1712:3:15"
																				},
																				"nativeSrc": "1712:54:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1712:54:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1702:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1702:2:15"
																		},
																		"nativeSrc": "1702:65:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1702:65:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1695:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:15"
																},
																"nativeSrc": "1695:73:15",
																"nodeType": "YulFunctionCall",
																"src": "1695:73:15"
															},
															"nativeSrc": "1692:93:15",
															"nodeType": "YulIf",
															"src": "1692:93:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1595:196:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1623:6:15",
														"nodeType": "YulTypedName",
														"src": "1623:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1634:5:15",
														"nodeType": "YulTypedName",
														"src": "1634:5:15",
														"type": ""
													}
												],
												"src": "1595:196:15"
											},
											{
												"body": {
													"nativeSrc": "1883:167:15",
													"nodeType": "YulBlock",
													"src": "1883:167:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1929:16:15",
																"nodeType": "YulBlock",
																"src": "1929:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1938:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1938:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1941:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1931:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:15"
																			},
																			"nativeSrc": "1931:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:15"
																		},
																		"nativeSrc": "1931:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1913:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1913:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:15"
																		},
																		"nativeSrc": "1900:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1925:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1896:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:15"
																},
																"nativeSrc": "1896:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1896:32:15"
															},
															"nativeSrc": "1893:52:15",
															"nodeType": "YulIf",
															"src": "1893:52:15"
														},
														{
															"nativeSrc": "1954:39:15",
															"nodeType": "YulAssignment",
															"src": "1954:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1964:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1964:18:15"
																},
																"nativeSrc": "1964:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1964:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1954:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:15"
																}
															]
														},
														{
															"nativeSrc": "2002:42:15",
															"nodeType": "YulAssignment",
															"src": "2002:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2029:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2040:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2040:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2025:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:15"
																		},
																		"nativeSrc": "2025:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2012:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2012:12:15"
																},
																"nativeSrc": "2012:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2012:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2002:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1796:254:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1841:9:15",
														"nodeType": "YulTypedName",
														"src": "1841:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1852:7:15",
														"nodeType": "YulTypedName",
														"src": "1852:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1864:6:15",
														"nodeType": "YulTypedName",
														"src": "1864:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1872:6:15",
														"nodeType": "YulTypedName",
														"src": "1872:6:15",
														"type": ""
													}
												],
												"src": "1796:254:15"
											},
											{
												"body": {
													"nativeSrc": "2159:224:15",
													"nodeType": "YulBlock",
													"src": "2159:224:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2205:16:15",
																"nodeType": "YulBlock",
																"src": "2205:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2207:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:15"
																			},
																			"nativeSrc": "2207:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:12:15"
																		},
																		"nativeSrc": "2207:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2180:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2180:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2189:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2176:3:15"
																		},
																		"nativeSrc": "2176:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2176:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2201:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2201:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2172:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:15"
																},
																"nativeSrc": "2172:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2172:32:15"
															},
															"nativeSrc": "2169:52:15",
															"nodeType": "YulIf",
															"src": "2169:52:15"
														},
														{
															"nativeSrc": "2230:39:15",
															"nodeType": "YulAssignment",
															"src": "2230:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2259:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2240:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2240:18:15"
																},
																"nativeSrc": "2240:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2240:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2230:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:15"
																}
															]
														},
														{
															"nativeSrc": "2278:48:15",
															"nodeType": "YulAssignment",
															"src": "2278:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2311:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2311:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2322:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2322:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2307:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:15"
																		},
																		"nativeSrc": "2307:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2307:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2288:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2288:18:15"
																},
																"nativeSrc": "2288:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2288:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2278:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:15"
																}
															]
														},
														{
															"nativeSrc": "2335:42:15",
															"nodeType": "YulAssignment",
															"src": "2335:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2362:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2362:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2373:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2373:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2358:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:15"
																		},
																		"nativeSrc": "2358:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2345:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2345:12:15"
																},
																"nativeSrc": "2345:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2345:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2335:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2055:328:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2109:9:15",
														"nodeType": "YulTypedName",
														"src": "2109:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2120:7:15",
														"nodeType": "YulTypedName",
														"src": "2120:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2132:6:15",
														"nodeType": "YulTypedName",
														"src": "2132:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2140:6:15",
														"nodeType": "YulTypedName",
														"src": "2140:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2148:6:15",
														"nodeType": "YulTypedName",
														"src": "2148:6:15",
														"type": ""
													}
												],
												"src": "2055:328:15"
											},
											{
												"body": {
													"nativeSrc": "2458:116:15",
													"nodeType": "YulBlock",
													"src": "2458:116:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2504:16:15",
																"nodeType": "YulBlock",
																"src": "2504:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2513:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2513:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2516:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2516:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2506:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2506:6:15"
																			},
																			"nativeSrc": "2506:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2506:12:15"
																		},
																		"nativeSrc": "2506:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2506:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2479:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2479:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2488:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2488:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2475:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2475:3:15"
																		},
																		"nativeSrc": "2475:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2475:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2500:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2471:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:15"
																},
																"nativeSrc": "2471:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2471:32:15"
															},
															"nativeSrc": "2468:52:15",
															"nodeType": "YulIf",
															"src": "2468:52:15"
														},
														{
															"nativeSrc": "2529:39:15",
															"nodeType": "YulAssignment",
															"src": "2529:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2558:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2558:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2539:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2539:18:15"
																},
																"nativeSrc": "2539:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2539:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2529:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2388:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2424:9:15",
														"nodeType": "YulTypedName",
														"src": "2424:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2435:7:15",
														"nodeType": "YulTypedName",
														"src": "2435:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2447:6:15",
														"nodeType": "YulTypedName",
														"src": "2447:6:15",
														"type": ""
													}
												],
												"src": "2388:186:15"
											},
											{
												"body": {
													"nativeSrc": "2680:76:15",
													"nodeType": "YulBlock",
													"src": "2680:76:15",
													"statements": [
														{
															"nativeSrc": "2690:26:15",
															"nodeType": "YulAssignment",
															"src": "2690:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2702:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2702:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2713:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2713:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2698:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:15"
																},
																"nativeSrc": "2698:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2698:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2690:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2690:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2732:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2732:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2743:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2743:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2725:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:15"
																},
																"nativeSrc": "2725:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2725:25:15"
															},
															"nativeSrc": "2725:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "2725:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2579:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2649:9:15",
														"nodeType": "YulTypedName",
														"src": "2649:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2660:6:15",
														"nodeType": "YulTypedName",
														"src": "2660:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2671:4:15",
														"nodeType": "YulTypedName",
														"src": "2671:4:15",
														"type": ""
													}
												],
												"src": "2579:177:15"
											},
											{
												"body": {
													"nativeSrc": "2845:263:15",
													"nodeType": "YulBlock",
													"src": "2845:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2891:16:15",
																"nodeType": "YulBlock",
																"src": "2891:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2900:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2903:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2893:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:15"
																			},
																			"nativeSrc": "2893:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2893:12:15"
																		},
																		"nativeSrc": "2893:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2866:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2866:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2862:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:15"
																		},
																		"nativeSrc": "2862:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2858:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:15"
																},
																"nativeSrc": "2858:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2858:32:15"
															},
															"nativeSrc": "2855:52:15",
															"nodeType": "YulIf",
															"src": "2855:52:15"
														},
														{
															"nativeSrc": "2916:39:15",
															"nodeType": "YulAssignment",
															"src": "2916:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2945:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2945:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2926:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2926:18:15"
																},
																"nativeSrc": "2926:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2926:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2916:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:15"
																}
															]
														},
														{
															"nativeSrc": "2964:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:15"
																		},
																		"nativeSrc": "2990:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2977:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2977:12:15"
																},
																"nativeSrc": "2977:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2977:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2968:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2968:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3062:16:15",
																"nodeType": "YulBlock",
																"src": "3062:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3071:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3071:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3074:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3064:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3064:6:15"
																			},
																			"nativeSrc": "3064:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3064:12:15"
																		},
																		"nativeSrc": "3064:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3031:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3031:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3052:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "3052:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3045:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "3045:6:15"
																						},
																						"nativeSrc": "3045:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3045:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3038:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3038:6:15"
																				},
																				"nativeSrc": "3038:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3038:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3028:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3028:2:15"
																		},
																		"nativeSrc": "3028:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3021:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3021:6:15"
																},
																"nativeSrc": "3021:40:15",
																"nodeType": "YulFunctionCall",
																"src": "3021:40:15"
															},
															"nativeSrc": "3018:60:15",
															"nodeType": "YulIf",
															"src": "3018:60:15"
														},
														{
															"nativeSrc": "3087:15:15",
															"nodeType": "YulAssignment",
															"src": "3087:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3097:5:15",
																"nodeType": "YulIdentifier",
																"src": "3097:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2761:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2803:9:15",
														"nodeType": "YulTypedName",
														"src": "2803:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2814:7:15",
														"nodeType": "YulTypedName",
														"src": "2814:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2826:6:15",
														"nodeType": "YulTypedName",
														"src": "2826:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2834:6:15",
														"nodeType": "YulTypedName",
														"src": "2834:6:15",
														"type": ""
													}
												],
												"src": "2761:347:15"
											},
											{
												"body": {
													"nativeSrc": "3145:152:15",
													"nodeType": "YulBlock",
													"src": "3145:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3162:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3162:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3165:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3165:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3155:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:15"
																},
																"nativeSrc": "3155:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3155:88:15"
															},
															"nativeSrc": "3155:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3155:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3259:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3259:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3262:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3262:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3252:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:15"
																},
																"nativeSrc": "3252:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3252:15:15"
															},
															"nativeSrc": "3252:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3252:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3283:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3286:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3286:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3276:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:15"
																},
																"nativeSrc": "3276:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3276:15:15"
															},
															"nativeSrc": "3276:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3276:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3113:184:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3113:184:15"
											},
											{
												"body": {
													"nativeSrc": "3432:1008:15",
													"nodeType": "YulBlock",
													"src": "3432:1008:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3479:16:15",
																"nodeType": "YulBlock",
																"src": "3479:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3488:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3488:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3491:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3491:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3481:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3481:6:15"
																			},
																			"nativeSrc": "3481:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:15"
																		},
																		"nativeSrc": "3481:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3481:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3462:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3449:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:15"
																		},
																		"nativeSrc": "3449:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3474:3:15",
																		"nodeType": "YulLiteral",
																		"src": "3474:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3445:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3445:3:15"
																},
																"nativeSrc": "3445:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3445:33:15"
															},
															"nativeSrc": "3442:53:15",
															"nodeType": "YulIf",
															"src": "3442:53:15"
														},
														{
															"nativeSrc": "3504:39:15",
															"nodeType": "YulAssignment",
															"src": "3504:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3533:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3533:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3514:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3514:18:15"
																},
																"nativeSrc": "3514:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3514:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3504:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:15"
																}
															]
														},
														{
															"nativeSrc": "3552:48:15",
															"nodeType": "YulAssignment",
															"src": "3552:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3585:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3585:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3596:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3596:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3581:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:15"
																		},
																		"nativeSrc": "3581:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3562:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3562:18:15"
																},
																"nativeSrc": "3562:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3562:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3552:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:15"
																}
															]
														},
														{
															"nativeSrc": "3609:42:15",
															"nodeType": "YulAssignment",
															"src": "3609:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3647:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3647:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3632:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:15"
																		},
																		"nativeSrc": "3632:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3619:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3619:12:15"
																},
																"nativeSrc": "3619:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3619:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:15"
																}
															]
														},
														{
															"nativeSrc": "3660:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3691:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3691:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3702:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3702:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3687:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:15"
																		},
																		"nativeSrc": "3687:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3674:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3674:12:15"
																},
																"nativeSrc": "3674:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3674:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3664:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3664:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3715:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3715:28:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3725:18:15",
																"nodeType": "YulLiteral",
																"src": "3725:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3719:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3719:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3770:16:15",
																"nodeType": "YulBlock",
																"src": "3770:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3772:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:15"
																			},
																			"nativeSrc": "3772:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:12:15"
																		},
																		"nativeSrc": "3772:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3758:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:15"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3766:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "3766:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3755:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3755:2:15"
																},
																"nativeSrc": "3755:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3755:14:15"
															},
															"nativeSrc": "3752:34:15",
															"nodeType": "YulIf",
															"src": "3752:34:15"
														},
														{
															"nativeSrc": "3795:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3795:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3809:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3820:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3820:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3805:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:15"
																},
																"nativeSrc": "3805:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3805:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3799:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3799:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3875:16:15",
																"nodeType": "YulBlock",
																"src": "3875:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3884:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3887:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3887:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3877:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:15"
																			},
																			"nativeSrc": "3877:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3877:12:15"
																		},
																		"nativeSrc": "3877:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3877:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3854:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "3854:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3858:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3858:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3850:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3850:3:15"
																				},
																				"nativeSrc": "3850:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3850:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3846:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:15"
																		},
																		"nativeSrc": "3846:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3839:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:15"
																},
																"nativeSrc": "3839:35:15",
																"nodeType": "YulFunctionCall",
																"src": "3839:35:15"
															},
															"nativeSrc": "3836:55:15",
															"nodeType": "YulIf",
															"src": "3836:55:15"
														},
														{
															"nativeSrc": "3900:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3923:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "3923:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3910:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3910:12:15"
																},
																"nativeSrc": "3910:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3910:16:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3904:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3904:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3949:22:15",
																"nodeType": "YulBlock",
																"src": "3949:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3951:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3951:16:15"
																			},
																			"nativeSrc": "3951:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:18:15"
																		},
																		"nativeSrc": "3951:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3951:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3941:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "3941:2:15"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3945:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "3945:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3938:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3938:2:15"
																},
																"nativeSrc": "3938:10:15",
																"nodeType": "YulFunctionCall",
																"src": "3938:10:15"
															},
															"nativeSrc": "3935:36:15",
															"nodeType": "YulIf",
															"src": "3935:36:15"
														},
														{
															"nativeSrc": "3980:17:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3980:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3994:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3990:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:15"
																},
																"nativeSrc": "3990:7:15",
																"nodeType": "YulFunctionCall",
																"src": "3990:7:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3984:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3984:2:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4006:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4026:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4020:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4020:5:15"
																},
																"nativeSrc": "4020:9:15",
																"nodeType": "YulFunctionCall",
																"src": "4020:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4010:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4010:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4038:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4038:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4060:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4060:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4084:2:15",
																										"nodeType": "YulIdentifier",
																										"src": "4084:2:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4088:4:15",
																										"nodeType": "YulLiteral",
																										"src": "4088:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4080:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4080:3:15"
																								},
																								"nativeSrc": "4080:13:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4080:13:15"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4095:2:15",
																								"nodeType": "YulIdentifier",
																								"src": "4095:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4076:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4076:3:15"
																						},
																						"nativeSrc": "4076:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4076:22:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4100:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4100:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4072:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:15"
																				},
																				"nativeSrc": "4072:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4072:31:15"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4105:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4105:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4068:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:15"
																		},
																		"nativeSrc": "4068:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4056:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:15"
																},
																"nativeSrc": "4056:53:15",
																"nodeType": "YulFunctionCall",
																"src": "4056:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4042:10:15",
																	"nodeType": "YulTypedName",
																	"src": "4042:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4168:22:15",
																"nodeType": "YulBlock",
																"src": "4168:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4170:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4170:16:15"
																			},
																			"nativeSrc": "4170:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4170:18:15"
																		},
																		"nativeSrc": "4170:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4170:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4127:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "4127:10:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4139:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4139:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4124:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4124:2:15"
																		},
																		"nativeSrc": "4124:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4124:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4147:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "4147:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4159:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4159:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4144:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4144:2:15"
																		},
																		"nativeSrc": "4144:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4121:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4121:2:15"
																},
																"nativeSrc": "4121:46:15",
																"nodeType": "YulFunctionCall",
																"src": "4121:46:15"
															},
															"nativeSrc": "4118:72:15",
															"nodeType": "YulIf",
															"src": "4118:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4206:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4206:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4210:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4210:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:15"
																},
																"nativeSrc": "4199:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4199:22:15"
															},
															"nativeSrc": "4199:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "4199:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4237:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4237:6:15"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4245:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4245:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:15"
																},
																"nativeSrc": "4230:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4230:18:15"
															},
															"nativeSrc": "4230:18:15",
															"nodeType": "YulExpressionStatement",
															"src": "4230:18:15"
														},
														{
															"body": {
																"nativeSrc": "4294:16:15",
																"nodeType": "YulBlock",
																"src": "4294:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4303:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4303:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4306:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4306:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4296:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4296:6:15"
																			},
																			"nativeSrc": "4296:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4296:12:15"
																		},
																		"nativeSrc": "4296:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4296:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4271:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4271:2:15"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4275:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4275:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4267:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4267:3:15"
																				},
																				"nativeSrc": "4267:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4267:11:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4263:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:15"
																		},
																		"nativeSrc": "4263:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4263:20:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4285:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4285:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4260:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4260:2:15"
																},
																"nativeSrc": "4260:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4260:33:15"
															},
															"nativeSrc": "4257:53:15",
															"nodeType": "YulIf",
															"src": "4257:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4336:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4344:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:15"
																		},
																		"nativeSrc": "4332:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4353:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4353:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4357:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4357:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:15"
																		},
																		"nativeSrc": "4349:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:11:15"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4362:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4362:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4319:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:15"
																},
																"nativeSrc": "4319:46:15",
																"nodeType": "YulFunctionCall",
																"src": "4319:46:15"
															},
															"nativeSrc": "4319:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "4319:46:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4389:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4389:6:15"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4397:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4397:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4385:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4385:3:15"
																				},
																				"nativeSrc": "4385:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4385:15:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4402:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4381:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:15"
																		},
																		"nativeSrc": "4381:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:24:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4407:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4407:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:15"
																},
																"nativeSrc": "4374:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4374:35:15"
															},
															"nativeSrc": "4374:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "4374:35:15"
														},
														{
															"nativeSrc": "4418:16:15",
															"nodeType": "YulAssignment",
															"src": "4418:16:15",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4428:6:15",
																"nodeType": "YulIdentifier",
																"src": "4428:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4418:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3302:1138:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3374:9:15",
														"nodeType": "YulTypedName",
														"src": "3374:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3385:7:15",
														"nodeType": "YulTypedName",
														"src": "3385:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3397:6:15",
														"nodeType": "YulTypedName",
														"src": "3397:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3405:6:15",
														"nodeType": "YulTypedName",
														"src": "3405:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3413:6:15",
														"nodeType": "YulTypedName",
														"src": "3413:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3421:6:15",
														"nodeType": "YulTypedName",
														"src": "3421:6:15",
														"type": ""
													}
												],
												"src": "3302:1138:15"
											},
											{
												"body": {
													"nativeSrc": "4532:173:15",
													"nodeType": "YulBlock",
													"src": "4532:173:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4578:16:15",
																"nodeType": "YulBlock",
																"src": "4578:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4587:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4590:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4580:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:15"
																			},
																			"nativeSrc": "4580:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:15"
																		},
																		"nativeSrc": "4580:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4553:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4549:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:15"
																		},
																		"nativeSrc": "4549:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4545:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:15"
																},
																"nativeSrc": "4545:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4545:32:15"
															},
															"nativeSrc": "4542:52:15",
															"nodeType": "YulIf",
															"src": "4542:52:15"
														},
														{
															"nativeSrc": "4603:39:15",
															"nodeType": "YulAssignment",
															"src": "4603:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4632:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4632:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4613:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:15"
																},
																"nativeSrc": "4613:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4613:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:15"
																}
															]
														},
														{
															"nativeSrc": "4651:48:15",
															"nodeType": "YulAssignment",
															"src": "4651:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4684:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4684:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4695:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4695:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4680:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:15"
																		},
																		"nativeSrc": "4680:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4680:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4661:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4661:18:15"
																},
																"nativeSrc": "4661:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4661:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4651:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4445:260:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4490:9:15",
														"nodeType": "YulTypedName",
														"src": "4490:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4501:7:15",
														"nodeType": "YulTypedName",
														"src": "4501:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4513:6:15",
														"nodeType": "YulTypedName",
														"src": "4513:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4521:6:15",
														"nodeType": "YulTypedName",
														"src": "4521:6:15",
														"type": ""
													}
												],
												"src": "4445:260:15"
											},
											{
												"body": {
													"nativeSrc": "4765:382:15",
													"nodeType": "YulBlock",
													"src": "4765:382:15",
													"statements": [
														{
															"nativeSrc": "4775:22:15",
															"nodeType": "YulAssignment",
															"src": "4775:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4789:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4792:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4792:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4785:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:15"
																},
																"nativeSrc": "4785:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4785:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4775:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:15"
																}
															]
														},
														{
															"nativeSrc": "4806:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4806:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4836:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4836:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4832:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:15"
																},
																"nativeSrc": "4832:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4832:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4810:18:15",
																	"nodeType": "YulTypedName",
																	"src": "4810:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4883:31:15",
																"nodeType": "YulBlock",
																"src": "4883:31:15",
																"statements": [
																	{
																		"nativeSrc": "4885:27:15",
																		"nodeType": "YulAssignment",
																		"src": "4885:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4899:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4899:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4907:4:15",
																					"nodeType": "YulLiteral",
																					"src": "4907:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4895:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:15"
																			},
																			"nativeSrc": "4895:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4895:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4885:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4863:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4863:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4856:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:15"
																},
																"nativeSrc": "4856:26:15",
																"nodeType": "YulFunctionCall",
																"src": "4856:26:15"
															},
															"nativeSrc": "4853:61:15",
															"nodeType": "YulIf",
															"src": "4853:61:15"
														},
														{
															"body": {
																"nativeSrc": "4973:168:15",
																"nodeType": "YulBlock",
																"src": "4973:168:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4994:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4997:77:15",
																					"nodeType": "YulLiteral",
																					"src": "4997:77:15",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4987:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4987:6:15"
																			},
																			"nativeSrc": "4987:88:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4987:88:15"
																		},
																		"nativeSrc": "4987:88:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4987:88:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5095:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5095:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5098:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5098:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5088:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5088:6:15"
																			},
																			"nativeSrc": "5088:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5088:15:15"
																		},
																		"nativeSrc": "5088:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5088:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5123:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5126:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5126:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5116:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:15"
																			},
																			"nativeSrc": "5116:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5116:15:15"
																		},
																		"nativeSrc": "5116:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4952:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4952:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4960:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4960:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4949:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4949:2:15"
																		},
																		"nativeSrc": "4949:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4926:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4926:2:15"
																},
																"nativeSrc": "4926:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4926:38:15"
															},
															"nativeSrc": "4923:218:15",
															"nodeType": "YulIf",
															"src": "4923:218:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4710:437:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4745:4:15",
														"nodeType": "YulTypedName",
														"src": "4745:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4754:6:15",
														"nodeType": "YulTypedName",
														"src": "4754:6:15",
														"type": ""
													}
												],
												"src": "4710:437:15"
											},
											{
												"body": {
													"nativeSrc": "5309:241:15",
													"nodeType": "YulBlock",
													"src": "5309:241:15",
													"statements": [
														{
															"nativeSrc": "5319:26:15",
															"nodeType": "YulAssignment",
															"src": "5319:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5331:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5331:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5342:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5342:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5327:3:15"
																},
																"nativeSrc": "5327:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5327:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5319:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5319:4:15"
																}
															]
														},
														{
															"nativeSrc": "5354:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5354:52:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5364:42:15",
																"nodeType": "YulLiteral",
																"src": "5364:42:15",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5358:2:15",
																	"nodeType": "YulTypedName",
																	"src": "5358:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5422:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5422:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5437:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5437:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5445:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "5445:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5433:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:15"
																		},
																		"nativeSrc": "5433:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5433:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5415:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:15"
																},
																"nativeSrc": "5415:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5415:34:15"
															},
															"nativeSrc": "5415:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5415:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5469:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5469:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5480:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5480:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5465:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5465:3:15"
																		},
																		"nativeSrc": "5465:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5465:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5485:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5485:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5458:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:15"
																},
																"nativeSrc": "5458:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5458:34:15"
															},
															"nativeSrc": "5458:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5458:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5512:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5512:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5523:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5523:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5508:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5508:3:15"
																		},
																		"nativeSrc": "5508:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5508:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5532:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5532:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5540:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "5540:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:15"
																		},
																		"nativeSrc": "5528:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:15"
																},
																"nativeSrc": "5501:43:15",
																"nodeType": "YulFunctionCall",
																"src": "5501:43:15"
															},
															"nativeSrc": "5501:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "5501:43:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5152:398:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:15",
														"nodeType": "YulTypedName",
														"src": "5262:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5273:6:15",
														"nodeType": "YulTypedName",
														"src": "5273:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5281:6:15",
														"nodeType": "YulTypedName",
														"src": "5281:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5289:6:15",
														"nodeType": "YulTypedName",
														"src": "5289:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5300:4:15",
														"nodeType": "YulTypedName",
														"src": "5300:4:15",
														"type": ""
													}
												],
												"src": "5152:398:15"
											},
											{
												"body": {
													"nativeSrc": "5605:162:15",
													"nodeType": "YulBlock",
													"src": "5605:162:15",
													"statements": [
														{
															"nativeSrc": "5615:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5615:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5635:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5635:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5629:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5629:5:15"
																},
																"nativeSrc": "5629:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5629:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5619:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5619:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5656:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5656:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5665:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5665:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5672:4:15",
																				"nodeType": "YulLiteral",
																				"src": "5672:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5661:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:15"
																		},
																		"nativeSrc": "5661:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5661:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5679:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5679:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5650:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5650:5:15"
																},
																"nativeSrc": "5650:36:15",
																"nodeType": "YulFunctionCall",
																"src": "5650:36:15"
															},
															"nativeSrc": "5650:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "5650:36:15"
														},
														{
															"nativeSrc": "5695:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5695:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5709:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5709:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5714:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5714:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5705:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:15"
																},
																"nativeSrc": "5705:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5705:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5699:2:15",
																	"nodeType": "YulTypedName",
																	"src": "5699:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5737:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "5737:2:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5741:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5741:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5730:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5730:6:15"
																},
																"nativeSrc": "5730:13:15",
																"nodeType": "YulFunctionCall",
																"src": "5730:13:15"
															},
															"nativeSrc": "5730:13:15",
															"nodeType": "YulExpressionStatement",
															"src": "5730:13:15"
														},
														{
															"nativeSrc": "5752:9:15",
															"nodeType": "YulAssignment",
															"src": "5752:9:15",
															"value": {
																"name": "_1",
																"nativeSrc": "5759:2:15",
																"nodeType": "YulIdentifier",
																"src": "5759:2:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5752:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5555:212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5582:5:15",
														"nodeType": "YulTypedName",
														"src": "5582:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5589:3:15",
														"nodeType": "YulTypedName",
														"src": "5589:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5597:3:15",
														"nodeType": "YulTypedName",
														"src": "5597:3:15",
														"type": ""
													}
												],
												"src": "5555:212:15"
											},
											{
												"body": {
													"nativeSrc": "5959:80:15",
													"nodeType": "YulBlock",
													"src": "5959:80:15",
													"statements": [
														{
															"nativeSrc": "5969:64:15",
															"nodeType": "YulAssignment",
															"src": "5969:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5994:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5994:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6020:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6020:6:15"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "6028:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6028:3:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "6002:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6002:17:15"
																		},
																		"nativeSrc": "6002:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:30:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5976:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "5976:17:15"
																},
																"nativeSrc": "5976:57:15",
																"nodeType": "YulFunctionCall",
																"src": "5976:57:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5969:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5772:267:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5927:3:15",
														"nodeType": "YulTypedName",
														"src": "5927:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5932:6:15",
														"nodeType": "YulTypedName",
														"src": "5932:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5940:6:15",
														"nodeType": "YulTypedName",
														"src": "5940:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5951:3:15",
														"nodeType": "YulTypedName",
														"src": "5951:3:15",
														"type": ""
													}
												],
												"src": "5772:267:15"
											},
											{
												"body": {
													"nativeSrc": "6247:320:15",
													"nodeType": "YulBlock",
													"src": "6247:320:15",
													"statements": [
														{
															"nativeSrc": "6257:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6257:52:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6267:42:15",
																"nodeType": "YulLiteral",
																"src": "6267:42:15",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6261:2:15",
																	"nodeType": "YulTypedName",
																	"src": "6261:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6325:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6325:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6340:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6340:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6348:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6348:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6336:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:15"
																		},
																		"nativeSrc": "6336:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6336:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6318:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:15"
																},
																"nativeSrc": "6318:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6318:34:15"
															},
															"nativeSrc": "6318:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6318:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6372:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6383:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6383:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6368:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:15"
																		},
																		"nativeSrc": "6368:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6368:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6392:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6392:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6400:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6400:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6388:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:15"
																		},
																		"nativeSrc": "6388:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6361:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:15"
																},
																"nativeSrc": "6361:43:15",
																"nodeType": "YulFunctionCall",
																"src": "6361:43:15"
															},
															"nativeSrc": "6361:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "6361:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6435:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:15"
																		},
																		"nativeSrc": "6420:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6440:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6440:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6413:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6413:6:15"
																},
																"nativeSrc": "6413:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6413:34:15"
															},
															"nativeSrc": "6413:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6413:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6467:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6478:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6478:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6463:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:15"
																		},
																		"nativeSrc": "6463:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6463:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6483:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6483:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6456:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:15"
																},
																"nativeSrc": "6456:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6456:31:15"
															},
															"nativeSrc": "6456:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6456:31:15"
														},
														{
															"nativeSrc": "6496:65:15",
															"nodeType": "YulAssignment",
															"src": "6496:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6533:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6533:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6556:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6556:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6541:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:15"
																		},
																		"nativeSrc": "6541:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "6504:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "6504:28:15"
																},
																"nativeSrc": "6504:57:15",
																"nodeType": "YulFunctionCall",
																"src": "6504:57:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6496:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6496:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6044:523:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6192:9:15",
														"nodeType": "YulTypedName",
														"src": "6192:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6203:6:15",
														"nodeType": "YulTypedName",
														"src": "6203:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6211:6:15",
														"nodeType": "YulTypedName",
														"src": "6211:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6219:6:15",
														"nodeType": "YulTypedName",
														"src": "6219:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6227:6:15",
														"nodeType": "YulTypedName",
														"src": "6227:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6238:4:15",
														"nodeType": "YulTypedName",
														"src": "6238:4:15",
														"type": ""
													}
												],
												"src": "6044:523:15"
											},
											{
												"body": {
													"nativeSrc": "6652:169:15",
													"nodeType": "YulBlock",
													"src": "6652:169:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6698:16:15",
																"nodeType": "YulBlock",
																"src": "6698:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6707:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6707:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6710:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6710:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6700:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6700:6:15"
																			},
																			"nativeSrc": "6700:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6700:12:15"
																		},
																		"nativeSrc": "6700:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6700:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6673:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6673:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:15"
																		},
																		"nativeSrc": "6669:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6694:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6665:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:15"
																},
																"nativeSrc": "6665:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6665:32:15"
															},
															"nativeSrc": "6662:52:15",
															"nodeType": "YulIf",
															"src": "6662:52:15"
														},
														{
															"nativeSrc": "6723:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6723:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6742:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6742:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6736:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6736:5:15"
																},
																"nativeSrc": "6736:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6736:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6727:5:15",
																	"nodeType": "YulTypedName",
																	"src": "6727:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6785:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6785:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "6761:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "6761:23:15"
																},
																"nativeSrc": "6761:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6761:30:15"
															},
															"nativeSrc": "6761:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6761:30:15"
														},
														{
															"nativeSrc": "6800:15:15",
															"nodeType": "YulAssignment",
															"src": "6800:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "6810:5:15",
																"nodeType": "YulIdentifier",
																"src": "6810:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6800:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6800:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "6572:249:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6618:9:15",
														"nodeType": "YulTypedName",
														"src": "6618:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6629:7:15",
														"nodeType": "YulTypedName",
														"src": "6629:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6641:6:15",
														"nodeType": "YulTypedName",
														"src": "6641:6:15",
														"type": ""
													}
												],
												"src": "6572:249:15"
											},
											{
												"body": {
													"nativeSrc": "6858:152:15",
													"nodeType": "YulBlock",
													"src": "6858:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6875:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6875:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6878:77:15",
																		"nodeType": "YulLiteral",
																		"src": "6878:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6868:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6868:6:15"
																},
																"nativeSrc": "6868:88:15",
																"nodeType": "YulFunctionCall",
																"src": "6868:88:15"
															},
															"nativeSrc": "6868:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "6868:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6972:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6972:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6975:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6975:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6965:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6965:6:15"
																},
																"nativeSrc": "6965:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6965:15:15"
															},
															"nativeSrc": "6965:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6965:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6996:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6996:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6999:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6999:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6989:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:15"
																},
																"nativeSrc": "6989:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6989:15:15"
															},
															"nativeSrc": "6989:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6989:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6826:184:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6826:184:15"
											},
											{
												"body": {
													"nativeSrc": "7144:168:15",
													"nodeType": "YulBlock",
													"src": "7144:168:15",
													"statements": [
														{
															"nativeSrc": "7154:26:15",
															"nodeType": "YulAssignment",
															"src": "7154:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7166:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7177:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7162:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7162:3:15"
																},
																"nativeSrc": "7162:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7162:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7154:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7154:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7196:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7196:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7211:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7211:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7219:42:15",
																				"nodeType": "YulLiteral",
																				"src": "7219:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7207:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:15"
																		},
																		"nativeSrc": "7207:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7207:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7189:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:15"
																},
																"nativeSrc": "7189:74:15",
																"nodeType": "YulFunctionCall",
																"src": "7189:74:15"
															},
															"nativeSrc": "7189:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "7189:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7283:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7283:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7294:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7279:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:15"
																		},
																		"nativeSrc": "7279:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7299:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7272:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:15"
																},
																"nativeSrc": "7272:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7272:34:15"
															},
															"nativeSrc": "7272:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7272:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7015:297:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7105:9:15",
														"nodeType": "YulTypedName",
														"src": "7105:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7116:6:15",
														"nodeType": "YulTypedName",
														"src": "7116:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7124:6:15",
														"nodeType": "YulTypedName",
														"src": "7124:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7135:4:15",
														"nodeType": "YulTypedName",
														"src": "7135:4:15",
														"type": ""
													}
												],
												"src": "7015:297:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x43508B05 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2B1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x384 DUP3 PUSH2 0x5E2 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x3AC DUP3 DUP3 CALLER PUSH2 0x61A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3EA DUP4 DUP4 CALLER PUSH2 0x627 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x471 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x559 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x524F409B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH2 0x4C5 DUP4 PUSH1 0x6 SLOAD PUSH2 0x726 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH0 PUSH2 0x2E5 DUP3 PUSH2 0x5E2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x3AC CALLER DUP4 DUP4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x564 DUP5 DUP5 DUP5 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x451 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x57C DUP3 PUSH2 0x5E2 JUMP JUMPDEST POP PUSH0 PUSH2 0x592 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5DB JUMP JUMPDEST DUP1 PUSH2 0x5BA DUP5 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CB SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x471 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9BB JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 DUP2 DUP5 DUP7 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x68D JUMPI PUSH2 0x66E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3AC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x838 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x104A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x872 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x86F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x92A DUP4 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x949 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x973 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x97D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xAC7 JUMPI PUSH0 PUSH2 0x9DE DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA0A JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xAC5 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB0E DUP4 DUP4 DUP4 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x471 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB8A DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x471 CALLER PUSH0 DUP6 DUP6 DUP6 PUSH2 0x7F6 JUMP JUMPDEST PUSH0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xBDF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC0B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC29 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC41 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC55 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC67 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E5 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCF3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xCD0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xCF3 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH0 PUSH2 0xD30 DUP4 DUP4 PUSH0 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5DB DUP2 PUSH2 0xD75 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5DB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE15 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE34 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE5D DUP5 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP PUSH2 0xE6B PUSH1 0x20 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEFD DUP6 PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH2 0xF0B PUSH1 0x20 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF53 JUMPI PUSH2 0xF53 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0xECD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD0 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE PUSH1 0x20 DUP5 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1019 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF3 PUSH2 0x1044 DUP4 DUP7 PUSH2 0x101F JUMP JUMPDEST DUP5 PUSH2 0x101F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x107B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5DB DUP2 PUSH2 0xD75 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PREVRANDAO 0xCC DUP3 CALLDATACOPY TLOAD SWAP15 0xC7 CALLDATASIZE PUSH23 0xD5D27D2F35DC54D7385A6C6474AE4F8B434A9F6371B864 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "177:601:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:2;;;;;;:::i;:::-;;:::i;:::-;;;611:14:15;;604:22;586:41;;574:2;559:18;1560:300:2;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:55:15;;;1510:74;;1498:2;1483:18;3496:154:2;1364:226:15;3322:113:2;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;:::i;:::-;;:::i;4786:132::-;;;;;;:::i;:::-;;:::i;477:298:0:-;;;;;;:::i;:::-;;:::i;2184:118:2:-;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2725:25:15;;;2713:2;2698:18;1919:208:2;2579:177:15;2517:93:2;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;2676:255::-;;;;;;:::i;:::-;;:::i;3927:153::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4038:25:2;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153;1560:300;1662:4;-1:-1:-1;;;;;;1697:40:2;;1712:25;1697:40;;:104;;-1:-1:-1;;;;;;;1753:48:2;;1768:33;1753:48;1697:104;:156;;;-1:-1:-1;877:25:10;-1:-1:-1;;;;;;862:40:10;;;1817:36:2;1678:175;1560:300;-1:-1:-1;;1560:300:2:o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:2;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:7;3393:8:2;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:2;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:2;;4305:1;4275:33;;;1510:74:15;1483:18;;4275:33:2;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:7;4561:7:2;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:2;:13;-1:-1:-1;;;;;4609:21:2;;4605:109;;4653:50;;;;;-1:-1:-1;;;;;5433:15:15;;;4653:50:2;;;5415:34:15;5465:18;;;5458:34;;;5528:15;;5508:18;;;5501:43;5327:18;;4653:50:2;5152:398:15;4605:109:2;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;477:298:0:-;548:8;560:1;548:13;544:43;;570:17;;;;;;;;;;;;;;544:43;605:9;600:168;624:8;620:1;:12;600:168;;;654:27;664:2;668:12;;654:9;:27::i;:::-;727:12;:14;;;;;;;;;634:3;600:168;;2184:118:2;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:2;;2001:87;;2047:30;;;;;2074:1;2047:30;;;1510:74:15;1483:18;;2047:30:2;1364:226:15;2001:87:2;-1:-1:-1;;;;;;2104:16:2;;;;;:9;:16;;;;;;;1919:208::o;2517:93::-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:7;3835:8:2;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:7;5186:4:2;5192:2;5196:7;5205:4;5138:33;:72::i;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;3249:9;;;;;;;;;-1:-1:-1;3249:9:2;;;3173:92;2822:10;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:2:o;16214:241::-;16277:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;16339:88;;16385:31;;-1:-1:-1;;;16385:31:2;;;;;2725:25:15;;;2698:18;;16385:31:2;2579:177:15;14494:120:2;14574:33;14583:2;14587:7;14596:4;14602;14574:8;:33::i;8863:795::-;8949:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;;;9060:18;;;9056:86;;9094:37;9111:4;9117;9123:7;9094:16;:37::i;:::-;-1:-1:-1;;;;;9186:18:2;;;9182:256;;9302:48;9319:1;9323:7;9340:1;9344:5;9302:8;:48::i;:::-;-1:-1:-1;;;;;9393:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9393:20:2;;;9182:256;-1:-1:-1;;;;;9452:16:2;;;9448:107;;-1:-1:-1;;;;;9512:13:2;;;;;;:9;:13;;;;;:18;;9529:1;9512:18;;;9448:107;9565:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;9565:21:2;-1:-1:-1;;;;;9565:21:2;;;;;;;;;9602:27;;9565:16;;9602:27;;;;;;;9647:4;8863:795;-1:-1:-1;;;;8863:795:2:o;10658:100::-;10725:26;10735:2;10739:7;10725:26;;;;;;;;;;;;:9;:26::i;15667:312::-;-1:-1:-1;;;;;15774:22:2;;15770:91;;15819:31;;;;;-1:-1:-1;;;;;1528:55:15;;15819:31:2;;;1510:74:15;1483:18;;15819:31:2;1364:226:15;15770:91:2;-1:-1:-1;;;;;15870:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15870:46:2;;;;;;;;;;15931:41;;586::15;;;15931::2;;559:18:15;15931:41:2;;;;;;;15667:312;;;:::o;870:963:6:-;-1:-1:-1;;;;;1050:14:6;;;:18;1046:781;;1088:67;;-1:-1:-1;;;1088:67:6;;-1:-1:-1;;;;;1088:36:6;;;;;:67;;1125:8;;1135:4;;1141:7;;1150:4;;1088:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1088:67:6;;;;;;;;-1:-1:-1;;1088:67:6;;;;;;;;;;;;:::i;:::-;;;1084:733;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:6;:13;1462:1;1445:18;1441:362;;1549:39;;-1:-1:-1;;;1549:39:6;;-1:-1:-1;;;;;1528:55:15;;1549:39:6;;;1510:74:15;1483:18;;1549:39:6;1364:226:15;1441:362:6;1755:6;1749:13;1740:6;1736:2;1732:15;1725:38;1084:733;-1:-1:-1;;;;;;1202:51:6;;-1:-1:-1;;;1202:51:6;1198:182;;1322:39;;-1:-1:-1;;;1322:39:6;;-1:-1:-1;;;;;1528:55:15;;1322:39:6;;;1510:74:15;1483:18;;1322:39:6;1364:226:15;1198:182:6;1156:238;1084:733;870:963;;;;;:::o;637:698:9:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:9;-1:-1:-1;794:41:9;-1:-1:-1;955:28:9;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:9;1180:10;1175:2;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:9;1010:282;1256:21;-1:-1:-1;1312:6:9;637:698;-1:-1:-1;;;637:698:9:o;14796:662:2:-;14956:9;:31;;;-1:-1:-1;;;;;;14969:18:2;;;;14956:31;14952:460;;;15003:13;15019:22;15033:7;15019:13;:22::i;:::-;15003:38;-1:-1:-1;;;;;;15169:18:2;;;;;;:35;;;15200:4;-1:-1:-1;;;;;15191:13:2;:5;-1:-1:-1;;;;;15191:13:2;;;15169:35;:69;;;;-1:-1:-1;;;;;;4038:25:2;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;15208:30;15169:69;15165:142;;;15265:27;;;;;-1:-1:-1;;;;;1528:55:15;;15265:27:2;;;1510:74:15;1483:18;;15265:27:2;1364:226:15;15165:142:2;15325:9;15321:81;;;15379:7;15375:2;-1:-1:-1;;;;;15359:28:2;15368:5;-1:-1:-1;;;;;15359:28:2;;;;;;;;;;;15321:81;14989:423;14952:460;-1:-1:-1;;15422:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;15422:29:2;-1:-1:-1;;;;;15422:29:2;;;;;;;;;;14796:662::o;7107:368::-;7219:38;7233:5;7240:7;7249;7219:13;:38::i;:::-;7214:255;;-1:-1:-1;;;;;7277:19:2;;7273:186;;7323:31;;-1:-1:-1;;;7323:31:2;;;;;2725:25:15;;;2698:18;;7323:31:2;2579:177:15;7273:186:2;7400:44;;;;;-1:-1:-1;;;;;7207:55:15;;7400:44:2;;;7189:74:15;7279:18;;;7272:34;;;7162:18;;7400:44:2;7015:297:15;10979:207:2;11073:18;11079:2;11083:7;11073:5;:18::i;:::-;11101:78;735:10:7;11157:1:2;11161:2;11165:7;11174:4;11101:33;:78::i;24673:916:12:-;24726:7;;24810:8;24801:17;;24797:103;;24847:8;24838:17;;;-1:-1:-1;24883:2:12;24873:12;24797:103;24926:8;24917:5;:17;24913:103;;24963:8;24954:17;;;-1:-1:-1;24999:2:12;24989:12;24913:103;25042:8;25033:5;:17;25029:103;;25079:8;25070:17;;;-1:-1:-1;25115:2:12;25105:12;25029:103;25158:7;25149:5;:16;25145:100;;25194:7;25185:16;;;-1:-1:-1;25229:1:12;25219:11;25145:100;25271:7;25262:5;:16;25258:100;;25307:7;25298:16;;;-1:-1:-1;25342:1:12;25332:11;25258:100;25384:7;25375:5;:16;25371:100;;25420:7;25411:16;;;-1:-1:-1;25455:1:12;25445:11;25371:100;25497:7;25488:5;:16;25484:66;;25534:1;25524:11;25576:6;24673:916;-1:-1:-1;;24673:916:12:o;6401:272:2:-;6504:4;-1:-1:-1;;;;;6539:21:2;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:2;:5;-1:-1:-1;;;;;6577:16:2;;:52;;;-1:-1:-1;;;;;;4038:25:2;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6597:32;6577:88;;;-1:-1:-1;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:2;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:2:o;9980:327::-;-1:-1:-1;;;;;10047:16:2;;10043:87;;10086:33;;-1:-1:-1;;;10086:33:2;;10116:1;10086:33;;;1510:74:15;1483:18;;10086:33:2;1364:226:15;10043:87:2;10139:21;10163:32;10171:2;10175:7;10192:1;10163:7;:32::i;:::-;10139:56;-1:-1:-1;;;;;;10209:27:2;;;10205:96;;10259:31;;;;;10287:1;10259:31;;;1510:74:15;1483:18;;10259:31:2;1364:226:15;14:177;-1:-1:-1;;;;;;92:5:15;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:300::-;691:3;729:5;723:12;756:6;751:3;744:19;812:6;805:4;798:5;794:16;787:4;782:3;778:14;772:47;864:1;857:4;848:6;843:3;839:16;835:27;828:38;927:4;920:2;916:7;911:2;903:6;899:15;895:29;890:3;886:39;882:50;875:57;;;638:300;;;;:::o;943:231::-;1092:2;1081:9;1074:21;1055:4;1112:56;1164:2;1153:9;1149:18;1141:6;1112:56;:::i;1179:180::-;1238:6;1291:2;1279:9;1270:7;1266:23;1262:32;1259:52;;;1307:1;1304;1297:12;1259:52;-1:-1:-1;1330:23:15;;1179:180;-1:-1:-1;1179:180:15:o;1595:196::-;1663:20;;-1:-1:-1;;;;;1712:54:15;;1702:65;;1692:93;;1781:1;1778;1771:12;1692:93;1595:196;;;:::o;1796:254::-;1864:6;1872;1925:2;1913:9;1904:7;1900:23;1896:32;1893:52;;;1941:1;1938;1931:12;1893:52;1964:29;1983:9;1964:29;:::i;:::-;1954:39;2040:2;2025:18;;;;2012:32;;-1:-1:-1;;;1796:254:15:o;2055:328::-;2132:6;2140;2148;2201:2;2189:9;2180:7;2176:23;2172:32;2169:52;;;2217:1;2214;2207:12;2169:52;2240:29;2259:9;2240:29;:::i;:::-;2230:39;;2288:38;2322:2;2311:9;2307:18;2288:38;:::i;:::-;2278:48;;2373:2;2362:9;2358:18;2345:32;2335:42;;2055:328;;;;;:::o;2388:186::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:52;;;2516:1;2513;2506:12;2468:52;2539:29;2558:9;2539:29;:::i;2761:347::-;2826:6;2834;2887:2;2875:9;2866:7;2862:23;2858:32;2855:52;;;2903:1;2900;2893:12;2855:52;2926:29;2945:9;2926:29;:::i;:::-;2916:39;;3005:2;2994:9;2990:18;2977:32;3052:5;3045:13;3038:21;3031:5;3028:32;3018:60;;3074:1;3071;3064:12;3018:60;3097:5;3087:15;;;2761:347;;;;;:::o;3113:184::-;-1:-1:-1;;;3162:1:15;3155:88;3262:4;3259:1;3252:15;3286:4;3283:1;3276:15;3302:1138;3397:6;3405;3413;3421;3474:3;3462:9;3453:7;3449:23;3445:33;3442:53;;;3491:1;3488;3481:12;3442:53;3514:29;3533:9;3514:29;:::i;:::-;3504:39;;3562:38;3596:2;3585:9;3581:18;3562:38;:::i;:::-;3552:48;;3647:2;3636:9;3632:18;3619:32;3609:42;;3702:2;3691:9;3687:18;3674:32;3725:18;3766:2;3758:6;3755:14;3752:34;;;3782:1;3779;3772:12;3752:34;3820:6;3809:9;3805:22;3795:32;;3865:7;3858:4;3854:2;3850:13;3846:27;3836:55;;3887:1;3884;3877:12;3836:55;3923:2;3910:16;3945:2;3941;3938:10;3935:36;;;3951:18;;:::i;:::-;4026:2;4020:9;3994:2;4080:13;;-1:-1:-1;;4076:22:15;;;4100:2;4072:31;4068:40;4056:53;;;4124:18;;;4144:22;;;4121:46;4118:72;;;4170:18;;:::i;:::-;4210:10;4206:2;4199:22;4245:2;4237:6;4230:18;4285:7;4280:2;4275;4271;4267:11;4263:20;4260:33;4257:53;;;4306:1;4303;4296:12;4257:53;4362:2;4357;4353;4349:11;4344:2;4336:6;4332:15;4319:46;4407:1;4402:2;4397;4389:6;4385:15;4381:24;4374:35;4428:6;4418:16;;;;;;;3302:1138;;;;;;;:::o;4445:260::-;4513:6;4521;4574:2;4562:9;4553:7;4549:23;4545:32;4542:52;;;4590:1;4587;4580:12;4542:52;4613:29;4632:9;4613:29;:::i;:::-;4603:39;;4661:38;4695:2;4684:9;4680:18;4661:38;:::i;:::-;4651:48;;4445:260;;;;;:::o;4710:437::-;4789:1;4785:12;;;;4832;;;4853:61;;4907:4;4899:6;4895:17;4885:27;;4853:61;4960:2;4952:6;4949:14;4929:18;4926:38;4923:218;;-1:-1:-1;;;4994:1:15;4987:88;5098:4;5095:1;5088:15;5126:4;5123:1;5116:15;4923:218;;4710:437;;;:::o;5555:212::-;5597:3;5635:5;5629:12;5679:6;5672:4;5665:5;5661:16;5656:3;5650:36;5741:1;5705:16;;5730:13;;;-1:-1:-1;5705:16:15;;5555:212;-1:-1:-1;5555:212:15:o;5772:267::-;5951:3;5976:57;6002:30;6028:3;6020:6;6002:30;:::i;:::-;5994:6;5976:57;:::i;6044:523::-;6238:4;-1:-1:-1;;;;;6348:2:15;6340:6;6336:15;6325:9;6318:34;6400:2;6392:6;6388:15;6383:2;6372:9;6368:18;6361:43;;6440:6;6435:2;6424:9;6420:18;6413:34;6483:3;6478:2;6467:9;6463:18;6456:31;6504:57;6556:3;6545:9;6541:19;6533:6;6504:57;:::i;:::-;6496:65;6044:523;-1:-1:-1;;;;;;6044:523:15:o;6572:249::-;6641:6;6694:2;6682:9;6673:7;6669:23;6665:32;6662:52;;;6710:1;6707;6700:12;6662:52;6742:9;6736:16;6761:30;6785:5;6761:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "862000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31413",
								"balanceOf(address)": "2630",
								"batchMint(address,uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26678",
								"supportsInterface(bytes4)": "513",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 339,
									"end": 416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A32B9BA102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "54544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1454,
									"end": 1459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1451,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1446,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1469,
									"end": 1476,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1469,
									"end": 1476,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1469,
									"end": 1486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 407,
									"end": 408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 404,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 392,
									"end": 408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 778,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb44cc82375c9ec73676d5d27d2f35dc54d7385a6c6474ae4f8b434a9f6371b864736f6c63430008190033",
									".code": [
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "43508B05"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 477,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 477,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 477,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 477,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2579,
											"end": 2756,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4984,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4984,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1853,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3582,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3393,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4561,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4630,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5448,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5448,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5448,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5449,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5492,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5492,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5508,
											"end": 5526,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5508,
											"end": 5526,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5508,
											"end": 5526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5501,
											"end": 5544,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5327,
											"end": 5345,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5327,
											"end": 5345,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5152,
											"end": 5550,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4222,
											"end": 4720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4872,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 477,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 477,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 544,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 544,
											"end": 587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "524F409B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 544,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 544,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 768,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 600,
											"end": 768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 632,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 600,
											"end": 768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 600,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 600,
											"end": 768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 664,
											"end": 666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 668,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 668,
											"end": 680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 654,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 727,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 727,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 727,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 634,
											"end": 637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 600,
											"end": 768,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2273,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2577,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2589,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3802,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5120,
											"end": 5127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5097,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5138,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5196,
											"end": 5203,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5209,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5138,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2753,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2765,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2874,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2900,
											"end": 2907,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2900,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2877,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16214,
											"end": 16455,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 16214,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16277,
											"end": 16284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16339,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 16339,
											"end": 16427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16385,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2579,
											"end": 2756,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14494,
											"end": 14614,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 14494,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14574,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 14583,
											"end": 14585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14587,
											"end": 14594,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14602,
											"end": 14606,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14574,
											"end": 14582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 14574,
											"end": 14607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 9658,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8863,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8949,
											"end": 8956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9060,
											"end": 9078,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9056,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9056,
											"end": 9142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9094,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9111,
											"end": 9115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9121,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9123,
											"end": 9130,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9094,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9094,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9094,
											"end": 9131,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9094,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9182,
											"end": 9438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9330,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9340,
											"end": 9341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9344,
											"end": 9349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9302,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9302,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9402,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9438,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9182,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 9448,
											"end": 9555,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9521,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9525,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9555,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 9448,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9572,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9647,
											"end": 9651,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 9658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 9658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10758,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10658,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10725,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15667,
											"end": 15979,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 15667,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15774,
											"end": 15796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15774,
											"end": 15796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15770,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 15770,
											"end": 15861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15819,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15770,
											"end": 15861,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 15770,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15905,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15916,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15931,
											"end": 15972,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15667,
											"end": 15979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15667,
											"end": 15979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15667,
											"end": 15979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15667,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1064,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1064,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1068,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1046,
											"end": 1827,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1133,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1154,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1088,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1088,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1088,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1441,
											"end": 1803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1441,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1441,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1763,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1253,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1198,
											"end": 1380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1380,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1198,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1084,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14796,
											"end": 15458,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 14796,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 14956,
											"end": 14987,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14969,
											"end": 14987,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14969,
											"end": 14987,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14969,
											"end": 14987,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14969,
											"end": 14987,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14987,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 14956,
											"end": 14987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14952,
											"end": 15412,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14952,
											"end": 15412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 14952,
											"end": 15412,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15003,
											"end": 15016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15019,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15033,
											"end": 15040,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15019,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 15019,
											"end": 15041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15019,
											"end": 15041,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15019,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15003,
											"end": 15041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15169,
											"end": 15204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15200,
											"end": 15204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15191,
											"end": 15204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15191,
											"end": 15204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15204,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15204,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15204,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15169,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15208,
											"end": 15238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15169,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15165,
											"end": 15307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15165,
											"end": 15307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15165,
											"end": 15307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15265,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15165,
											"end": 15307,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15165,
											"end": 15307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15325,
											"end": 15334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15321,
											"end": 15402,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15321,
											"end": 15402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 15321,
											"end": 15402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15379,
											"end": 15386,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15375,
											"end": 15377,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15368,
											"end": 15373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15359,
											"end": 15387,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15321,
											"end": 15402,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 15321,
											"end": 15402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14989,
											"end": 15412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14952,
											"end": 15412,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 14952,
											"end": 15412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15437,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15451,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14796,
											"end": 15458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7107,
											"end": 7475,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7107,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7233,
											"end": 7238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7240,
											"end": 7247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7256,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7219,
											"end": 7257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7257,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7219,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7214,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7214,
											"end": 7469,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7273,
											"end": 7459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7323,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2579,
											"end": 2756,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7273,
											"end": 7459,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7273,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7207,
											"end": 7262,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7207,
											"end": 7262,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7400,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7015,
											"end": 7312,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10979,
											"end": 11186,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10979,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11083,
											"end": 11090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11073,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11091,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11073,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11172,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 11101,
											"end": 11179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24673,
											"end": 25589,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 24673,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24726,
											"end": 24733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24726,
											"end": 24733,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 24810,
											"end": 24818,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 24801,
											"end": 24818,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24801,
											"end": 24818,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24847,
											"end": 24855,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 24838,
											"end": 24855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24838,
											"end": 24855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 24838,
											"end": 24855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24883,
											"end": 24885,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24873,
											"end": 24885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24926,
											"end": 24934,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 24917,
											"end": 24922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24917,
											"end": 24934,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24913,
											"end": 25016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 24913,
											"end": 25016,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24963,
											"end": 24971,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 24954,
											"end": 24971,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24954,
											"end": 24971,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 24954,
											"end": 24971,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24999,
											"end": 25001,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24989,
											"end": 25001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24913,
											"end": 25016,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 24913,
											"end": 25016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25042,
											"end": 25050,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25033,
											"end": 25038,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25033,
											"end": 25050,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 25029,
											"end": 25132,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25079,
											"end": 25087,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25070,
											"end": 25087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25087,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25087,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25115,
											"end": 25117,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 25105,
											"end": 25117,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25132,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 25029,
											"end": 25132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25158,
											"end": 25165,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 25149,
											"end": 25154,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25149,
											"end": 25165,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25145,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 25145,
											"end": 25245,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25194,
											"end": 25201,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 25185,
											"end": 25201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25185,
											"end": 25201,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 25185,
											"end": 25201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25229,
											"end": 25230,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 25219,
											"end": 25230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25145,
											"end": 25245,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 25145,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25271,
											"end": 25278,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 25262,
											"end": 25267,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25262,
											"end": 25278,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25258,
											"end": 25358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 25258,
											"end": 25358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25307,
											"end": 25314,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 25298,
											"end": 25314,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25298,
											"end": 25314,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 25298,
											"end": 25314,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25342,
											"end": 25343,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 25332,
											"end": 25343,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25258,
											"end": 25358,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 25258,
											"end": 25358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25384,
											"end": 25391,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 25375,
											"end": 25380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25375,
											"end": 25391,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25371,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 25371,
											"end": 25471,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25420,
											"end": 25427,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 25411,
											"end": 25427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25411,
											"end": 25427,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 25411,
											"end": 25427,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25455,
											"end": 25456,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 25445,
											"end": 25456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25371,
											"end": 25471,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 25371,
											"end": 25471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25497,
											"end": 25504,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 25488,
											"end": 25493,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25488,
											"end": 25504,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25484,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 25484,
											"end": 25550,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25535,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 25524,
											"end": 25535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25576,
											"end": 25582,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24673,
											"end": 25589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24673,
											"end": 25589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6504,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6582,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6666,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9980,
											"end": 10307,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 9980,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10047,
											"end": 10063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10047,
											"end": 10063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10043,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10043,
											"end": 10130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10086,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10043,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10043,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10139,
											"end": 10160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10171,
											"end": 10173,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10175,
											"end": 10182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10163,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10195,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10163,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10139,
											"end": 10195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10205,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10205,
											"end": 10301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10259,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 638,
											"end": 938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 723,
											"end": 735,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 751,
											"end": 754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 744,
											"end": 763,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 794,
											"end": 810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 778,
											"end": 792,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 772,
											"end": 819,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 843,
											"end": 846,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 839,
											"end": 855,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 835,
											"end": 862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 828,
											"end": 866,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 916,
											"end": 923,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 899,
											"end": 914,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 895,
											"end": 924,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 890,
											"end": 893,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 886,
											"end": 925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 882,
											"end": 932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 875,
											"end": 932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 638,
											"end": 938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1167,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 1112,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1266,
											"end": 1289,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1900,
											"end": 1923,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1896,
											"end": 1928,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1964,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2203,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2176,
											"end": 2199,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2240,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2269,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2269,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2288,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2326,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2376,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2345,
											"end": 2377,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2574,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2388,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2453,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2497,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2471,
											"end": 2503,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2520,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2468,
											"end": 2520,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2506,
											"end": 2518,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2520,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2468,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2539,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2539,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2539,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2905,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 2926,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3038,
											"end": 3059,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3036,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3076,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3243,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3262,
											"end": 3266,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3477,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3445,
											"end": 3478,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3514,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3562,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3619,
											"end": 3651,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3687,
											"end": 3705,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3706,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3820,
											"end": 3826,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3846,
											"end": 3873,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3926,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 3951,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4072,
											"end": 4103,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4068,
											"end": 4108,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 4170,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4221,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4260,
											"end": 4293,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4349,
											"end": 4360,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4347,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4319,
											"end": 4365,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4545,
											"end": 4577,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 4613,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4693,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 4661,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4790,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4895,
											"end": 4912,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4926,
											"end": 4964,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5075,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5131,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5555,
											"end": 5767,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 5555,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5629,
											"end": 5641,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5661,
											"end": 5677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5686,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5721,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5705,
											"end": 5721,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5730,
											"end": 5743,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5730,
											"end": 5743,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5730,
											"end": 5743,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5705,
											"end": 5721,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5705,
											"end": 5721,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5555,
											"end": 5767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5555,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5772,
											"end": 6039,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 5772,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5951,
											"end": 5954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6020,
											"end": 6026,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 6002,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5976,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 5976,
											"end": 6033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6567,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 6044,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6242,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6400,
											"end": 6402,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6404,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6440,
											"end": 6446,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6435,
											"end": 6437,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6486,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6487,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6556,
											"end": 6559,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6560,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 6504,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6496,
											"end": 6561,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6567,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6572,
											"end": 6821,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6572,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6673,
											"end": 6680,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6669,
											"end": 6692,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6697,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6710,
											"end": 6711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6708,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6752,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6761,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 6785,
											"end": 6790,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6761,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 6761,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchMint(address,uint256)": "43508b05",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuantity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractS/ContractSV1.sol\":\"ContractSV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ContractS/ContractSV1.sol\":{\"keccak256\":\"0xb6ab8a76ac24be3f2b5f5ab04652d6952aacdddbcfcf4d4b9e5868afefca9949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c237b80b1d50935a34f88f6b277f4f9cca518a4c16e2822b9a588d0d2d1f06e\",\"dweb:/ipfs/QmVPepUn2UFjh1HrJh2AG7dFch73C3muqFgjTpEcfxDzXB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4e7a30dafa83254008b02982696931abb1bcd762e201bba1d8ae77cb7654b62d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc64b74b4ef44f669a75edf93cadaf24ae390846751f60c3b38bf9ceba115c7\",\"dweb:/ipfs/QmZA2GuNXgf8832j532kctoFgrK679yHUr6ZJngUQySF6d\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc16b69d1bc7365dc56a239b446d9773b3972ef48399156c00bb27a4e958e990c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328e833bf49432109091e495c79681796c7ee9dce848a2a05c4daf4f6bd17fa5\",\"dweb:/ipfs/QmX1xbdfnGenQeZmxu3d6rM98E8YHEdHkgKkDvMHPvVAy5\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3233b02fcf2b20a41cce60a62e43c7e5a67a55b738ec1db842a82452e6aa170d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://231c75d18bc6973533dfa7d58d2b97e504ca4e21d703a5c8b0ec31475e97db67\",\"dweb:/ipfs/QmPJ29HDuFceD1FDr4CnjYYtvaQ234wGAfojZpL3RXFG26\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 227,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 229,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 233,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 237,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 241,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 247,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/ContractS/ContractSV1.sol:ContractSV1",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4e7a30dafa83254008b02982696931abb1bcd762e201bba1d8ae77cb7654b62d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc64b74b4ef44f669a75edf93cadaf24ae390846751f60c3b38bf9ceba115c7\",\"dweb:/ipfs/QmZA2GuNXgf8832j532kctoFgrK679yHUr6ZJngUQySF6d\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc16b69d1bc7365dc56a239b446d9773b3972ef48399156c00bb27a4e958e990c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328e833bf49432109091e495c79681796c7ee9dce848a2a05c4daf4f6bd17fa5\",\"dweb:/ipfs/QmX1xbdfnGenQeZmxu3d6rM98E8YHEdHkgKkDvMHPvVAy5\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3233b02fcf2b20a41cce60a62e43c7e5a67a55b738ec1db842a82452e6aa170d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://231c75d18bc6973533dfa7d58d2b97e504ca4e21d703a5c8b0ec31475e97db67\",\"dweb:/ipfs/QmPJ29HDuFceD1FDr4CnjYYtvaQ234wGAfojZpL3RXFG26\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 227,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 229,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 233,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 237,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 241,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 247,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ERC721Utils": {
					"abi": [],
					"devdoc": {
						"details": "Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":316:1835  library ERC721Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":316:1835  library ERC721Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e152e4f34a947cf81a29c49a78c2207d0adc6098b2691eed37af3c9057d12f2964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e152e4f34a947cf81a29c49a78c2207d0adc6098b2691eed37af3c9057d12f2964736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 MSTORE 0xE4 RETURN BLOBBASEFEE SWAP5 PUSH29 0xF81A29C49A78C2207D0ADC6098B2691EED37AF3C9057D12F2964736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "316:1519:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;316:1519:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e152e4f34a947cf81a29c49a78c2207d0adc6098b2691eed37af3c9057d12f2964736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 MSTORE 0xE4 RETURN BLOBBASEFEE SWAP5 PUSH29 0xF81A29C49A78C2207D0ADC6098B2691EED37AF3C9057D12F2964736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "316:1519:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 316,
									"end": 1835,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e152e4f34a947cf81a29c49a78c2207d0adc6098b2691eed37af3c9057d12f2964736f6c63430008190033",
									".code": [
										{
											"begin": 316,
											"end": 1835,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 1835,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc16b69d1bc7365dc56a239b446d9773b3972ef48399156c00bb27a4e958e990c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328e833bf49432109091e495c79681796c7ee9dce848a2a05c4daf4f6bd17fa5\",\"dweb:/ipfs/QmX1xbdfnGenQeZmxu3d6rM98E8YHEdHkgKkDvMHPvVAy5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":561:1903  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":561:1903  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b12353a9fd333232e33ddcc50808b107cca1012587a5f1caa3b1b3a074e6a2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b12353a9fd333232e33ddcc50808b107cca1012587a5f1caa3b1b3a074e6a2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SLT CALLDATALOAD GASPRICE SWAP16 0xD3 CALLER 0x23 0x2E CALLER 0xDD 0xCC POP DUP1 DUP12 LT PUSH29 0xCA1012587A5F1CAA3B1B3A074E6A2B64736F6C63430008190033000000 ",
							"sourceMap": "561:1342:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;561:1342:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b12353a9fd333232e33ddcc50808b107cca1012587a5f1caa3b1b3a074e6a2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SLT CALLDATALOAD GASPRICE SWAP16 0xD3 CALLER 0x23 0x2E CALLER 0xDD 0xCC POP DUP1 DUP12 LT PUSH29 0xCA1012587A5F1CAA3B1B3A074E6A2B64736F6C63430008190033000000 ",
							"sourceMap": "561:1342:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 561,
									"end": 1903,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b12353a9fd333232e33ddcc50808b107cca1012587a5f1caa3b1b3a074e6a2b64736f6c63430008190033",
									".code": [
										{
											"begin": 561,
											"end": 1903,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 1903,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc32563b2b72932b1566faf3d95a9642418ad680dbf597014c73c2020ca6ab2864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc32563b2b72932b1566faf3d95a9642418ad680dbf597014c73c2020ca6ab2864736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC ORIGIN JUMP EXTCODESIZE 0x2B PUSH19 0x932B1566FAF3D95A9642418AD680DBF597014C PUSH20 0xC2020CA6AB2864736F6C63430008190033000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc32563b2b72932b1566faf3d95a9642418ad680dbf597014c73c2020ca6ab2864736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC ORIGIN JUMP EXTCODESIZE 0x2B PUSH19 0x932B1566FAF3D95A9642418AD680DBF597014C PUSH20 0xC2020CA6AB2864736F6C63430008190033000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc32563b2b72932b1566faf3d95a9642418ad680dbf597014c73c2020ca6ab2864736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3233b02fcf2b20a41cce60a62e43c7e5a67a55b738ec1db842a82452e6aa170d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://231c75d18bc6973533dfa7d58d2b97e504ca4e21d703a5c8b0ec31475e97db67\",\"dweb:/ipfs/QmPJ29HDuFceD1FDr4CnjYYtvaQ234wGAfojZpL3RXFG26\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":281:27664  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":281:27664  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220000aa940f617135133ae214c686c9b3beee42f28a6f08bb05fc680a53fdf4b1764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220000aa940f617135133ae214c686c9b3beee42f28a6f08bb05fc680a53fdf4b1764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP EXP 0xA9 BLOCKHASH 0xF6 OR SGT MLOAD CALLER 0xAE 0x21 0x4C PUSH9 0x6C9B3BEEE42F28A6F0 DUP12 0xB0 PUSH0 0xC6 DUP1 0xA5 EXTCODEHASH 0xDF 0x4B OR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "281:27383:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:27383:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220000aa940f617135133ae214c686c9b3beee42f28a6f08bb05fc680a53fdf4b1764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP EXP 0xA9 BLOCKHASH 0xF6 OR SGT MLOAD CALLER 0xAE 0x21 0x4C PUSH9 0x6C9B3BEEE42F28A6F0 DUP12 0xB0 PUSH0 0xC6 DUP1 0xA5 EXTCODEHASH 0xDF 0x4B OR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "281:27383:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 281,
									"end": 27664,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220000aa940f617135133ae214c686c9b3beee42f28a6f08bb05fc680a53fdf4b1764736f6c63430008190033",
									".code": [
										{
											"begin": 281,
											"end": 27664,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 281,
											"end": 27664,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol\":{\"keccak256\":\"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3\",\"dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3233b02fcf2b20a41cce60a62e43c7e5a67a55b738ec1db842a82452e6aa170d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://231c75d18bc6973533dfa7d58d2b97e504ca4e21d703a5c8b0ec31475e97db67\",\"dweb:/ipfs/QmPJ29HDuFceD1FDr4CnjYYtvaQ234wGAfojZpL3RXFG26\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":769:34969  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":769:34969  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220078aea68b909ae8572ce10ce6b70957b2e2db3e46529985c82c58463d4d075e964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220078aea68b909ae8572ce10ce6b70957b2e2db3e46529985c82c58463d4d075e964736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD DUP11 0xEA PUSH9 0xB909AE8572CE10CE6B PUSH17 0x957B2E2DB3E46529985C82C58463D4D075 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "769:34200:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34200:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220078aea68b909ae8572ce10ce6b70957b2e2db3e46529985c82c58463d4d075e964736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD DUP11 0xEA PUSH9 0xB909AE8572CE10CE6B PUSH17 0x957B2E2DB3E46529985C82C58463D4D075 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "769:34200:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 769,
									"end": 34969,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220078aea68b909ae8572ce10ce6b70957b2e2db3e46529985c82c58463d4d075e964736f6c63430008190033",
									".code": [
										{
											"begin": 769,
											"end": 34969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 769,
											"end": 34969,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":258:2608  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":258:2608  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e1ad5081ea96bf63976ad686c55d025b73e56fe9bb3df9e0aea7ab15cb9f05c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e1ad5081ea96bf63976ad686c55d025b73e56fe9bb3df9e0aea7ab15cb9f05c64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E BYTE 0xD5 ADDMOD 0x1E 0xA9 PUSH12 0xF63976AD686C55D025B73E56 INVALID SWAP12 0xB3 0xDF SWAP15 EXP 0xEA PUSH27 0xB15CB9F05C64736F6C634300081900330000000000000000000000 ",
							"sourceMap": "258:2350:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2350:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e1ad5081ea96bf63976ad686c55d025b73e56fe9bb3df9e0aea7ab15cb9f05c64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E BYTE 0xD5 ADDMOD 0x1E 0xA9 PUSH12 0xF63976AD686C55D025B73E56 INVALID SWAP12 0xB3 0xDF SWAP15 EXP 0xEA PUSH27 0xB15CB9F05C64736F6C634300081900330000000000000000000000 ",
							"sourceMap": "258:2350:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 258,
									"end": 2608,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e1ad5081ea96bf63976ad686c55d025b73e56fe9bb3df9e0aea7ab15cb9f05c64736f6c63430008190033",
									".code": [
										{
											"begin": 258,
											"end": 2608,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 258,
											"end": 2608,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractS/ContractSV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5c8d4114f077f6803bb89b8b07bfa26dfbf8f2001708e4e7fdf1e8d9ddd42f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66c74efa1f994e3ea467b4165da1575857b29d81bec36e94678fe494ce5c615\",\"dweb:/ipfs/QmeXQFdzSJFmN8UdhxMqQwwUh1U2WEha5NoVLbSg3pCJc5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ContractS/ContractSV1.sol": {
				"ast": {
					"absolutePath": "contracts/ContractS/ContractSV1.sol",
					"exportedSymbols": {
						"Context": [
							1421
						],
						"ContractSV1": [
							57
						],
						"ERC165": [
							1752
						],
						"ERC721": [
							1151
						],
						"ERC721Utils": [
							1391
						],
						"IERC165": [
							1764
						],
						"IERC721": [
							1268
						],
						"IERC721Errors": [
							147
						],
						"IERC721Metadata": [
							1314
						],
						"Strings": [
							1728
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 58,
							"sourceUnit": 1152,
							"src": "63:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721",
										"nameLocations": [
											"201:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1151,
										"src": "201:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "201:6:0"
								}
							],
							"canonicalName": "ContractSV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57,
								1151,
								147,
								1314,
								1268,
								1752,
								1764,
								1421
							],
							"name": "ContractSV1",
							"nameLocation": "186:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "524f409b",
									"id": 6,
									"name": "InvalidQuantity",
									"nameLocation": "242:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:0"
									},
									"src": "236:24:0"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "318:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "302:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "381:35:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "392:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "392:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "392:16:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5465737420546f6b656e",
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "360:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
														"typeString": "literal_string \"Test Token\""
													},
													"value": "Test Token"
												},
												{
													"hexValue": "54544b",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_12b92eebe3668eaf63dd126f9d2687a4a809e861dd663bbd8065d11d346debaa",
														"typeString": "literal_string \"TTK\""
													},
													"value": "TTK"
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC721",
												"nameLocations": [
													"353:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1151,
												"src": "353:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "353:27:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:0"
									},
									"scope": 57,
									"src": "339:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "533:242:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 27,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "548:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "548:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "IfStatement",
												"src": "544:43:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 30,
															"name": "InvalidQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "570:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 32,
													"nodeType": "RevertStatement",
													"src": "563:24:0"
												}
											},
											{
												"body": {
													"id": 53,
													"nodeType": "Block",
													"src": "639:129:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 45,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "664:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 46,
																		"name": "_nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "668:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 44,
																	"name": "_safeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		829,
																		859
																	],
																	"referencedDeclaration": 829,
																	"src": "654:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "654:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "654:27:0"
														},
														{
															"id": 52,
															"nodeType": "UncheckedBlock",
															"src": "698:59:0",
															"statements": [
																{
																	"expression": {
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "727:14:0",
																		"subExpression": {
																			"id": 49,
																			"name": "_nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "727:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 51,
																	"nodeType": "ExpressionStatement",
																	"src": "727:14:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 38,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 39,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "624:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "620:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"initializationExpression": {
													"assignments": [
														35
													],
													"declarations": [
														{
															"constant": false,
															"id": 35,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "613:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 54,
															"src": "605:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 34,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 37,
													"initialValue": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "605:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "634:3:0",
														"subExpression": {
															"id": 41,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "634:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 43,
													"nodeType": "ExpressionStatement",
													"src": "634:3:0"
												},
												"nodeType": "ForStatement",
												"src": "600:168:0"
											}
										]
									},
									"functionSelector": "43508b05",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchMint",
									"nameLocation": "486:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "504:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "496:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "516:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "508:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:30:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:0"
									},
									"scope": 57,
									"src": "477:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 58,
							"src": "177:601:0",
							"usedErrors": [
								6,
								105,
								110,
								119,
								124,
								129,
								136,
								141,
								146
							],
							"usedEvents": [
								1167,
								1176,
								1185
							]
						}
					],
					"src": "35:747:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							194
						],
						"IERC20Errors": [
							99
						],
						"IERC721Errors": [
							147
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 59,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 60,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 69,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 74,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 79,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 88,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 93,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 98,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 195,
							"src": "280:1764:1",
							"usedErrors": [
								69,
								74,
								79,
								88,
								93,
								98
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 100,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 105,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 110,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 119,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 124,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 129,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 136,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 141,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 146,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 195,
							"src": "2190:2092:1",
							"usedErrors": [
								105,
								110,
								119,
								124,
								129,
								136,
								141,
								146
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 148,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 159,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 164,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 169,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 176,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 181,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 186,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 193,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 195,
							"src": "4430:2107:1",
							"usedErrors": [
								159,
								164,
								169,
								176,
								181,
								186,
								193
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1421
						],
						"ERC165": [
							1752
						],
						"ERC721": [
							1151
						],
						"ERC721Utils": [
							1391
						],
						"IERC165": [
							1764
						],
						"IERC721": [
							1268
						],
						"IERC721Errors": [
							147
						],
						"IERC721Metadata": [
							1314
						],
						"Strings": [
							1728
						]
					},
					"id": 1152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1269,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 197,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1268,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1315,
							"src": "172:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 199,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
							"file": "./utils/ERC721Utils.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1392,
							"src": "238:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 201,
										"name": "ERC721Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1391,
										"src": "246:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1422,
							"src": "291:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 203,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "299:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1729,
							"src": "340:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 205,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1728,
										"src": "348:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 1753,
							"src": "389:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 207,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1764,
										"src": "397:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 208,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1752,
										"src": "406:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1152,
							"sourceUnit": 195,
							"src": "459:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "467:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Context",
										"nameLocations": [
											"803:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "803:7:2"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:2"
								},
								{
									"baseName": {
										"id": 215,
										"name": "ERC165",
										"nameLocations": [
											"812:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "812:6:2"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "812:6:2"
								},
								{
									"baseName": {
										"id": 217,
										"name": "IERC721",
										"nameLocations": [
											"820:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1268,
										"src": "820:7:2"
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "820:7:2"
								},
								{
									"baseName": {
										"id": 219,
										"name": "IERC721Metadata",
										"nameLocations": [
											"829:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1314,
										"src": "829:15:2"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "829:15:2"
								},
								{
									"baseName": {
										"id": 221,
										"name": "IERC721Errors",
										"nameLocations": [
											"846:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "846:13:2"
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "846:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "527:247:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1151,
							"linearizedBaseContracts": [
								1151,
								147,
								1314,
								1268,
								1752,
								1764,
								1421
							],
							"name": "ERC721",
							"nameLocation": "793:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 225,
									"libraryName": {
										"id": 223,
										"name": "Strings",
										"nameLocations": [
											"872:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1728,
										"src": "872:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "866:26:2",
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "931:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "916:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 226,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "916:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 229,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "978:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "963:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 228,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "963:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 233,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1036:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "992:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 232,
										"keyName": "tokenId",
										"keyNameLocation": "1008:7:2",
										"keyType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "992:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 231,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 237,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1092:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "1050:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 236,
										"keyName": "owner",
										"keyNameLocation": "1066:5:2",
										"keyType": {
											"id": 234,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 235,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1075:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1152:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "1108:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 240,
										"keyName": "tokenId",
										"keyNameLocation": "1124:7:2",
										"keyType": {
											"id": 238,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 239,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1135:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 247,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1242:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "1174:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 246,
										"keyName": "owner",
										"keyNameLocation": "1190:5:2",
										"keyType": {
											"id": 242,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 245,
											"keyName": "operator",
											"keyNameLocation": "1215:8:2",
											"keyType": {
												"id": 243,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1199:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 244,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1227:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1436:57:2",
										"statements": [
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1446:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "1454:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1446:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1446:13:2"
											},
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "1469:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 260,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "1479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1469:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "1469:17:2"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "1267:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1406:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1392:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1392:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1427:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1413:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1413:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:2"
									},
									"scope": 1151,
									"src": "1380:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1751,
										1763
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1668:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "1697:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 277,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1268,
																			"src": "1717:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1268_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1268_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 276,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1712:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1712:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1268",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1712:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1697:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "1753:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 283,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "1773:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1314_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1314_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 282,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1768:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1314",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1790:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1768:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1753:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1697:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 290,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "1841:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 288,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1817:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1151_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "1817:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 274,
												"id": 293,
												"nodeType": "Return",
												"src": "1678:175:2"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1499:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1569:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 269,
												"name": "ERC165",
												"nameLocations": [
													"1636:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1752,
												"src": "1636:6:2"
											},
											{
												"id": 270,
												"name": "IERC165",
												"nameLocations": [
													"1644:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1764,
												"src": "1644:7:2"
											}
										],
										"src": "1627:25:2"
									},
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1594:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1587:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 266,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:20:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 1151,
									"src": "1560:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1193
									],
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1991:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 303,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2005:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2014:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 304,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2014:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2005:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "2001:87:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "2026:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2066:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 310,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2066:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 309,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "2047:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "2040:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 318,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2104:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 320,
													"indexExpression": {
														"id": 319,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2114:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2104:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 321,
												"nodeType": "Return",
												"src": "2097:23:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "1866:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1928:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1946:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1938:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:15:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1982:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:2"
									},
									"scope": 1151,
									"src": "1919:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2256:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2287:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2273:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 330,
												"id": 334,
												"nodeType": "Return",
												"src": "2266:29:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "2133:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2193:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2201:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:2"
									},
									"scope": 1151,
									"src": "2184:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2424:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 227,
													"src": "2441:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2434:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2308:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2373:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2409:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2409:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:15:2"
									},
									"scope": 1151,
									"src": "2364:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1305
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2579:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "2596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2589:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2459:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2526:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2564:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:2"
									},
									"scope": 1151,
									"src": "2517:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2755:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2779:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2765:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2765:22:2"
											},
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2812:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "2798:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 366,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2798:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 368,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2822:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2822:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "2855:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2849:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 371,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2849:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2849:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2864:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2849:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2849:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2922:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2849:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 381,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "2891:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 382,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "2900:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2908:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1541,
																	"src": "2900:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 378,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2877:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 388,
												"nodeType": "Return",
												"src": "2842:82:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2616:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2694:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:17:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2740:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:2"
									},
									"scope": 1151,
									"src": "2676:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3239:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 395,
												"id": 397,
												"nodeType": "Return",
												"src": "3249:9:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2937:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3182:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3224:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3224:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:15:2"
									},
									"scope": 1151,
									"src": "3173:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "3383:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3402:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "3406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 410,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "3415:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 407,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1018,
															1084
														],
														"referencedDeclaration": 1018,
														"src": "3393:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "3393:35:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3271:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3331:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3351:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:29:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:2"
									},
									"scope": 1151,
									"src": "3322:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "3572:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "3582:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "3582:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3635:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3622:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 422,
												"id": 430,
												"nodeType": "Return",
												"src": "3615:28:2"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "3441:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3505:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3517:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3563:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:9:2"
									},
									"scope": 1151,
									"src": "3496:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3792:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 441,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "3821:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "3835:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3845:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 440,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "3802:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "3802:52:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "3656:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3726:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3752:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3744:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3767:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3762:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3762:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:33:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:2"
									},
									"scope": 1151,
									"src": "3717:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "4021:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 458,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4038:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 460,
														"indexExpression": {
															"id": 459,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4057:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 462,
													"indexExpression": {
														"id": 461,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4038:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 457,
												"id": 463,
												"nodeType": "Return",
												"src": "4031:42:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3936:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3961:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3953:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3976:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3968:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "4015:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4015:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:6:2"
									},
									"scope": 1151,
									"src": "3927:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "4222:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "4236:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4242:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 476,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4242:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4242:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4236:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "4232:87:2",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "4254:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4305:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4297:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 482,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4297:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4297:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 481,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4275:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 487,
															"nodeType": "RevertStatement",
															"src": "4268:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4545:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "4537:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 490,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4537:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"arguments": [
														{
															"id": 493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4569:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "4573:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 495,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "4582:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 492,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4561:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4609:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 500,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "4626:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4609:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "IfStatement",
												"src": "4605:109:2",
												"trueBody": {
													"id": 508,
													"nodeType": "Block",
													"src": "4632:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "4674:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "4680:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 505,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "4689:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 502,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "4653:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4653:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 507,
															"nodeType": "RevertStatement",
															"src": "4646:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "4086:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4151:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4164:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4186:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4178:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4198:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4190:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:43:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:2"
									},
									"scope": 1151,
									"src": "4142:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "4862:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4889:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "4895:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4899:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 521,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529,
															559
														],
														"referencedDeclaration": 559,
														"src": "4872:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:2"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4726:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4795:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4820:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4812:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4826:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4846:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4838:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:43:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4862:0:2"
									},
									"scope": 1151,
									"src": "4786:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5087:130:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5110:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5116:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5120:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "5097:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5097:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "5097:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 550,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "5172:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5172:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5186:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5192:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5196:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5205:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 547,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "5138:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1391_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5150:21:2",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "5138:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "5138:72:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4924:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4993:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5018:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5010:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5066:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5053:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 537,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5053:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:62:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:0:2"
									},
									"scope": 1151,
									"src": "4984:233:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "5807:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 567,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "5824:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 569,
													"indexExpression": {
														"id": 568,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5832:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5824:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 566,
												"id": 570,
												"nodeType": "Return",
												"src": "5817:23:2"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5223:504:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5741:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:17:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5798:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:9:2"
									},
									"scope": 1151,
									"src": "5732:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "6042:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 580,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "6059:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 582,
													"indexExpression": {
														"id": 581,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "6075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6059:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 579,
												"id": 583,
												"nodeType": "Return",
												"src": "6052:31:2"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "5853:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5972:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "5985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5984:17:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6033:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:9:2"
									},
									"scope": 1151,
									"src": "5963:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "6510:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 597,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6558:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6539:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 603,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "6577:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 604,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "6586:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6577:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 607,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "6614:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 608,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 606,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "6597:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6597:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6577:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 612,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "6646:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 611,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "6633:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6633:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 614,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "6658:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6633:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6577:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 617,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6576:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6539:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 596,
												"id": 619,
												"nodeType": "Return",
												"src": "6520:146:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "6096:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6410:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6432:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "6424:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6447:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "6439:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6464:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "6456:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6423:49:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "6504:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6504:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:6:2"
									},
									"scope": 1151,
									"src": "6401:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "7204:271:2",
										"statements": [
											{
												"condition": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7218:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 632,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "7233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 633,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "7240:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 634,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "7249:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 631,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "7219:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7219:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 656,
												"nodeType": "IfStatement",
												"src": "7214:255:2",
												"trueBody": {
													"id": 655,
													"nodeType": "Block",
													"src": "7259:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 637,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "7277:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7294:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7286:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 638,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7286:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7286:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7277:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 653,
																"nodeType": "Block",
																"src": "7375:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 649,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "7427:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 650,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 628,
																					"src": "7436:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 648,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 136,
																				"src": "7400:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7400:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 652,
																		"nodeType": "RevertStatement",
																		"src": "7393:51:2"
																	}
																]
															},
															"id": 654,
															"nodeType": "IfStatement",
															"src": "7273:186:2",
															"trueBody": {
																"id": 647,
																"nodeType": "Block",
																"src": "7298:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 644,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 628,
																					"src": "7346:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 643,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7323:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7323:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 646,
																		"nodeType": "RevertStatement",
																		"src": "7316:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "6679:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7116:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7141:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "7133:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7133:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7156:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "7148:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7173:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "7165:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7132:49:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7204:0:2"
									},
									"scope": 1151,
									"src": "7107:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "8192:78:2",
										"statements": [
											{
												"id": 672,
												"nodeType": "UncheckedBlock",
												"src": "8202:62:2",
												"statements": [
													{
														"expression": {
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 666,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "8226:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 668,
																"indexExpression": {
																	"id": 667,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "8236:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8226:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 669,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "8248:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8226:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 671,
														"nodeType": "ExpressionStatement",
														"src": "8226:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "7481:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8126:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8151:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "8143:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8168:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "8160:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 662,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8142:32:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8192:0:2"
									},
									"scope": 1151,
									"src": "8117:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "8958:700:2",
										"statements": [
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8976:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "8968:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 686,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8968:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [
														{
															"id": 689,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8992:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "8983:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8983:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8968:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9060:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9076:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9068:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9068:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9068:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9060:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "9056:86:2",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "9080:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 699,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "9111:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 700,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "9117:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 701,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "9123:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 698,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "9094:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9094:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 703,
															"nodeType": "ExpressionStatement",
															"src": "9094:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 706,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9186:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9202:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9194:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 707,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9194:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9194:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9186:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 733,
												"nodeType": "IfStatement",
												"src": "9182:256:2",
												"trueBody": {
													"id": 732,
													"nodeType": "Block",
													"src": "9206:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9319:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9311:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 713,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9311:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9311:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 717,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "9323:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9340:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9332:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 718,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9332:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9332:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9344:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 712,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1018,
																		1084
																	],
																	"referencedDeclaration": 1084,
																	"src": "9302:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9302:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 724,
															"nodeType": "ExpressionStatement",
															"src": "9302:48:2"
														},
														{
															"id": 731,
															"nodeType": "UncheckedBlock",
															"src": "9365:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 725,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "9393:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 727,
																			"indexExpression": {
																				"id": 726,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "9403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9393:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9412:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9393:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 730,
																	"nodeType": "ExpressionStatement",
																	"src": "9393:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "9452:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9466:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9458:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 735,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9458:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9458:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9452:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9448:107:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9470:85:2",
													"statements": [
														{
															"id": 746,
															"nodeType": "UncheckedBlock",
															"src": "9484:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "9512:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "9522:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9512:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9529:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9512:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 745,
																	"nodeType": "ExpressionStatement",
																	"src": "9512:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 749,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "9565:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 751,
														"indexExpression": {
															"id": 750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9573:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9565:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 752,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "9584:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9565:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "9565:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 756,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "9611:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9617:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9621:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 755,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "9602:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9602:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "EmitStatement",
												"src": "9597:32:2"
											},
											{
												"expression": {
													"id": 761,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "9647:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 685,
												"id": 762,
												"nodeType": "Return",
												"src": "9640:11:2"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "8276:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8872:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8888:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8880:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8900:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8892:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8917:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8909:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8879:43:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "8949:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8948:9:2"
									},
									"scope": 1151,
									"src": "8863:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "10033:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10047:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10061:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10053:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 773,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10053:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10053:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10047:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "10043:87:2",
												"trueBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "10065:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10116:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10108:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 779,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10108:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10108:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "10086:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10086:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 784,
															"nodeType": "RevertStatement",
															"src": "10079:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10147:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "10139:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10139:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10171:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "10175:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10192:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10184:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10184:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10184:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "10163:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10163:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10139:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "10209:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10234:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 799,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10226:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10226:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10209:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"nodeType": "IfStatement",
												"src": "10205:96:2",
												"trueBody": {
													"id": 811,
													"nodeType": "Block",
													"src": "10238:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10287:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10279:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 805,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10279:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10279:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 804,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "10259:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10259:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "RevertStatement",
															"src": "10252:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "9664:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9989:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10003:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "9995:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10015:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "10007:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10007:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9994:29:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10033:0:2"
									},
									"scope": 1151,
									"src": "9980:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "10715:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "10735:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "10739:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10748:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 822,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															829,
															859
														],
														"referencedDeclaration": 859,
														"src": "10725:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10725:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "10725:26:2"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "10313:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10667:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10685:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10677:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10697:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10689:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10676:29:2"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10715:0:2"
									},
									"scope": 1151,
									"src": "10658:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "11063:123:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "11079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "11083:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "11073:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11073:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "11073:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 847,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "11135:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11135:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11157:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11149:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11149:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11149:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "11161:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "11165:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "11174:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 844,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11101:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1391_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11113:21:2",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "11101:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11101:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "11101:78:2"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "10764:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10988:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11006:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "10998:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11018:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "11010:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11010:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "11027:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11027:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10997:48:2"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11063:0:2"
									},
									"scope": 1151,
									"src": "10979:207:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "11553:186:2",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11571:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "11563:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 865,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11563:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11603:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11595:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11595:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11595:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "11607:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11624:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11616:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 873,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11616:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11616:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 867,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "11587:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11587:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11563:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "11641:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11666:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 880,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11658:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11658:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11641:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11637:96:2",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11670:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 886,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "11714:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 885,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "11691:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11691:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11684:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "11192:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11521:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "11527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11526:17:2"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11553:0:2"
									},
									"scope": 1151,
									"src": "11512:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "12134:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "12148:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12162:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 903,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12154:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12154:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12148:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12144:87:2",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "12166:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12217:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12209:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 909,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12209:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12209:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 908,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "12187:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12187:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 914,
															"nodeType": "RevertStatement",
															"src": "12180:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12248:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "12240:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 917,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12240:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "12272:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "12276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12293:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12285:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12285:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12285:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 919,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "12264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12264:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12240:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "12310:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12335:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12327:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 929,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12327:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12327:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12310:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 939,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "12412:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 940,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12429:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12412:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 949,
													"nodeType": "IfStatement",
													"src": "12408:109:2",
													"trueBody": {
														"id": 948,
														"nodeType": "Block",
														"src": "12435:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 943,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "12477:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 944,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "12483:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 945,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 918,
																			"src": "12492:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 942,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "12456:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12456:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 947,
																"nodeType": "RevertStatement",
																"src": "12449:57:2"
															}
														]
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "12306:211:2",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "12339:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "12383:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 934,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "12360:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12360:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "12353:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "11745:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12072:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12090:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "12082:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12082:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12104:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "12096:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12096:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12116:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "12108:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12081:43:2"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12134:0:2"
									},
									"scope": 1151,
									"src": "12063:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "13532:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 963,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "13556:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "13562:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13566:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13575:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 962,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															970,
															1000
														],
														"referencedDeclaration": 1000,
														"src": "13542:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13542:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "13542:36:2"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "12529:923:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13466:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13488:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "13480:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13502:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "13494:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13514:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "13506:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13506:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13479:43:2"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13532:0:2"
									},
									"scope": 1151,
									"src": "13457:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "13924:127:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "13934:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13934:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "13934:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 991,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "14006:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14006:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "14020:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "14026:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "14030:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 996,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "14039:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 988,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "13972:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1391_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13984:21:2",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "13972:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13972:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "13972:72:2"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "13591:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13831:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13853:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "13845:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13867:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "13859:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13879:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "13871:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "13888:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 978,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13888:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13844:62:2"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13924:0:2"
									},
									"scope": 1151,
									"src": "13822:229:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "14564:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "14583:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "14587:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1013,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "14596:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1010,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1018,
															1084
														],
														"referencedDeclaration": 1084,
														"src": "14574:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14574:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "14574:33:2"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "14057:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14503:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14520:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14512:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14512:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14532:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14524:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14549:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14541:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14541:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14511:43:2"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14564:0:2"
									},
									"scope": 1151,
									"src": "14494:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "14890:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "14956:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1031,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "14969:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14985:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14977:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1032,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14977:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14977:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14969:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14956:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "14952:460:2",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "14989:423:2",
													"statements": [
														{
															"assignments": [
																1039
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1039,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15011:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1075,
																	"src": "15003:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15003:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1043,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1041,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "15033:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1040,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "15019:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15019:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15003:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1044,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "15169:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15185:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15177:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1045,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15177:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15177:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15169:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1050,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1039,
																			"src": "15191:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1051,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "15200:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15191:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15169:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15208:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1055,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "15226:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1056,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "15233:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1054,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "15209:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15209:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15169:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1065,
															"nodeType": "IfStatement",
															"src": "15165:142:2",
															"trueBody": {
																"id": 1064,
																"nodeType": "Block",
																"src": "15240:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1061,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "15287:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1060,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "15265:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15265:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1063,
																		"nodeType": "RevertStatement",
																		"src": "15258:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1066,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "15325:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1074,
															"nodeType": "IfStatement",
															"src": "15321:81:2",
															"trueBody": {
																"id": 1073,
																"nodeType": "Block",
																"src": "15336:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1068,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1039,
																					"src": "15368:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1069,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "15375:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1070,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "15379:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1067,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1176,
																				"src": "15359:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15359:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1072,
																		"nodeType": "EmitStatement",
																		"src": "15354:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1077,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "15422:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1079,
														"indexExpression": {
															"id": 1078,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "15438:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15422:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1080,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15449:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15422:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "15422:29:2"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "14620:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14822:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "14814:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14834:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "14826:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14851:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "14843:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14862:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "14857:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14857:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:59:2"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14890:0:2"
									},
									"scope": 1151,
									"src": "14796:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "15760:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "15774:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15794:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15786:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15786:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15786:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15774:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1105,
												"nodeType": "IfStatement",
												"src": "15770:91:2",
												"trueBody": {
													"id": 1104,
													"nodeType": "Block",
													"src": "15798:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1101,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "15841:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1100,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "15819:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15819:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1103,
															"nodeType": "RevertStatement",
															"src": "15812:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1106,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "15870:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1109,
															"indexExpression": {
																"id": 1107,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "15889:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15870:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1110,
														"indexExpression": {
															"id": 1108,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "15896:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15870:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1111,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "15908:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15870:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "15870:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "15946:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "15953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "15963:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1114,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "15931:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15931:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "15926:46:2"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "15464:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15676:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15703:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "15695:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15718:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "15710:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15733:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "15728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15694:48:2"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15760:0:2"
									},
									"scope": 1151,
									"src": "15667:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "16286:169:2",
										"statements": [
											{
												"assignments": [
													1130
												],
												"declarations": [
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16304:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "16296:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1129,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16296:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"arguments": [
														{
															"id": 1132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "16321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "16312:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16312:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16296:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "16343:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16360:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16352:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1136,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16352:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16352:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16343:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "16339:88:2",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "16364:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1142,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "16408:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1141,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "16385:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16385:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1144,
															"nodeType": "RevertStatement",
															"src": "16378:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1147,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1130,
													"src": "16443:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1148,
												"nodeType": "Return",
												"src": "16436:12:2"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "15985:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16223:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16245:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "16237:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16236:17:2"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "16277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16276:9:2"
									},
									"scope": 1151,
									"src": "16214:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1152,
							"src": "775:15682:2",
							"usedErrors": [
								105,
								110,
								119,
								124,
								129,
								136,
								141,
								146
							],
							"usedEvents": [
								1167,
								1176,
								1185
							]
						}
					],
					"src": "107:16351:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1764
						],
						"IERC721": [
							1268
						]
					},
					"id": 1269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1269,
							"sourceUnit": 1765,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1764,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1157,
										"name": "IERC165",
										"nameLocations": [
											"288:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1764,
										"src": "288:7:3"
									},
									"id": 1158,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1156,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:3",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1268,
							"linearizedBaseContracts": [
								1268,
								1764
							],
							"name": "IERC721",
							"nameLocation": "277:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1167,
									"name": "Transfer",
									"nameLocation": "401:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "410:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "432:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "452:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:3"
									},
									"src": "395:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1176,
									"name": "Approval",
									"nameLocation": "588:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "597:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "620:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "646:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:3"
									},
									"src": "582:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1185,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "820:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "843:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "869:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:3"
									},
									"src": "799:85:3"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "990:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:3"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1028:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:3"
									},
									"scope": 1268,
									"src": "971:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1204:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:3"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:3"
									},
									"scope": 1268,
									"src": "1187:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1861:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1875:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1887:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1904:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:3"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:3"
									},
									"scope": 1268,
									"src": "1835:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2691:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:3"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:3"
									},
									"scope": 1268,
									"src": "2651:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3495:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3509:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3521:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:3"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:3"
									},
									"scope": 1268,
									"src": "3473:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4027:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:3"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:3"
									},
									"scope": 1268,
									"src": "4010:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4418:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4436:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:3"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:3"
									},
									"scope": 1268,
									"src": "4391:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "4631:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:3"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "4671:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:3"
									},
									"scope": 1268,
									"src": "4610:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4864:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4879:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:3"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4920:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:3"
									},
									"scope": 1268,
									"src": "4838:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1269,
							"src": "267:4661:3",
							"usedErrors": [],
							"usedEvents": [
								1167,
								1176,
								1185
							]
						}
					],
					"src": "108:4821:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1286
						]
					},
					"id": 1287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1271,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:4",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1286,
							"linearizedBaseContracts": [
								1286
							],
							"name": "IERC721Receiver",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "877:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "869:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "903:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "895:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "925:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "917:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "957:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "942:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:4"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "986:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:4"
									},
									"scope": 1286,
									"src": "834:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1287,
							"src": "297:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:881:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1268
						],
						"IERC721Metadata": [
							1314
						]
					},
					"id": 1315,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1315,
							"sourceUnit": 1269,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1289,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1268,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1292,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1268,
										"src": "357:7:5"
									},
									"id": 1293,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1291,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1314,
							"linearizedBaseContracts": [
								1314,
								1268,
								1764
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1314,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1302,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1314,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1314,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1315,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1167,
								1176,
								1185
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/utils/ERC721Utils.sol",
					"exportedSymbols": {
						"ERC721Utils": [
							1391
						],
						"IERC721Errors": [
							147
						],
						"IERC721Receiver": [
							1286
						]
					},
					"id": 1392,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1316,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1392,
							"sourceUnit": 1287,
							"src": "59:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1286,
										"src": "67:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../interfaces/draft-IERC6093.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1392,
							"sourceUnit": 195,
							"src": "115:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "123:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1321,
								"nodeType": "StructuredDocumentation",
								"src": "186:129:6",
								"text": " @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721]."
							},
							"fullyImplemented": true,
							"id": 1391,
							"linearizedBaseContracts": [
								1391
							],
							"name": "ERC721Utils",
							"nameLocation": "324:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "1036:797:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1335,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "1050:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1053:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1050:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1058:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1050:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1067:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1050:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "1046:781:6",
												"trueBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "1070:757:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1365,
																		"nodeType": "Block",
																		"src": "1180:214:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1352,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1350,
																						"src": "1202:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1353,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1286,
																								"src": "1212:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1286_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1354,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1228:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1285,
																							"src": "1212:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1245:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1212:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1202:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1364,
																				"nodeType": "IfStatement",
																				"src": "1198:182:6",
																				"trueBody": {
																					"id": 1363,
																					"nodeType": "Block",
																					"src": "1255:125:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1360,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1328,
																										"src": "1358:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1357,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 147,
																										"src": "1322:13:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$147_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1359,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1336:21:6",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 129,
																									"src": "1322:35:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1361,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1322:39:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1362,
																							"nodeType": "RevertStatement",
																							"src": "1315:46:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1366,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1351,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1350,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "1172:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1366,
																				"src": "1165:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1349,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1165:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1164:15:6"
																	},
																	"src": "1156:238:6"
																},
																{
																	"block": {
																		"id": 1384,
																		"nodeType": "Block",
																		"src": "1423:394:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1370,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1368,
																							"src": "1445:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1452:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1445:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1462:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "1445:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1382,
																					"nodeType": "Block",
																					"src": "1613:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "1699:86:6",
																								"nodeType": "YulBlock",
																								"src": "1699:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "1736:2:6",
																															"nodeType": "YulLiteral",
																															"src": "1736:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "1740:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "1740:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "1732:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "1732:3:6"
																													},
																													"nativeSrc": "1732:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "1732:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "1755:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "1755:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "1749:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "1749:5:6"
																													},
																													"nativeSrc": "1749:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "1749:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1725:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "1725:6:6"
																											},
																											"nativeSrc": "1725:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "1725:38:6"
																										},
																										"nativeSrc": "1725:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "1725:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1368,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1740:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1368,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1755:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1381,
																							"nodeType": "InlineAssembly",
																							"src": "1690:95:6"
																						}
																					]
																				},
																				"id": 1383,
																				"nodeType": "IfStatement",
																				"src": "1441:362:6",
																				"trueBody": {
																					"id": 1380,
																					"nodeType": "Block",
																					"src": "1465:142:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1377,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1328,
																										"src": "1585:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1374,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 147,
																										"src": "1549:13:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$147_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1376,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1563:21:6",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 129,
																									"src": "1549:35:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1378,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1549:39:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1379,
																							"nodeType": "RevertStatement",
																							"src": "1542:46:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1385,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1369,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1368,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "1415:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1385,
																				"src": "1402:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1367,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1402:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1401:21:6"
																	},
																	"src": "1395:422:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1344,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "1125:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1345,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "1135:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1346,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "1141:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1347,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "1150:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1341,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "1104:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1340,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "1088:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1286_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1088:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1286",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1108:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1285,
																	"src": "1088:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1088:67:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1386,
															"nodeType": "TryStatement",
															"src": "1084:733:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "342:523:6",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "879:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "918:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "910:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "944:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "936:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "966:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "958:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "986:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "978:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1016:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1003:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:126:6"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:6"
									},
									"scope": 1391,
									"src": "870:963:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1392,
							"src": "316:1519:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1803:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1421
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1393,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1394,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1399,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1401,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1421,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1408,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1410,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1421,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1416,
												"id": 1418,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1421,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1422,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							1473
						]
					},
					"id": 1474,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "59:459:8",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]."
							},
							"fullyImplemented": true,
							"id": 1473,
							"linearizedBaseContracts": [
								1473
							],
							"name": "Panic",
							"nameLocation": "569:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "581:36:8",
										"text": "@dev generic / unspecified error"
									},
									"id": 1428,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "648:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "622:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 1427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "658:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "668:37:8",
										"text": "@dev used by the assert() builtin"
									},
									"id": 1432,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "736:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "710:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 1431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "745:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "755:41:8",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 1436,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "827:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "801:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "801:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 1435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "844:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "854:35:8",
										"text": "@dev division or modulo by zero"
									},
									"id": 1440,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "920:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "894:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "894:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 1439,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "939:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "949:30:8",
										"text": "@dev enum conversion error"
									},
									"id": 1444,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1010:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "984:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 1443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1034:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "1044:36:8",
										"text": "@dev invalid encoding in storage"
									},
									"id": 1448,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1111:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "1085:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1085:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 1447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1136:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "1146:24:8",
										"text": "@dev empty array pop"
									},
									"id": 1452,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1201:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "1175:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1175:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 1451,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1219:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1229:35:8",
										"text": "@dev array out of bounds access"
									},
									"id": 1456,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1295:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "1269:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1269:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 1455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1317:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "1327:65:8",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 1460,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1423:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "1397:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 1459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1440:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "1450:42:8",
										"text": "@dev calling invalid internal function"
									},
									"id": 1464,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1523:25:8",
									"nodeType": "VariableDeclaration",
									"scope": 1473,
									"src": "1497:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1497:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 1463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1551:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "1723:178:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1785:110:8",
													"nodeType": "YulBlock",
													"src": "1785:110:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1806:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1806:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:10:8",
																		"nodeType": "YulLiteral",
																		"src": "1812:10:8",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1799:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:8"
																},
																"nativeSrc": "1799:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1799:24:8"
															},
															"nativeSrc": "1799:24:8",
															"nodeType": "YulExpressionStatement",
															"src": "1799:24:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1843:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1843:4:8",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1849:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1849:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1836:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:8"
																},
																"nativeSrc": "1836:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1836:18:8"
															},
															"nativeSrc": "1836:18:8",
															"nodeType": "YulExpressionStatement",
															"src": "1836:18:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1874:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1874:4:8",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1880:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1880:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1867:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:8"
																},
																"nativeSrc": "1867:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1867:18:8"
															},
															"nativeSrc": "1867:18:8",
															"nodeType": "YulExpressionStatement",
															"src": "1867:18:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "1849:4:8",
														"valueSize": 1
													}
												],
												"id": 1470,
												"nodeType": "InlineAssembly",
												"src": "1776:119:8"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "1562:113:8",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1689:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1703:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1695:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:14:8"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:0:8"
									},
									"scope": 1473,
									"src": "1680:221:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1474,
							"src": "561:1342:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1871:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3349
						],
						"SignedMath": [
							5258
						],
						"Strings": [
							1728
						]
					},
					"id": 1729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1475,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 3350,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1476,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3349,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 5259,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5258,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1480,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1728,
							"linearizedBaseContracts": [
								1728
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1483,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1486,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1493,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1539,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1502
														],
														"declarations": [
															{
																"constant": false,
																"id": 1502,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1539,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1509,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1503,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3349,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3349_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3121,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1511
														],
														"declarations": [
															{
																"constant": false,
																"id": 1511,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1539,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1510,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1516,
														"initialValue": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1512,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1518
														],
														"declarations": [
															{
																"constant": false,
																"id": 1518,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1539,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1517,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1519,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1511,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1502,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1520,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1535,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1522,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1524,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1483,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1518,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1496,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1525,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1526,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1529,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1534,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1533,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1536,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1537,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1500,
														"id": 1538,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1728,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1559,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5258,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$5258_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5257,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1558,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1549,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1565,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1728,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1585,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1576,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1579,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1570,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1577,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3349,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3349_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3292,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1575,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1587,
																	1670,
																	1690
																],
																"referencedDeclaration": 1670,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1574,
														"id": 1584,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1728,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"initialValue": {
													"id": 1599,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1590,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1601,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1606,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1612,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1614,
														"indexExpression": {
															"hexValue": "30",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1618,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1620,
														"indexExpression": {
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1652,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1638,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1640,
																	"indexExpression": {
																		"id": 1639,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1641,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1645,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1642,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1648,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1651,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1632,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"initializationExpression": {
													"assignments": [
														1625
													],
													"declarations": [
														{
															"constant": false,
															"id": 1625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1653,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1631,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1627,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1635,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1654,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1658,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1659,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1657,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1661,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1664,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1668,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1728,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1683,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1681,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1686,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1678,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1587,
															1670,
															1690
														],
														"referencedDeclaration": 1670,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1688,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1728,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1702,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1700,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1707,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1705,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1714,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1693,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1712,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1711,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1720,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1718,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1717,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1725,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1692,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1728,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1729,
							"src": "251:2847:9",
							"usedErrors": [
								1493
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1752
						],
						"IERC165": [
							1764
						]
					},
					"id": 1753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1753,
							"sourceUnit": 1765,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1731,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1764,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1734,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1764,
										"src": "688:7:10"
									},
									"id": 1735,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752,
								1764
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1763
									],
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "845:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1743,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "862:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1745,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1764_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1764_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1744,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1764",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1749,
												"nodeType": "Return",
												"src": "855:47:10"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "790:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "839:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:10"
									},
									"scope": 1752,
									"src": "763:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1753,
							"src": "660:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1764
						]
					},
					"id": 1765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1755,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1764,
							"linearizedBaseContracts": [
								1764
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1757,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1764,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1765,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3349
						],
						"Panic": [
							1473
						],
						"SafeCast": [
							5114
						]
					},
					"id": 3350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 1768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 1474,
							"src": "129:35:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1767,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1473,
										"src": "137:5:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 5115,
							"src": "165:40:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1769,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5114,
										"src": "173:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1771,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3349,
							"linearizedBaseContracts": [
								3349
							],
							"name": "Math",
							"nameLocation": "289:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1776,
									"members": [
										{
											"id": 1772,
											"name": "Floor",
											"nameLocation": "324:5:12",
											"nodeType": "EnumValue",
											"src": "324:5:12"
										},
										{
											"id": 1773,
											"name": "Ceil",
											"nameLocation": "367:4:12",
											"nodeType": "EnumValue",
											"src": "367:4:12"
										},
										{
											"id": 1774,
											"name": "Trunc",
											"nameLocation": "409:5:12",
											"nodeType": "EnumValue",
											"src": "409:5:12"
										},
										{
											"id": 1775,
											"name": "Expand",
											"nameLocation": "439:6:12",
											"nodeType": "EnumValue",
											"src": "439:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:12",
									"nodeType": "EnumDefinition",
									"src": "300:169:12"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "677:140:12",
										"statements": [
											{
												"id": 1806,
												"nodeType": "UncheckedBlock",
												"src": "687:124:12",
												"statements": [
													{
														"assignments": [
															1789
														],
														"declarations": [
															{
																"constant": false,
																"id": 1789,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1806,
																"src": "711:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1788,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1793,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1790,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "723:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1791,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "727:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "746:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1795,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "750:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1801,
														"nodeType": "IfStatement",
														"src": "742:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1799,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1787,
															"id": 1800,
															"nodeType": "Return",
															"src": "753:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1803,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "798:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1804,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1787,
														"id": 1805,
														"nodeType": "Return",
														"src": "784:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:12",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "602:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "613:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:12"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "647:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "661:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:12"
									},
									"scope": 3349,
									"src": "586:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "1028:113:12",
										"statements": [
											{
												"id": 1834,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "1066:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1821,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "1070:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1827,
														"nodeType": "IfStatement",
														"src": "1062:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1819,
															"id": 1826,
															"nodeType": "Return",
															"src": "1073:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1829,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "1118:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1830,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "1122:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1832,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1819,
														"id": 1833,
														"nodeType": "Return",
														"src": "1104:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "953:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "964:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:12"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "998:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "1012:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:12"
									},
									"scope": 3349,
									"src": "937:204:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "1355:417:12",
										"statements": [
											{
												"id": 1876,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "1623:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1855,
														"nodeType": "IfStatement",
														"src": "1619:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1853,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1847,
															"id": 1854,
															"nodeType": "Return",
															"src": "1631:16:12"
														}
													},
													{
														"assignments": [
															1857
														],
														"declarations": [
															{
																"constant": false,
																"id": 1857,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1876,
																"src": "1661:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1856,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1861,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "1673:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "1677:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1862,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "1696:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1863,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "1700:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1865,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "1705:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1871,
														"nodeType": "IfStatement",
														"src": "1692:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1869,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1847,
															"id": 1870,
															"nodeType": "Return",
															"src": "1708:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1873,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "1753:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1874,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1847,
														"id": 1875,
														"nodeType": "Return",
														"src": "1739:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1280:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1291:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:12"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1325:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1339:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:12"
									},
									"scope": 3349,
									"src": "1264:508:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "1987:114:12",
										"statements": [
											{
												"id": 1904,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1890,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "2025:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1897,
														"nodeType": "IfStatement",
														"src": "2021:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1889,
															"id": 1896,
															"nodeType": "Return",
															"src": "2033:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "2078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1900,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "2082:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1902,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1889,
														"id": 1903,
														"nodeType": "Return",
														"src": "2064:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:12",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1912:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1923:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:12"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1957:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1971:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:12"
									},
									"scope": 3349,
									"src": "1896:205:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "2326:114:12",
										"statements": [
											{
												"id": 1932,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1918,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "2364:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1925,
														"nodeType": "IfStatement",
														"src": "2360:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1923,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1917,
															"id": 1924,
															"nodeType": "Return",
															"src": "2372:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1927,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "2417:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1928,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "2421:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1917,
														"id": 1931,
														"nodeType": "Return",
														"src": "2403:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2251:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2262:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:12"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2296:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "2310:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:12"
									},
									"scope": 3349,
									"src": "2235:205:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "2912:207:12",
										"statements": [
											{
												"id": 1959,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:12",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "3060:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1949,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1947,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1939,
																						"src": "3066:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1948,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1941,
																						"src": "3070:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1950,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1953,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1937,
																					"src": "3091:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1951,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5114,
																					"src": "3075:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:12",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5113,
																				"src": "3075:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1956,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1945,
														"id": 1958,
														"nodeType": "Return",
														"src": "3053:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:12",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2842:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2858:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2869:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:12"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2903:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:12"
									},
									"scope": 3349,
									"src": "2825:294:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "3256:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1972,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "3281:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1973,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "3285:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1975,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "3288:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1976,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "3291:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1971,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "3273:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1970,
												"id": 1978,
												"nodeType": "Return",
												"src": "3266:27:12"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3202:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3213:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:12"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "3247:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:12"
									},
									"scope": 3349,
									"src": "3189:111:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "3438:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "3463:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1992,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1994,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "3470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1995,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "3473:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1990,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "3455:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1989,
												"id": 1997,
												"nodeType": "Return",
												"src": "3448:27:12"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3384:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:12"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3429:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:12"
									},
									"scope": 3349,
									"src": "3371:111:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "3666:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2009,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "3721:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2010,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3725:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2012,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2013,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "3731:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2014,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2004,
																		"src": "3735:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2016,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2020,
												"nodeType": "Return",
												"src": "3713:28:12"
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3623:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:12"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3657:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:12"
									},
									"scope": 3349,
									"src": "3595:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "4040:633:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "4054:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2043,
												"nodeType": "IfStatement",
												"src": "4050:150:12",
												"trueBody": {
													"id": 2042,
													"nodeType": "Block",
													"src": "4062:138:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2038,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "4166:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:12",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1440,
																		"src": "4166:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2035,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "4154:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:12",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "4154:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2041,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:12"
														}
													]
												}
											},
											{
												"id": 2061,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:12",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2046,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "4630:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2044,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "4614:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "4614:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2052,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2050,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2025,
																							"src": "4641:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2051,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2053,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2054,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2027,
																				"src": "4650:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2031,
														"id": 2060,
														"nodeType": "Return",
														"src": "4607:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3986:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3997:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:12"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "4031:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:12"
									},
									"scope": 3349,
									"src": "3969:704:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "5094:4132:12",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "5104:4116:12",
												"statements": [
													{
														"assignments": [
															2076
														],
														"declarations": [
															{
																"constant": false,
																"id": 2076,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5445:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "5437:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2075,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5437:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "5453:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2078,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "5457:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5453:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5437:21:12"
													},
													{
														"assignments": [
															2082
														],
														"declarations": [
															{
																"constant": false,
																"id": 2082,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5525:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "5517:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5517:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2083,
														"nodeType": "VariableDeclarationStatement",
														"src": "5517:13:12"
													},
													{
														"AST": {
															"nativeSrc": "5597:122:12",
															"nodeType": "YulBlock",
															"src": "5597:122:12",
															"statements": [
																{
																	"nativeSrc": "5615:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5615:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5632:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5632:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5635:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5635:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5642:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5642:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5638:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5638:3:12"
																				},
																				"nativeSrc": "5638:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5638:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5625:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5625:6:12"
																		},
																		"nativeSrc": "5625:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5625:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5619:2:12",
																			"nodeType": "YulTypedName",
																			"src": "5619:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5662:43:12",
																	"nodeType": "YulAssignment",
																	"src": "5662:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5679:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5679:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5683:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5683:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5675:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5675:3:12"
																				},
																				"nativeSrc": "5675:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5675:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5694:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5694:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5698:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5698:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5691:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5691:2:12"
																				},
																				"nativeSrc": "5691:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5671:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:12"
																		},
																		"nativeSrc": "5671:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5671:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5662:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5662:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "5683:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "5698:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "5662:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2066,
																"isOffset": false,
																"isSlot": false,
																"src": "5632:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5635:1:12",
																"valueSize": 1
															}
														],
														"id": 2084,
														"nodeType": "InlineAssembly",
														"src": "5588:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "5800:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5809:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5800:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "5796:368:12",
														"trueBody": {
															"id": 2092,
															"nodeType": "Block",
															"src": "5812:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2088,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "6130:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2089,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "6138:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6130:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2074,
																	"id": 2091,
																	"nodeType": "Return",
																	"src": "6123:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "6274:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2095,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "6289:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2112,
														"nodeType": "IfStatement",
														"src": "6270:143:12",
														"trueBody": {
															"id": 2111,
															"nodeType": "Block",
															"src": "6296:117:12",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2101,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2070,
																							"src": "6334:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6349:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6334:16:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 2104,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1473,
																							"src": "6352:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2105,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6358:16:12",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1440,
																						"src": "6352:22:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 2106,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1473,
																							"src": "6376:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6382:14:12",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1436,
																						"src": "6376:20:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2100,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1961,
																					"src": "6326:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6326:71:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2097,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "6314:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:5:12",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1472,
																			"src": "6314:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6314:84:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2110,
																	"nodeType": "ExpressionStatement",
																	"src": "6314:84:12"
																}
															]
														}
													},
													{
														"assignments": [
															2114
														],
														"declarations": [
															{
																"constant": false,
																"id": 2114,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6676:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "6668:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2113,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6668:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2115,
														"nodeType": "VariableDeclarationStatement",
														"src": "6668:17:12"
													},
													{
														"AST": {
															"nativeSrc": "6708:291:12",
															"nodeType": "YulBlock",
															"src": "6708:291:12",
															"statements": [
																{
																	"nativeSrc": "6777:38:12",
																	"nodeType": "YulAssignment",
																	"src": "6777:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6797:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6797:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6800:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6800:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6803:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6803:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6790:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6790:6:12"
																		},
																		"nativeSrc": "6790:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6790:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6777:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "6777:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6897:41:12",
																	"nodeType": "YulAssignment",
																	"src": "6897:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6910:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6910:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6920:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6920:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6931:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6931:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6917:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6917:2:12"
																				},
																				"nativeSrc": "6917:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6917:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6906:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:12"
																		},
																		"nativeSrc": "6906:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6897:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6897:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6955:30:12",
																	"nodeType": "YulAssignment",
																	"src": "6955:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6968:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6968:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6975:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6964:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6964:3:12"
																		},
																		"nativeSrc": "6964:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6964:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6955:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6955:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "6803:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "6931:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "6955:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "6968:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "6897:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "6910:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2114,
																"isOffset": false,
																"isSlot": false,
																"src": "6777:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2114,
																"isOffset": false,
																"isSlot": false,
																"src": "6920:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2114,
																"isOffset": false,
																"isSlot": false,
																"src": "6975:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2066,
																"isOffset": false,
																"isSlot": false,
																"src": "6797:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "6800:1:12",
																"valueSize": 1
															}
														],
														"id": 2116,
														"nodeType": "InlineAssembly",
														"src": "6699:300:12"
													},
													{
														"assignments": [
															2118
														],
														"declarations": [
															{
																"constant": false,
																"id": 2118,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7211:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "7203:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2117,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7203:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2125,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2119,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "7218:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2121,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "7237:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7233:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2123,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7232:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7203:46:12"
													},
													{
														"AST": {
															"nativeSrc": "7272:366:12",
															"nodeType": "YulBlock",
															"src": "7272:366:12",
															"statements": [
																{
																	"nativeSrc": "7337:37:12",
																	"nodeType": "YulAssignment",
																	"src": "7337:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7356:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "7356:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7369:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7369:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:12"
																		},
																		"nativeSrc": "7352:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7352:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7337:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "7337:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "7441:25:12",
																	"nodeType": "YulAssignment",
																	"src": "7441:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7454:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7454:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7461:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7461:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7450:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:12"
																		},
																		"nativeSrc": "7450:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7441:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7441:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "7585:39:12",
																	"nodeType": "YulAssignment",
																	"src": "7585:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7605:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7605:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7608:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "7608:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7601:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7601:3:12"
																						},
																						"nativeSrc": "7601:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7601:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7615:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "7615:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7597:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7597:3:12"
																				},
																				"nativeSrc": "7597:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7597:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7622:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7622:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7593:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:12"
																		},
																		"nativeSrc": "7593:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7593:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7585:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "7585:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "7337:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "7356:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "7441:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "7454:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "7369:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "7461:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "7585:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "7608:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2118,
																"isOffset": false,
																"isSlot": false,
																"src": "7615:4:12",
																"valueSize": 1
															}
														],
														"id": 2126,
														"nodeType": "InlineAssembly",
														"src": "7263:375:12"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2127,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "7704:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2128,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "7713:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2129,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "7721:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7713:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7704:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "7704:21:12"
													},
													{
														"assignments": [
															2134
														],
														"declarations": [
															{
																"constant": false,
																"id": 2134,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8068:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "8060:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2133,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8060:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2141,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8079:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2136,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "8083:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8079:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8078:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8098:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8078:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8060:39:12"
													},
													{
														"expression": {
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2142,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8316:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2144,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8331:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2145,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8345:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8331:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8327:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8316:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2149,
														"nodeType": "ExpressionStatement",
														"src": "8316:36:12"
													},
													{
														"expression": {
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2150,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8386:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8397:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2152,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8401:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2153,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8415:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8401:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8397:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8386:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2157,
														"nodeType": "ExpressionStatement",
														"src": "8386:36:12"
													},
													{
														"expression": {
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2158,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8458:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8469:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2160,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8473:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2161,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8487:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8473:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8469:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8458:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2165,
														"nodeType": "ExpressionStatement",
														"src": "8458:36:12"
													},
													{
														"expression": {
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2166,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8529:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8540:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2168,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8544:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2169,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8558:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8544:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8540:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8529:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2173,
														"nodeType": "ExpressionStatement",
														"src": "8529:36:12"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2174,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8602:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8613:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2176,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2177,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8631:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8617:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8613:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8602:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "8602:36:12"
													},
													{
														"expression": {
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "8676:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8687:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2184,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8691:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2185,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "8705:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8691:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8687:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8676:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2189,
														"nodeType": "ExpressionStatement",
														"src": "8676:36:12"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2190,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "9158:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "9167:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2192,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "9175:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9167:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9158:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "9158:24:12"
													},
													{
														"expression": {
															"id": 2196,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "9203:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2074,
														"id": 2197,
														"nodeType": "Return",
														"src": "9196:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:12",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5012:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5023:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5034:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:12"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5078:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:12"
									},
									"scope": 3349,
									"src": "4996:4230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "9465:128:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2216,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "9489:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2217,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "9492:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2218,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "9495:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2215,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2200,
																2237
															],
															"referencedDeclaration": 2200,
															"src": "9482:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9482:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2223,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "9543:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1776",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1776",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 2222,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3348,
																		"src": "9526:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1776_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9526:26:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2226,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2203,
																				"src": "9563:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2227,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "9566:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2228,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2207,
																				"src": "9569:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2225,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9556:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9556:25:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9584:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9556:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9526:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2220,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5114,
																"src": "9510:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9519:6:12",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5113,
															"src": "9510:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9510:76:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9482:104:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2235,
												"nodeType": "Return",
												"src": "9475:111:12"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "9232:118:12",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9364:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9379:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "9371:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9371:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9390:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "9382:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9401:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "9393:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9393:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9423:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "9414:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2208,
														"name": "Rounding",
														"nameLocations": [
															"9414:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "9414:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "9414:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9370:62:12"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "9456:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9456:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9455:9:12"
									},
									"scope": 3349,
									"src": "9355:238:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "10207:1849:12",
										"statements": [
											{
												"id": 2332,
												"nodeType": "UncheckedBlock",
												"src": "10217:1833:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2247,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "10245:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10250:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10245:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2252,
														"nodeType": "IfStatement",
														"src": "10241:20:12",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10260:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2246,
															"id": 2251,
															"nodeType": "Return",
															"src": "10253:8:12"
														}
													},
													{
														"assignments": [
															2254
														],
														"declarations": [
															{
																"constant": false,
																"id": 2254,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10740:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2332,
																"src": "10732:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2253,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10732:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2258,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "10752:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2256,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "10756:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10752:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10732:25:12"
													},
													{
														"assignments": [
															2260
														],
														"declarations": [
															{
																"constant": false,
																"id": 2260,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10779:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 2332,
																"src": "10771:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2259,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10771:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2262,
														"initialValue": {
															"id": 2261,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "10785:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10771:15:12"
													},
													{
														"assignments": [
															2264
														],
														"declarations": [
															{
																"constant": false,
																"id": 2264,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10929:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2332,
																"src": "10922:8:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2263,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10922:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2266,
														"initialValue": {
															"hexValue": "30",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10933:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10922:12:12"
													},
													{
														"assignments": [
															2268
														],
														"declarations": [
															{
																"constant": false,
																"id": 2268,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10955:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2332,
																"src": "10948:8:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2267,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10948:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2270,
														"initialValue": {
															"hexValue": "31",
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10959:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10948:12:12"
													},
													{
														"body": {
															"id": 2307,
															"nodeType": "Block",
															"src": "10998:882:12",
															"statements": [
																{
																	"assignments": [
																		2275
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2275,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11024:8:12",
																			"nodeType": "VariableDeclaration",
																			"scope": 2307,
																			"src": "11016:16:12",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2274,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11016:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2279,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2276,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "11035:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2277,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "11041:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11035:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11016:34:12"
																},
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2280,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2260,
																					"src": "11070:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2281,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2254,
																					"src": "11075:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2282,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11069:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2283,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2254,
																					"src": "11175:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2284,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2260,
																						"src": "11420:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2285,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2254,
																							"src": "11426:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2286,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2275,
																							"src": "11438:8:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11426:20:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11420:26:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2289,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11088:376:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11069:395:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "11069:395:12"
																},
																{
																	"expression": {
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2292,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2264,
																					"src": "11484:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 2293,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "11487:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2294,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11483:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2295,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "11569:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2296,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2264,
																						"src": "11823:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 2302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2297,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2268,
																							"src": "11827:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2300,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2275,
																									"src": "11838:8:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2299,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11831:6:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 2298,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11831:6:12",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11831:16:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11827:20:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11823:24:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2304,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11492:373:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11483:382:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2306,
																	"nodeType": "ExpressionStatement",
																	"src": "11483:382:12"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2271,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2254,
																"src": "10982:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10995:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10982:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2308,
														"nodeType": "WhileStatement",
														"src": "10975:905:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2309,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "11898:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11905:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11898:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2314,
														"nodeType": "IfStatement",
														"src": "11894:22:12",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11915:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2246,
															"id": 2313,
															"nodeType": "Return",
															"src": "11908:8:12"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2316,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "11967:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11971:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11967:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2242,
																		"src": "11974:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "11986:2:12",
																				"subExpression": {
																					"id": 2322,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2264,
																					"src": "11987:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11978:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2320,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11978:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11978:11:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11974:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2328,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "11999:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11991:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2326,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11991:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11991:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2315,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "11959:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11959:43:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2246,
														"id": 2331,
														"nodeType": "Return",
														"src": "11952:50:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "9599:533:12",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, expect 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Ferma's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10146:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10161:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10153:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10153:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10172:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10164:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10164:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10152:22:12"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10198:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10197:9:12"
									},
									"scope": 3349,
									"src": "10137:1919:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "12826:174:12",
										"statements": [
											{
												"assignments": [
													2347,
													2349
												],
												"declarations": [
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12842:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2369,
														"src": "12837:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12837:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2349,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12859:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2369,
														"src": "12851:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12851:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2355,
												"initialValue": {
													"arguments": [
														{
															"id": 2351,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "12879:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2352,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "12882:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2353,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12885:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2350,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2394,
															2476
														],
														"referencedDeclaration": 2394,
														"src": "12869:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12869:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12836:51:12"
											},
											{
												"condition": {
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12901:8:12",
													"subExpression": {
														"id": 2356,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "12902:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2366,
												"nodeType": "IfStatement",
												"src": "12897:74:12",
												"trueBody": {
													"id": 2365,
													"nodeType": "Block",
													"src": "12911:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2361,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "12937:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "12943:16:12",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1440,
																		"src": "12937:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2358,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "12925:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12931:5:12",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "12925:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12925:35:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2364,
															"nodeType": "ExpressionStatement",
															"src": "12925:35:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2367,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2349,
													"src": "12987:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2345,
												"id": 2368,
												"nodeType": "Return",
												"src": "12980:13:12"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "12062:678:12",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "12754:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12769:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "12761:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12761:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "12780:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "12772:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12772:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "12791:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "12783:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12783:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12760:33:12"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "12817:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12817:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12816:9:12"
									},
									"scope": 3349,
									"src": "12745:255:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "13855:1520:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2384,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "13869:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13874:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13869:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2391,
												"nodeType": "IfStatement",
												"src": "13865:29:12",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13885:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13892:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2389,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13884:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2383,
													"id": 2390,
													"nodeType": "Return",
													"src": "13877:17:12"
												}
											},
											{
												"AST": {
													"nativeSrc": "13956:1413:12",
													"nodeType": "YulBlock",
													"src": "13956:1413:12",
													"statements": [
														{
															"nativeSrc": "13970:22:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13970:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13987:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13987:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13981:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13981:5:12"
																},
																"nativeSrc": "13981:11:12",
																"nodeType": "YulFunctionCall",
																"src": "13981:11:12"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "13974:3:12",
																	"nodeType": "YulTypedName",
																	"src": "13974:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14900:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14900:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14905:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14905:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14893:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14893:6:12"
																},
																"nativeSrc": "14893:17:12",
																"nodeType": "YulFunctionCall",
																"src": "14893:17:12"
															},
															"nativeSrc": "14893:17:12",
															"nodeType": "YulExpressionStatement",
															"src": "14893:17:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "14934:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "14934:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14939:4:12",
																				"nodeType": "YulLiteral",
																				"src": "14939:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14930:3:12"
																		},
																		"nativeSrc": "14930:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14930:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14946:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14946:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14923:6:12"
																},
																"nativeSrc": "14923:28:12",
																"nodeType": "YulFunctionCall",
																"src": "14923:28:12"
															},
															"nativeSrc": "14923:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "14923:28:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "14975:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "14975:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14980:4:12",
																				"nodeType": "YulLiteral",
																				"src": "14980:4:12",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14971:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14971:3:12"
																		},
																		"nativeSrc": "14971:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14971:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14987:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14987:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14964:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14964:6:12"
																},
																"nativeSrc": "14964:28:12",
																"nodeType": "YulFunctionCall",
																"src": "14964:28:12"
															},
															"nativeSrc": "14964:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "14964:28:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15016:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15016:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15021:4:12",
																				"nodeType": "YulLiteral",
																				"src": "15021:4:12",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15012:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15012:3:12"
																		},
																		"nativeSrc": "15012:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15012:14:12"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15028:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15028:1:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15005:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15005:6:12"
																},
																"nativeSrc": "15005:25:12",
																"nodeType": "YulFunctionCall",
																"src": "15005:25:12"
															},
															"nativeSrc": "15005:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "15005:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15054:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15054:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15059:4:12",
																				"nodeType": "YulLiteral",
																				"src": "15059:4:12",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15050:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:12"
																		},
																		"nativeSrc": "15050:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15050:14:12"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15066:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15066:1:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15043:6:12"
																},
																"nativeSrc": "15043:25:12",
																"nodeType": "YulFunctionCall",
																"src": "15043:25:12"
															},
															"nativeSrc": "15043:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "15043:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15092:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15092:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15097:4:12",
																				"nodeType": "YulLiteral",
																				"src": "15097:4:12",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15088:3:12"
																		},
																		"nativeSrc": "15088:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15088:14:12"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15104:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15104:1:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15081:6:12"
																},
																"nativeSrc": "15081:25:12",
																"nodeType": "YulFunctionCall",
																"src": "15081:25:12"
															},
															"nativeSrc": "15081:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "15081:25:12"
														},
														{
															"nativeSrc": "15268:57:12",
															"nodeType": "YulAssignment",
															"src": "15268:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15290:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15290:3:12"
																		},
																		"nativeSrc": "15290:5:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15290:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15297:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15297:4:12",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15303:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15303:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15308:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15308:4:12",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15314:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15314:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15320:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15320:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15279:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "15279:10:12"
																},
																"nativeSrc": "15279:46:12",
																"nodeType": "YulFunctionCall",
																"src": "15279:46:12"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15268:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "15268:7:12"
																}
															]
														},
														{
															"nativeSrc": "15338:21:12",
															"nodeType": "YulAssignment",
															"src": "15338:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15354:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15354:4:12",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15348:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15348:5:12"
																},
																"nativeSrc": "15348:11:12",
																"nodeType": "YulFunctionCall",
																"src": "15348:11:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15338:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15338:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2373,
														"isOffset": false,
														"isSlot": false,
														"src": "15028:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2375,
														"isOffset": false,
														"isSlot": false,
														"src": "15066:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2377,
														"isOffset": false,
														"isSlot": false,
														"src": "15104:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2382,
														"isOffset": false,
														"isSlot": false,
														"src": "15338:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2380,
														"isOffset": false,
														"isSlot": false,
														"src": "15268:7:12",
														"valueSize": 1
													}
												],
												"id": 2392,
												"nodeType": "InlineAssembly",
												"src": "13947:1422:12"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "13006:739:12",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked has failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "13759:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13777:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "13769:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13769:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13788:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "13780:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "13791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13768:33:12"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "13830:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "13825:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13825:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "13847:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "13839:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13839:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13824:30:12"
									},
									"scope": 3349,
									"src": "13750:1625:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "15572:179:12",
										"statements": [
											{
												"assignments": [
													2407,
													2409
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15588:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2429,
														"src": "15583:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15583:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15610:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2429,
														"src": "15597:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15597:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2415,
												"initialValue": {
													"arguments": [
														{
															"id": 2411,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "15630:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2412,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "15633:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2413,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "15636:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2410,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2394,
															2476
														],
														"referencedDeclaration": 2476,
														"src": "15620:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15620:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15582:56:12"
											},
											{
												"condition": {
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15652:8:12",
													"subExpression": {
														"id": 2416,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "15653:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2426,
												"nodeType": "IfStatement",
												"src": "15648:74:12",
												"trueBody": {
													"id": 2425,
													"nodeType": "Block",
													"src": "15662:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2421,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "15688:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "15694:16:12",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1440,
																		"src": "15688:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2418,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "15676:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1473_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15682:5:12",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "15676:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15676:35:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2424,
															"nodeType": "ExpressionStatement",
															"src": "15676:35:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2427,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2409,
													"src": "15738:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2405,
												"id": 2428,
												"nodeType": "Return",
												"src": "15731:13:12"
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "15381:85:12",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15480:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15500:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "15487:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15487:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15516:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "15503:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15503:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15532:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "15519:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15519:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15486:48:12"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "15558:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15558:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15557:14:12"
									},
									"scope": 3349,
									"src": "15471:280:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "16005:798:12",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2445,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "16030:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2444,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "16019:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16019:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "16015:47:12",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16042:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16059:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16049:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 2448,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16053:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16049:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2452,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16041:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 2443,
													"id": 2453,
													"nodeType": "Return",
													"src": "16034:28:12"
												}
											},
											{
												"assignments": [
													2456
												],
												"declarations": [
													{
														"constant": false,
														"id": 2456,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16081:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "16073:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16073:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2459,
												"initialValue": {
													"expression": {
														"id": 2457,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "16088:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16090:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16088:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16073:23:12"
											},
											{
												"expression": {
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2460,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2442,
														"src": "16178:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2463,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "16204:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16206:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16204:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2465,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "16214:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16216:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16214:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2467,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "16224:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2468,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "16230:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2469,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2435,
																"src": "16233:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2470,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2437,
																"src": "16236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2461,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16187:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16191:12:12",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16187:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16187:51:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16178:60:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2473,
												"nodeType": "ExpressionStatement",
												"src": "16178:60:12"
											},
											{
												"AST": {
													"nativeSrc": "16301:496:12",
													"nodeType": "YulBlock",
													"src": "16301:496:12",
													"statements": [
														{
															"nativeSrc": "16315:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16315:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16334:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16334:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16342:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16342:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16330:3:12"
																},
																"nativeSrc": "16330:17:12",
																"nodeType": "YulFunctionCall",
																"src": "16330:17:12"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16319:7:12",
																	"nodeType": "YulTypedName",
																	"src": "16319:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16437:73:12",
															"nodeType": "YulAssignment",
															"src": "16437:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "16459:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16459:3:12"
																		},
																		"nativeSrc": "16459:5:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16459:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16466:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16466:4:12",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "16472:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "16472:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "16487:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16487:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16481:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "16481:5:12"
																		},
																		"nativeSrc": "16481:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16481:13:12"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "16496:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "16496:7:12"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "16505:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16505:4:12"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "16448:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "16448:10:12"
																},
																"nativeSrc": "16448:62:12",
																"nodeType": "YulFunctionCall",
																"src": "16448:62:12"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "16437:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "16437:7:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16666:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16666:6:12"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "16674:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16674:4:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16659:6:12"
																},
																"nativeSrc": "16659:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16659:20:12"
															},
															"nativeSrc": "16659:20:12",
															"nodeType": "YulExpressionStatement",
															"src": "16659:20:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16762:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16762:4:12",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "16772:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16772:7:12"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "16781:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16781:4:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16768:3:12"
																		},
																		"nativeSrc": "16768:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16768:18:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16755:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16755:6:12"
																},
																"nativeSrc": "16755:32:12",
																"nodeType": "YulFunctionCall",
																"src": "16755:32:12"
															},
															"nativeSrc": "16755:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "16755:32:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2456,
														"isOffset": false,
														"isSlot": false,
														"src": "16505:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2456,
														"isOffset": false,
														"isSlot": false,
														"src": "16674:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2456,
														"isOffset": false,
														"isSlot": false,
														"src": "16781:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2442,
														"isOffset": false,
														"isSlot": false,
														"src": "16334:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2442,
														"isOffset": false,
														"isSlot": false,
														"src": "16487:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2442,
														"isOffset": false,
														"isSlot": false,
														"src": "16666:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2440,
														"isOffset": false,
														"isSlot": false,
														"src": "16437:7:12",
														"valueSize": 1
													}
												],
												"id": 2474,
												"nodeType": "InlineAssembly",
												"src": "16292:505:12"
											}
										]
									},
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "15757:88:12",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "15859:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15891:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "15878:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15878:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15915:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "15902:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15902:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15939:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "15926:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15926:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15868:78:12"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15975:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "15970:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15970:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15997:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "15984:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15984:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15969:35:12"
									},
									"scope": 3349,
									"src": "15850:953:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "16958:176:12",
										"statements": [
											{
												"body": {
													"id": 2504,
													"nodeType": "Block",
													"src": "17015:92:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2495,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "17033:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2497,
																	"indexExpression": {
																		"id": 2496,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "17043:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17033:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17049:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17033:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2503,
															"nodeType": "IfStatement",
															"src": "17029:68:12",
															"trueBody": {
																"id": 2502,
																"nodeType": "Block",
																"src": "17052:45:12",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17077:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2483,
																		"id": 2501,
																		"nodeType": "Return",
																		"src": "17070:12:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2488,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "16988:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2489,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "16992:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17002:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16992:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16988:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2505,
												"initializationExpression": {
													"assignments": [
														2485
													],
													"declarations": [
														{
															"constant": false,
															"id": 2485,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16981:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2505,
															"src": "16973:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2484,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16973:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2487,
													"initialValue": {
														"hexValue": "30",
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16985:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16973:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17010:3:12",
														"subExpression": {
															"id": 2492,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "17012:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2494,
													"nodeType": "ExpressionStatement",
													"src": "17010:3:12"
												},
												"nodeType": "ForStatement",
												"src": "16968:139:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17123:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2483,
												"id": 2507,
												"nodeType": "Return",
												"src": "17116:11:12"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "16809:72:12",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "16895:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "16919:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "16906:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16906:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16905:24:12"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "16952:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16952:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:6:12"
									},
									"scope": 3349,
									"src": "16886:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "17494:5124:12",
										"statements": [
											{
												"id": 2726,
												"nodeType": "UncheckedBlock",
												"src": "17504:5108:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2517,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "17598:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17603:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17598:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2523,
														"nodeType": "IfStatement",
														"src": "17594:53:12",
														"trueBody": {
															"id": 2522,
															"nodeType": "Block",
															"src": "17606:41:12",
															"statements": [
																{
																	"expression": {
																		"id": 2520,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2512,
																		"src": "17631:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2516,
																	"id": 2521,
																	"nodeType": "Return",
																	"src": "17624:8:12"
																}
															]
														}
													},
													{
														"assignments": [
															2525
														],
														"declarations": [
															{
																"constant": false,
																"id": 2525,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "18582:2:12",
																"nodeType": "VariableDeclaration",
																"scope": 2726,
																"src": "18574:10:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18574:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2527,
														"initialValue": {
															"id": 2526,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "18587:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18574:14:12"
													},
													{
														"assignments": [
															2529
														],
														"declarations": [
															{
																"constant": false,
																"id": 2529,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "18610:2:12",
																"nodeType": "VariableDeclaration",
																"scope": 2726,
																"src": "18602:10:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18602:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2531,
														"initialValue": {
															"hexValue": "31",
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18615:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18602:14:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2532,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "18635:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18642:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18647:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18642:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2536,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18641:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "18635:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2547,
														"nodeType": "IfStatement",
														"src": "18631:92:12",
														"trueBody": {
															"id": 2546,
															"nodeType": "Block",
															"src": "18653:70:12",
															"statements": [
																{
																	"expression": {
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2538,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "18671:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18678:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18671:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2541,
																	"nodeType": "ExpressionStatement",
																	"src": "18671:10:12"
																},
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2542,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "18699:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18706:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18699:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "18699:9:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2548,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "18740:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18747:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18752:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18747:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2552,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18746:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "18740:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2563,
														"nodeType": "IfStatement",
														"src": "18736:90:12",
														"trueBody": {
															"id": 2562,
															"nodeType": "Block",
															"src": "18757:69:12",
															"statements": [
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "18775:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18782:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18775:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "18775:9:12"
																},
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2558,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "18802:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18809:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18802:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "18802:9:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2564,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "18843:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18855:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18850:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2568,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18849:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "18843:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2579,
														"nodeType": "IfStatement",
														"src": "18839:90:12",
														"trueBody": {
															"id": 2578,
															"nodeType": "Block",
															"src": "18860:69:12",
															"statements": [
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "18878:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18885:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18878:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "18878:9:12"
																},
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "18905:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18912:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "18905:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "18905:9:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2580,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "18946:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18953:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18958:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "18953:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2584,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18952:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "18946:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2595,
														"nodeType": "IfStatement",
														"src": "18942:89:12",
														"trueBody": {
															"id": 2594,
															"nodeType": "Block",
															"src": "18963:68:12",
															"statements": [
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "18981:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18988:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "18981:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "18981:9:12"
																},
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "19008:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19015:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19008:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "19008:8:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2596,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "19048:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19055:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19055:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 2600,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19054:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19048:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "19044:87:12",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "19064:67:12",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2602,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "19082:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19089:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19082:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "19082:8:12"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "19108:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19115:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19108:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "19108:8:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "19148:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19155:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19160:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19155:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 2616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19154:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19148:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2627,
														"nodeType": "IfStatement",
														"src": "19144:87:12",
														"trueBody": {
															"id": 2626,
															"nodeType": "Block",
															"src": "19164:67:12",
															"statements": [
																{
																	"expression": {
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2618,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "19182:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19189:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19182:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2621,
																	"nodeType": "ExpressionStatement",
																	"src": "19182:8:12"
																},
																{
																	"expression": {
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2622,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "19208:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19208:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2625,
																	"nodeType": "ExpressionStatement",
																	"src": "19208:8:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "19248:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19255:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19260:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19255:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2632,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19254:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19248:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2639,
														"nodeType": "IfStatement",
														"src": "19244:61:12",
														"trueBody": {
															"id": 2638,
															"nodeType": "Block",
															"src": "19264:41:12",
															"statements": [
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "19282:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19289:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19282:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "19282:8:12"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2640,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "19725:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19731:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2642,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "19735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19731:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2644,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19730:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19742:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19730:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19725:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2648,
														"nodeType": "ExpressionStatement",
														"src": "19725:18:12"
													},
													{
														"expression": {
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2649,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "21630:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2650,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "21636:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2651,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "21641:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2652,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "21645:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21641:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21636:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21635:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21652:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21635:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21630:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2659,
														"nodeType": "ExpressionStatement",
														"src": "21630:23:12"
													},
													{
														"expression": {
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2660,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "21739:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2661,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "21745:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2662,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "21750:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2663,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "21754:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21750:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21745:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2666,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21744:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21761:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21744:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21739:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2670,
														"nodeType": "ExpressionStatement",
														"src": "21739:23:12"
													},
													{
														"expression": {
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2671,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "21850:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2672,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "21856:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2673,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "21861:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2674,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "21865:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21861:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21856:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2677,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21855:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21872:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21855:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21850:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2681,
														"nodeType": "ExpressionStatement",
														"src": "21850:23:12"
													},
													{
														"expression": {
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2682,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "21959:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2683,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "21965:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2684,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "21970:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2685,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "21974:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21970:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21965:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2688,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21964:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21981:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21964:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21959:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2692,
														"nodeType": "ExpressionStatement",
														"src": "21959:23:12"
													},
													{
														"expression": {
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2693,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "22069:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2694,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "22075:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2695,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "22080:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2696,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "22084:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22080:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22075:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2699,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22074:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22091:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22074:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22069:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2703,
														"nodeType": "ExpressionStatement",
														"src": "22069:23:12"
													},
													{
														"expression": {
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2704,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "22179:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2705,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "22185:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2706,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "22190:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2707,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2529,
																					"src": "22194:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22190:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22185:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2710,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22184:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22201:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22184:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22179:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2714,
														"nodeType": "ExpressionStatement",
														"src": "22179:23:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2715,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "22568:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2718,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2529,
																			"src": "22589:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2719,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2512,
																				"src": "22594:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2720,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "22598:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22594:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22589:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2716,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "22573:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22582:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "22573:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22568:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2516,
														"id": 2725,
														"nodeType": "Return",
														"src": "22561:40:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "17140:292:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "17446:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17459:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "17451:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17451:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17450:11:12"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "17485:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17485:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17484:9:12"
									},
									"scope": 3349,
									"src": "17437:5181:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2761,
										"nodeType": "Block",
										"src": "22791:171:12",
										"statements": [
											{
												"id": 2760,
												"nodeType": "UncheckedBlock",
												"src": "22801:155:12",
												"statements": [
													{
														"assignments": [
															2740
														],
														"declarations": [
															{
																"constant": false,
																"id": 2740,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22833:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2760,
																"src": "22825:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22825:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2744,
														"initialValue": {
															"arguments": [
																{
																	"id": 2742,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "22847:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2741,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2728,
																	2762
																],
																"referencedDeclaration": 2728,
																"src": "22842:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22842:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22825:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2745,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2740,
																"src": "22870:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2749,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2734,
																					"src": "22912:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2748,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3348,
																				"src": "22895:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1776_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22895:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2751,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2740,
																					"src": "22925:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2752,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2740,
																					"src": "22934:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22925:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2754,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2731,
																				"src": "22943:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22925:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "22895:49:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2746,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "22879:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22888:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "22879:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22879:66:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22870:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2738,
														"id": 2759,
														"nodeType": "Return",
														"src": "22863:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "22624:86:12",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "22724:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22737:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "22729:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22749:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "22740:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2732,
														"name": "Rounding",
														"nameLocations": [
															"22740:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "22740:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "22740:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22728:30:12"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "22782:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22782:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22781:9:12"
									},
									"scope": 3349,
									"src": "22715:247:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "23153:981:12",
										"statements": [
											{
												"assignments": [
													2771
												],
												"declarations": [
													{
														"constant": false,
														"id": 2771,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23171:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2957,
														"src": "23163:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23163:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2773,
												"initialValue": {
													"hexValue": "30",
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23180:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23163:18:12"
											},
											{
												"assignments": [
													2775
												],
												"declarations": [
													{
														"constant": false,
														"id": 2775,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23199:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2957,
														"src": "23191:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23191:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2776,
												"nodeType": "VariableDeclarationStatement",
												"src": "23191:11:12"
											},
											{
												"id": 2954,
												"nodeType": "UncheckedBlock",
												"src": "23212:893:12",
												"statements": [
													{
														"expression": {
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2777,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23236:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23242:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2781,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23264:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 2784,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2782,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23273:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 2783,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23278:3:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23273:8:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 2785,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23272:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2786,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23285:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23272:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23264:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2779,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23248:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23257:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23248:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23248:39:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23242:45:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23236:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2792,
														"nodeType": "ExpressionStatement",
														"src": "23236:51:12"
													},
													{
														"expression": {
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23301:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2794,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23311:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23301:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2796,
														"nodeType": "ExpressionStatement",
														"src": "23301:13:12"
													},
													{
														"expression": {
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2797,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23328:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2798,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23338:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23328:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2800,
														"nodeType": "ExpressionStatement",
														"src": "23328:13:12"
													},
													{
														"expression": {
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2801,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23356:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23362:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2805,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23383:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 2808,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2806,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23392:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2807,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23397:2:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "23392:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 2809,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23391:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23403:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23391:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "23383:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2803,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23367:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23376:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23367:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23367:38:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23362:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23356:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2816,
														"nodeType": "ExpressionStatement",
														"src": "23356:49:12"
													},
													{
														"expression": {
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2817,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23419:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2818,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23429:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23419:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2820,
														"nodeType": "ExpressionStatement",
														"src": "23419:13:12"
													},
													{
														"expression": {
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2821,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23446:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2822,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23456:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23446:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2824,
														"nodeType": "ExpressionStatement",
														"src": "23446:13:12"
													},
													{
														"expression": {
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2825,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23474:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23480:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2829,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23501:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 2835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 2832,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2830,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23510:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 2831,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23515:2:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "23510:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 2833,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23509:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23521:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23509:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "23501:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2827,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23485:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23494:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23485:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23485:38:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23480:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23474:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2840,
														"nodeType": "ExpressionStatement",
														"src": "23474:49:12"
													},
													{
														"expression": {
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2841,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23537:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2842,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23547:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23537:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2844,
														"nodeType": "ExpressionStatement",
														"src": "23537:13:12"
													},
													{
														"expression": {
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2845,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23564:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2846,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23574:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23564:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2848,
														"nodeType": "ExpressionStatement",
														"src": "23564:13:12"
													},
													{
														"expression": {
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2849,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23592:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23598:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2853,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23619:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 2859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 2856,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2854,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23628:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 2855,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23633:2:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "23628:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 2857,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23627:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23639:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23627:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "23619:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2851,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23603:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23612:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23603:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23603:38:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23598:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23592:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2864,
														"nodeType": "ExpressionStatement",
														"src": "23592:49:12"
													},
													{
														"expression": {
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23655:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2866,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23665:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23655:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2868,
														"nodeType": "ExpressionStatement",
														"src": "23655:13:12"
													},
													{
														"expression": {
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2869,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23682:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2870,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23692:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23682:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2872,
														"nodeType": "ExpressionStatement",
														"src": "23682:13:12"
													},
													{
														"expression": {
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2873,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23710:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23716:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2877,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23736:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 2880,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2878,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23745:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 2879,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23750:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "23745:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 2881,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23744:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23755:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23744:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "23736:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2875,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23720:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23729:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23720:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23720:37:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23716:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23710:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2888,
														"nodeType": "ExpressionStatement",
														"src": "23710:47:12"
													},
													{
														"expression": {
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2889,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23771:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2890,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23781:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23771:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2892,
														"nodeType": "ExpressionStatement",
														"src": "23771:13:12"
													},
													{
														"expression": {
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2893,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23798:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2894,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23808:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23798:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2896,
														"nodeType": "ExpressionStatement",
														"src": "23798:13:12"
													},
													{
														"expression": {
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2897,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23826:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 2898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23832:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2901,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23852:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 2907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 2904,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2902,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23861:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 2903,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23866:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "23861:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 2905,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23860:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23871:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23860:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "23852:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2899,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23836:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23845:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23836:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23836:37:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23832:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23826:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2912,
														"nodeType": "ExpressionStatement",
														"src": "23826:47:12"
													},
													{
														"expression": {
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2913,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "23887:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2914,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23897:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23887:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2916,
														"nodeType": "ExpressionStatement",
														"src": "23887:13:12"
													},
													{
														"expression": {
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2917,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "23914:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2918,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23924:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23914:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2920,
														"nodeType": "ExpressionStatement",
														"src": "23914:13:12"
													},
													{
														"expression": {
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2921,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "23942:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23948:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2925,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2765,
																				"src": "23968:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 2931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 2928,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2926,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23977:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 2927,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23982:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "23977:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 2929,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23976:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23987:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23976:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "23968:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2923,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5114,
																			"src": "23952:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23961:6:12",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5113,
																		"src": "23952:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23952:37:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23948:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23942:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2936,
														"nodeType": "ExpressionStatement",
														"src": "23942:47:12"
													},
													{
														"expression": {
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2937,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "24003:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2938,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "24013:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24003:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2940,
														"nodeType": "ExpressionStatement",
														"src": "24003:13:12"
													},
													{
														"expression": {
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2941,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "24030:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2942,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "24040:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24030:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2944,
														"nodeType": "ExpressionStatement",
														"src": "24030:13:12"
													},
													{
														"expression": {
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2945,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "24058:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2948,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "24084:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24092:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24084:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2946,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "24068:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24077:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "24068:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24068:26:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24058:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2953,
														"nodeType": "ExpressionStatement",
														"src": "24058:36:12"
													}
												]
											},
											{
												"expression": {
													"id": 2955,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2771,
													"src": "24121:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2956,
												"nodeType": "Return",
												"src": "24114:13:12"
											}
										]
									},
									"documentation": {
										"id": 2763,
										"nodeType": "StructuredDocumentation",
										"src": "22968:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23101:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23114:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "23106:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23106:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23105:15:12"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "23144:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23143:9:12"
									},
									"scope": 3349,
									"src": "23092:1042:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2991,
										"nodeType": "Block",
										"src": "24367:175:12",
										"statements": [
											{
												"id": 2990,
												"nodeType": "UncheckedBlock",
												"src": "24377:159:12",
												"statements": [
													{
														"assignments": [
															2970
														],
														"declarations": [
															{
																"constant": false,
																"id": 2970,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24409:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2990,
																"src": "24401:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24401:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2974,
														"initialValue": {
															"arguments": [
																{
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "24423:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2971,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2958,
																	2992
																],
																"referencedDeclaration": 2958,
																"src": "24418:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24418:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24401:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "24450:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2979,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "24492:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2978,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3348,
																				"src": "24475:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1776_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24475:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24505:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2982,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2970,
																					"src": "24510:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24505:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2984,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2961,
																				"src": "24519:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24505:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "24475:49:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2976,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "24459:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24468:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "24459:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24459:66:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24450:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2968,
														"id": 2989,
														"nodeType": "Return",
														"src": "24443:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2959,
										"nodeType": "StructuredDocumentation",
										"src": "24140:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24296:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24309:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "24301:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24301:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24325:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "24316:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2962,
														"name": "Rounding",
														"nameLocations": [
															"24316:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "24316:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "24316:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24300:34:12"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "24358:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24358:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24357:9:12"
									},
									"scope": 3349,
									"src": "24287:255:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "24735:854:12",
										"statements": [
											{
												"assignments": [
													3001
												],
												"declarations": [
													{
														"constant": false,
														"id": 3001,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24753:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3120,
														"src": "24745:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24745:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3003,
												"initialValue": {
													"hexValue": "30",
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24762:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24745:18:12"
											},
											{
												"id": 3117,
												"nodeType": "UncheckedBlock",
												"src": "24773:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3004,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "24801:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24810:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24816:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24810:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "24801:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3020,
														"nodeType": "IfStatement",
														"src": "24797:103:12",
														"trueBody": {
															"id": 3019,
															"nodeType": "Block",
															"src": "24820:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3009,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "24838:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24847:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24853:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "24847:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "24838:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "24838:17:12"
																},
																{
																	"expression": {
																		"id": 3017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "24873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24883:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24873:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3018,
																	"nodeType": "ExpressionStatement",
																	"src": "24873:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3021,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "24917:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24926:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24932:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24926:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "24917:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3037,
														"nodeType": "IfStatement",
														"src": "24913:103:12",
														"trueBody": {
															"id": 3036,
															"nodeType": "Block",
															"src": "24936:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "24954:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24963:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24969:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "24963:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "24954:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3031,
																	"nodeType": "ExpressionStatement",
																	"src": "24954:17:12"
																},
																{
																	"expression": {
																		"id": 3034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "24989:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24999:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24989:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3035,
																	"nodeType": "ExpressionStatement",
																	"src": "24989:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3038,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "25033:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25042:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25048:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25042:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25033:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3054,
														"nodeType": "IfStatement",
														"src": "25029:103:12",
														"trueBody": {
															"id": 3053,
															"nodeType": "Block",
															"src": "25052:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "25070:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25079:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25085:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25079:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25070:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3048,
																	"nodeType": "ExpressionStatement",
																	"src": "25070:17:12"
																},
																{
																	"expression": {
																		"id": 3051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3049,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "25105:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25115:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25105:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3052,
																	"nodeType": "ExpressionStatement",
																	"src": "25105:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3055,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "25149:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25158:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25164:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25158:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25149:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3071,
														"nodeType": "IfStatement",
														"src": "25145:100:12",
														"trueBody": {
															"id": 3070,
															"nodeType": "Block",
															"src": "25167:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3060,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "25185:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25194:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25200:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25194:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25185:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3065,
																	"nodeType": "ExpressionStatement",
																	"src": "25185:16:12"
																},
																{
																	"expression": {
																		"id": 3068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3066,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "25219:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25229:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25219:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3069,
																	"nodeType": "ExpressionStatement",
																	"src": "25219:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3072,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "25262:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25271:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25277:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25271:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25262:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3088,
														"nodeType": "IfStatement",
														"src": "25258:100:12",
														"trueBody": {
															"id": 3087,
															"nodeType": "Block",
															"src": "25280:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3077,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "25298:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25307:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25313:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25307:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25298:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3082,
																	"nodeType": "ExpressionStatement",
																	"src": "25298:16:12"
																},
																{
																	"expression": {
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3083,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "25332:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25342:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25332:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3086,
																	"nodeType": "ExpressionStatement",
																	"src": "25332:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3089,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "25375:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25384:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25390:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "25384:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "25375:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3105,
														"nodeType": "IfStatement",
														"src": "25371:100:12",
														"trueBody": {
															"id": 3104,
															"nodeType": "Block",
															"src": "25393:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3094,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "25411:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25420:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25426:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "25420:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "25411:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3099,
																	"nodeType": "ExpressionStatement",
																	"src": "25411:16:12"
																},
																{
																	"expression": {
																		"id": 3102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3100,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "25445:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25455:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "25445:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3103,
																	"nodeType": "ExpressionStatement",
																	"src": "25445:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3106,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "25488:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25497:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25503:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25497:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "25488:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3116,
														"nodeType": "IfStatement",
														"src": "25484:66:12",
														"trueBody": {
															"id": 3115,
															"nodeType": "Block",
															"src": "25506:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3111,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3001,
																			"src": "25524:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25534:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25524:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3114,
																	"nodeType": "ExpressionStatement",
																	"src": "25524:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3118,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3001,
													"src": "25576:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2999,
												"id": 3119,
												"nodeType": "Return",
												"src": "25569:13:12"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "24548:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24682:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24696:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "24688:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24688:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24687:15:12"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "24726:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24726:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24725:9:12"
									},
									"scope": 3349,
									"src": "24673:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3154,
										"nodeType": "Block",
										"src": "25824:177:12",
										"statements": [
											{
												"id": 3153,
												"nodeType": "UncheckedBlock",
												"src": "25834:161:12",
												"statements": [
													{
														"assignments": [
															3133
														],
														"declarations": [
															{
																"constant": false,
																"id": 3133,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25866:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3153,
																"src": "25858:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25858:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3137,
														"initialValue": {
															"arguments": [
																{
																	"id": 3135,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3124,
																	"src": "25881:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3134,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3121,
																	3155
																],
																"referencedDeclaration": 3121,
																"src": "25875:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25875:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25858:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3138,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3133,
																"src": "25908:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3142,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3127,
																					"src": "25950:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3141,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3348,
																				"src": "25933:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1776_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25933:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 3144,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25963:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 3145,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3133,
																					"src": "25969:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25963:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3147,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3124,
																				"src": "25978:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25963:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25933:50:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3139,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "25917:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25926:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "25917:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25917:67:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25908:76:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3131,
														"id": 3152,
														"nodeType": "Return",
														"src": "25901:83:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "25595:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25752:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25766:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "25758:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25758:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25782:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "25773:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3125,
														"name": "Rounding",
														"nameLocations": [
															"25773:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "25773:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "25773:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25757:34:12"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "25815:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25815:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25814:9:12"
									},
									"scope": 3349,
									"src": "25743:258:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3291,
										"nodeType": "Block",
										"src": "26321:674:12",
										"statements": [
											{
												"assignments": [
													3164
												],
												"declarations": [
													{
														"constant": false,
														"id": 3164,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26339:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3291,
														"src": "26331:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26331:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3166,
												"initialValue": {
													"hexValue": "30",
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26348:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26331:18:12"
											},
											{
												"assignments": [
													3168
												],
												"declarations": [
													{
														"constant": false,
														"id": 3168,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "26367:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3291,
														"src": "26359:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26359:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3169,
												"nodeType": "VariableDeclarationStatement",
												"src": "26359:12:12"
											},
											{
												"id": 3288,
												"nodeType": "UncheckedBlock",
												"src": "26381:585:12",
												"statements": [
													{
														"expression": {
															"id": 3182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3170,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "26405:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3173,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "26428:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 3176,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3174,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26437:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 3175,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26442:3:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "26437:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 3177,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26436:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26449:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26436:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "26428:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3171,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "26412:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26421:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "26412:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26412:39:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26405:46:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3183,
														"nodeType": "ExpressionStatement",
														"src": "26405:46:12"
													},
													{
														"expression": {
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3184,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3158,
																"src": "26465:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3185,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26475:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26482:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "26475:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26465:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3189,
														"nodeType": "ExpressionStatement",
														"src": "26465:20:12"
													},
													{
														"expression": {
															"id": 3194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3190,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "26499:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3191,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26509:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26516:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26509:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26499:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3195,
														"nodeType": "ExpressionStatement",
														"src": "26499:19:12"
													},
													{
														"expression": {
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3196,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "26533:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3199,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "26556:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 3202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3200,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26565:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 3201,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26570:2:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "26565:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 3203,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26564:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26576:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26564:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "26556:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3197,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "26540:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26549:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "26540:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26540:38:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26533:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3209,
														"nodeType": "ExpressionStatement",
														"src": "26533:45:12"
													},
													{
														"expression": {
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3210,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3158,
																"src": "26592:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3211,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26602:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26609:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "26602:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26592:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3215,
														"nodeType": "ExpressionStatement",
														"src": "26592:19:12"
													},
													{
														"expression": {
															"id": 3220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3216,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "26625:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3217,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26635:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26642:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26635:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26625:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3221,
														"nodeType": "ExpressionStatement",
														"src": "26625:18:12"
													},
													{
														"expression": {
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3222,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "26658:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "26681:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 3231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 3228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3226,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26690:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 3227,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26695:2:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "26690:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 3229,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26689:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26701:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26689:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "26681:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3223,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "26665:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26674:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "26665:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26665:38:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26658:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3235,
														"nodeType": "ExpressionStatement",
														"src": "26658:45:12"
													},
													{
														"expression": {
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3158,
																"src": "26717:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3237,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26727:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26734:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26727:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26717:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3241,
														"nodeType": "ExpressionStatement",
														"src": "26717:19:12"
													},
													{
														"expression": {
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3242,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "26750:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3243,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26760:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26767:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26760:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26750:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3247,
														"nodeType": "ExpressionStatement",
														"src": "26750:18:12"
													},
													{
														"expression": {
															"id": 3260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3248,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "26783:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "26806:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 3254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26815:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 3253,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26820:2:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "26815:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 3255,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26814:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26826:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26814:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "26806:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3249,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "26790:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26799:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "26790:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26790:38:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26783:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3261,
														"nodeType": "ExpressionStatement",
														"src": "26783:45:12"
													},
													{
														"expression": {
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3262,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3158,
																"src": "26842:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3263,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26852:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26859:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26852:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26842:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3267,
														"nodeType": "ExpressionStatement",
														"src": "26842:19:12"
													},
													{
														"expression": {
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3268,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "26875:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3269,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "26885:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26885:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26875:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3273,
														"nodeType": "ExpressionStatement",
														"src": "26875:18:12"
													},
													{
														"expression": {
															"id": 3286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3274,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "26908:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "26934:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 3283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 3280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3278,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26943:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26948:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "26943:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 3281,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26942:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26953:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26942:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "26934:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3275,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "26918:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26927:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "26918:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26918:37:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26908:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3287,
														"nodeType": "ExpressionStatement",
														"src": "26908:47:12"
													}
												]
											},
											{
												"expression": {
													"id": 3289,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3164,
													"src": "26982:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3162,
												"id": 3290,
												"nodeType": "Return",
												"src": "26975:13:12"
											}
										]
									},
									"documentation": {
										"id": 3156,
										"nodeType": "StructuredDocumentation",
										"src": "26007:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26267:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26282:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "26274:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26273:15:12"
									},
									"returnParameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "26312:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26312:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26311:9:12"
									},
									"scope": 3349,
									"src": "26258:737:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "27232:184:12",
										"statements": [
											{
												"id": 3327,
												"nodeType": "UncheckedBlock",
												"src": "27242:168:12",
												"statements": [
													{
														"assignments": [
															3304
														],
														"declarations": [
															{
																"constant": false,
																"id": 3304,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27274:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3327,
																"src": "27266:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27266:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3308,
														"initialValue": {
															"arguments": [
																{
																	"id": 3306,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3295,
																	"src": "27290:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3305,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3292,
																	3329
																],
																"referencedDeclaration": 3292,
																"src": "27283:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27283:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27266:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3309,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3304,
																"src": "27317:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3313,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3298,
																					"src": "27359:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1776",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3312,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3348,
																				"src": "27342:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1776_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27342:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27372:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3318,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3316,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3304,
																								"src": "27378:6:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 3317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "27388:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "27378:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3319,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "27377:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27372:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3321,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3295,
																				"src": "27393:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "27372:26:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27342:56:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3310,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5114,
																		"src": "27326:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27335:6:12",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5113,
																	"src": "27326:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27326:73:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27317:82:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3302,
														"id": 3326,
														"nodeType": "Return",
														"src": "27310:89:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3293,
										"nodeType": "StructuredDocumentation",
										"src": "27001:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27159:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27174:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "27166:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27166:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27190:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "27181:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3296,
														"name": "Rounding",
														"nameLocations": [
															"27181:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "27181:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "27181:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27165:34:12"
									},
									"returnParameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "27223:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27222:9:12"
									},
									"scope": 3349,
									"src": "27150:266:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3347,
										"nodeType": "Block",
										"src": "27614:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3340,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3333,
																	"src": "27637:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1776",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1776",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27631:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3338,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "27631:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27631:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27649:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "27631:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27654:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "27631:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3337,
												"id": 3346,
												"nodeType": "Return",
												"src": "27624:31:12"
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "27422:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "27549:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27575:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "27566:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1776",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3331,
														"name": "Rounding",
														"nameLocations": [
															"27566:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1776,
														"src": "27566:8:12"
													},
													"referencedDeclaration": 1776,
													"src": "27566:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1776",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27565:19:12"
									},
									"returnParameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "27608:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27608:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27607:6:12"
									},
									"scope": 3349,
									"src": "27540:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3350,
							"src": "281:27383:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:27562:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							5114
						]
					},
					"id": 5115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3352,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:13",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 5114,
							"linearizedBaseContracts": [
								5114
							],
							"name": "SafeCast",
							"nameLocation": "777:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3353,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:13",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 3359,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3359,
												"src": "902:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3354,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3359,
												"src": "914:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:13"
									},
									"src": "865:64:13"
								},
								{
									"documentation": {
										"id": 3360,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:13",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 3364,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "1049:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3361,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:13"
									},
									"src": "1015:48:13"
								},
								{
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:13",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 3371,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3371,
												"src": "1177:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3366,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3371,
												"src": "1189:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3368,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:13"
									},
									"src": "1141:62:13"
								},
								{
									"documentation": {
										"id": 3372,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:13",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 3376,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "1323:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:13"
									},
									"src": "1289:49:13"
								},
								{
									"body": {
										"id": 3403,
										"nodeType": "Block",
										"src": "1695:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3384,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3379,
														"src": "1709:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 3386,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 3385,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3397,
												"nodeType": "IfStatement",
												"src": "1705:105:13",
												"trueBody": {
													"id": 3396,
													"nodeType": "Block",
													"src": "1736:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3379,
																		"src": "1793:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3391,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "1757:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3395,
															"nodeType": "RevertStatement",
															"src": "1750:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3379,
															"src": "1834:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 3398,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 3383,
												"id": 3402,
												"nodeType": "Return",
												"src": "1819:21:13"
											}
										]
									},
									"documentation": {
										"id": 3377,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:13",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "1648:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:13"
									},
									"returnParameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "1686:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3381,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:13"
									},
									"scope": 5114,
									"src": "1629:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3431,
										"nodeType": "Block",
										"src": "2204:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3412,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3407,
														"src": "2218:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 3414,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 3413,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 3417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3425,
												"nodeType": "IfStatement",
												"src": "2214:105:13",
												"trueBody": {
													"id": 3424,
													"nodeType": "Block",
													"src": "2245:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3421,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3407,
																		"src": "2302:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3419,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "2266:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3423,
															"nodeType": "RevertStatement",
															"src": "2259:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3407,
															"src": "2343:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 3426,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 3411,
												"id": 3430,
												"nodeType": "Return",
												"src": "2328:21:13"
											}
										]
									},
									"documentation": {
										"id": 3405,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:13",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "2157:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:13"
									},
									"returnParameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "2195:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3409,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:13"
									},
									"scope": 5114,
									"src": "2138:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3459,
										"nodeType": "Block",
										"src": "2713:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3440,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "2727:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 3442,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 3441,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3453,
												"nodeType": "IfStatement",
												"src": "2723:105:13",
												"trueBody": {
													"id": 3452,
													"nodeType": "Block",
													"src": "2754:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3449,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3435,
																		"src": "2811:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3447,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "2775:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3451,
															"nodeType": "RevertStatement",
															"src": "2768:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3435,
															"src": "2852:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 3454,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 3439,
												"id": 3458,
												"nodeType": "Return",
												"src": "2837:21:13"
											}
										]
									},
									"documentation": {
										"id": 3433,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:13",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "2666:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:13"
									},
									"returnParameters": {
										"id": 3439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "2704:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3437,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:13"
									},
									"scope": 5114,
									"src": "2647:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3487,
										"nodeType": "Block",
										"src": "3222:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3468,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3463,
														"src": "3236:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 3470,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 3469,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 3473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3481,
												"nodeType": "IfStatement",
												"src": "3232:105:13",
												"trueBody": {
													"id": 3480,
													"nodeType": "Block",
													"src": "3263:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3477,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3463,
																		"src": "3320:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3475,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "3284:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3479,
															"nodeType": "RevertStatement",
															"src": "3277:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3484,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3463,
															"src": "3361:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 3482,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 3467,
												"id": 3486,
												"nodeType": "Return",
												"src": "3346:21:13"
											}
										]
									},
									"documentation": {
										"id": 3461,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:13",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "3175:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:13"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "3213:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 3465,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:13"
									},
									"scope": 5114,
									"src": "3156:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3515,
										"nodeType": "Block",
										"src": "3731:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3496,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3491,
														"src": "3745:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 3498,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 3497,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3509,
												"nodeType": "IfStatement",
												"src": "3741:105:13",
												"trueBody": {
													"id": 3508,
													"nodeType": "Block",
													"src": "3772:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3491,
																		"src": "3829:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3503,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "3793:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3507,
															"nodeType": "RevertStatement",
															"src": "3786:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "3870:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 3510,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 3495,
												"id": 3514,
												"nodeType": "Return",
												"src": "3855:21:13"
											}
										]
									},
									"documentation": {
										"id": 3489,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:13",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "3684:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:13"
									},
									"returnParameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "3722:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 3493,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:13"
									},
									"scope": 5114,
									"src": "3665:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3543,
										"nodeType": "Block",
										"src": "4240:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3524,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3519,
														"src": "4254:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 3526,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 3525,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 3529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3537,
												"nodeType": "IfStatement",
												"src": "4250:105:13",
												"trueBody": {
													"id": 3536,
													"nodeType": "Block",
													"src": "4281:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3519,
																		"src": "4338:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3531,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "4302:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3535,
															"nodeType": "RevertStatement",
															"src": "4295:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3540,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3519,
															"src": "4379:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 3538,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 3523,
												"id": 3542,
												"nodeType": "Return",
												"src": "4364:21:13"
											}
										]
									},
									"documentation": {
										"id": 3517,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:13",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3544,
												"src": "4193:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:13"
									},
									"returnParameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3544,
												"src": "4231:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 3521,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:13"
									},
									"scope": 5114,
									"src": "4174:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3571,
										"nodeType": "Block",
										"src": "4749:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3552,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3547,
														"src": "4763:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 3554,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 3553,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 3557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3565,
												"nodeType": "IfStatement",
												"src": "4759:105:13",
												"trueBody": {
													"id": 3564,
													"nodeType": "Block",
													"src": "4790:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3561,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3547,
																		"src": "4847:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3559,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "4811:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3563,
															"nodeType": "RevertStatement",
															"src": "4804:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3568,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3547,
															"src": "4888:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 3566,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 3551,
												"id": 3570,
												"nodeType": "Return",
												"src": "4873:21:13"
											}
										]
									},
									"documentation": {
										"id": 3545,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:13",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "4702:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:13"
									},
									"returnParameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "4740:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 3549,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:13"
									},
									"scope": 5114,
									"src": "4683:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3599,
										"nodeType": "Block",
										"src": "5258:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3580,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3575,
														"src": "5272:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 3582,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 3581,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 3585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3593,
												"nodeType": "IfStatement",
												"src": "5268:105:13",
												"trueBody": {
													"id": 3592,
													"nodeType": "Block",
													"src": "5299:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3589,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3575,
																		"src": "5356:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3587,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "5320:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3591,
															"nodeType": "RevertStatement",
															"src": "5313:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3596,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3575,
															"src": "5397:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 3594,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 3579,
												"id": 3598,
												"nodeType": "Return",
												"src": "5382:21:13"
											}
										]
									},
									"documentation": {
										"id": 3573,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:13",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "5211:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:13"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "5249:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 3577,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:13"
									},
									"scope": 5114,
									"src": "5192:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3627,
										"nodeType": "Block",
										"src": "5767:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3608,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3603,
														"src": "5781:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 3610,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 3609,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3621,
												"nodeType": "IfStatement",
												"src": "5777:105:13",
												"trueBody": {
													"id": 3620,
													"nodeType": "Block",
													"src": "5808:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3617,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3603,
																		"src": "5865:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3615,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "5829:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3619,
															"nodeType": "RevertStatement",
															"src": "5822:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3603,
															"src": "5906:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 3622,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 3607,
												"id": 3626,
												"nodeType": "Return",
												"src": "5891:21:13"
											}
										]
									},
									"documentation": {
										"id": 3601,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:13",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "5720:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:13"
									},
									"returnParameters": {
										"id": 3607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "5758:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 3605,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:13"
									},
									"scope": 5114,
									"src": "5701:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3655,
										"nodeType": "Block",
										"src": "6276:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3636,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "6290:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 3638,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 3637,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 3641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3649,
												"nodeType": "IfStatement",
												"src": "6286:105:13",
												"trueBody": {
													"id": 3648,
													"nodeType": "Block",
													"src": "6317:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3645,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3631,
																		"src": "6374:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3643,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "6338:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3647,
															"nodeType": "RevertStatement",
															"src": "6331:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "6415:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 3650,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 3635,
												"id": 3654,
												"nodeType": "Return",
												"src": "6400:21:13"
											}
										]
									},
									"documentation": {
										"id": 3629,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:13",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "6229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:13"
									},
									"returnParameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "6267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 3633,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:13"
									},
									"scope": 5114,
									"src": "6210:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3683,
										"nodeType": "Block",
										"src": "6785:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3664,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3659,
														"src": "6799:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 3666,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 3665,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 3669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3677,
												"nodeType": "IfStatement",
												"src": "6795:105:13",
												"trueBody": {
													"id": 3676,
													"nodeType": "Block",
													"src": "6826:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3673,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3659,
																		"src": "6883:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3671,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "6847:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3675,
															"nodeType": "RevertStatement",
															"src": "6840:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3680,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3659,
															"src": "6924:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 3678,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 3663,
												"id": 3682,
												"nodeType": "Return",
												"src": "6909:21:13"
											}
										]
									},
									"documentation": {
										"id": 3657,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:13",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "6738:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:13"
									},
									"returnParameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "6776:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 3661,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:13"
									},
									"scope": 5114,
									"src": "6719:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3711,
										"nodeType": "Block",
										"src": "7294:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3692,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3687,
														"src": "7308:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3694,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 3693,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 3697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3705,
												"nodeType": "IfStatement",
												"src": "7304:105:13",
												"trueBody": {
													"id": 3704,
													"nodeType": "Block",
													"src": "7335:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3701,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3687,
																		"src": "7392:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3699,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "7356:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3703,
															"nodeType": "RevertStatement",
															"src": "7349:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3708,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3687,
															"src": "7433:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 3706,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3691,
												"id": 3710,
												"nodeType": "Return",
												"src": "7418:21:13"
											}
										]
									},
									"documentation": {
										"id": 3685,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:13",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "7247:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:13"
									},
									"returnParameters": {
										"id": 3691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "7285:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3689,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:13"
									},
									"scope": 5114,
									"src": "7228:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3739,
										"nodeType": "Block",
										"src": "7803:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3720,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3715,
														"src": "7817:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 3722,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 3721,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3733,
												"nodeType": "IfStatement",
												"src": "7813:105:13",
												"trueBody": {
													"id": 3732,
													"nodeType": "Block",
													"src": "7844:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3729,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3715,
																		"src": "7901:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3727,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "7865:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3731,
															"nodeType": "RevertStatement",
															"src": "7858:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3736,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3715,
															"src": "7942:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 3734,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 3719,
												"id": 3738,
												"nodeType": "Return",
												"src": "7927:21:13"
											}
										]
									},
									"documentation": {
										"id": 3713,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:13",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "7756:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:13"
									},
									"returnParameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "7794:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 3717,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:13"
									},
									"scope": 5114,
									"src": "7737:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3767,
										"nodeType": "Block",
										"src": "8312:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3748,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "8326:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 3750,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 3749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 3753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3761,
												"nodeType": "IfStatement",
												"src": "8322:105:13",
												"trueBody": {
													"id": 3760,
													"nodeType": "Block",
													"src": "8353:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3757,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3743,
																		"src": "8410:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3755,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "8374:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3759,
															"nodeType": "RevertStatement",
															"src": "8367:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3764,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3743,
															"src": "8451:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3762,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 3747,
												"id": 3766,
												"nodeType": "Return",
												"src": "8436:21:13"
											}
										]
									},
									"documentation": {
										"id": 3741,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:13",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "8265:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:13"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "8303:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 3745,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:13"
									},
									"scope": 5114,
									"src": "8246:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3795,
										"nodeType": "Block",
										"src": "8821:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3776,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3771,
														"src": "8835:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3778,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3777,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3789,
												"nodeType": "IfStatement",
												"src": "8831:105:13",
												"trueBody": {
													"id": 3788,
													"nodeType": "Block",
													"src": "8862:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3785,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3771,
																		"src": "8919:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3783,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "8883:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3787,
															"nodeType": "RevertStatement",
															"src": "8876:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3792,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3771,
															"src": "8960:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3790,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3775,
												"id": 3794,
												"nodeType": "Return",
												"src": "8945:21:13"
											}
										]
									},
									"documentation": {
										"id": 3769,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:13",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "8774:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:13"
									},
									"returnParameters": {
										"id": 3775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "8812:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3773,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:13"
									},
									"scope": 5114,
									"src": "8755:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3823,
										"nodeType": "Block",
										"src": "9330:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3804,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "9344:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3806,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3805,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3817,
												"nodeType": "IfStatement",
												"src": "9340:105:13",
												"trueBody": {
													"id": 3816,
													"nodeType": "Block",
													"src": "9371:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3799,
																		"src": "9428:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3811,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "9392:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3815,
															"nodeType": "RevertStatement",
															"src": "9385:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "9469:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3818,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3803,
												"id": 3822,
												"nodeType": "Return",
												"src": "9454:21:13"
											}
										]
									},
									"documentation": {
										"id": 3797,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:13",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "9283:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:13"
									},
									"returnParameters": {
										"id": 3803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "9321:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3801,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:13"
									},
									"scope": 5114,
									"src": "9264:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3851,
										"nodeType": "Block",
										"src": "9839:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3832,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3827,
														"src": "9853:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3834,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3845,
												"nodeType": "IfStatement",
												"src": "9849:105:13",
												"trueBody": {
													"id": 3844,
													"nodeType": "Block",
													"src": "9880:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3841,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3827,
																		"src": "9937:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3839,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "9901:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3843,
															"nodeType": "RevertStatement",
															"src": "9894:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3827,
															"src": "9978:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3846,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3831,
												"id": 3850,
												"nodeType": "Return",
												"src": "9963:21:13"
											}
										]
									},
									"documentation": {
										"id": 3825,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:13",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "9792:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:13"
									},
									"returnParameters": {
										"id": 3831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "9830:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3829,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:13"
									},
									"scope": 5114,
									"src": "9773:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3879,
										"nodeType": "Block",
										"src": "10348:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3860,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3855,
														"src": "10362:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3862,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3861,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3873,
												"nodeType": "IfStatement",
												"src": "10358:105:13",
												"trueBody": {
													"id": 3872,
													"nodeType": "Block",
													"src": "10389:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3869,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3855,
																		"src": "10446:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3867,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "10410:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3871,
															"nodeType": "RevertStatement",
															"src": "10403:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3855,
															"src": "10487:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3874,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3859,
												"id": 3878,
												"nodeType": "Return",
												"src": "10472:21:13"
											}
										]
									},
									"documentation": {
										"id": 3853,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:13",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3880,
												"src": "10301:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:13"
									},
									"returnParameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3880,
												"src": "10339:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3857,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:13"
									},
									"scope": 5114,
									"src": "10282:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3907,
										"nodeType": "Block",
										"src": "10857:152:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3888,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3883,
														"src": "10871:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3890,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3889,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3901,
												"nodeType": "IfStatement",
												"src": "10867:105:13",
												"trueBody": {
													"id": 3900,
													"nodeType": "Block",
													"src": "10898:74:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3897,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3883,
																		"src": "10955:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3895,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "10919:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3899,
															"nodeType": "RevertStatement",
															"src": "10912:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3883,
															"src": "10996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3902,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 3905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3887,
												"id": 3906,
												"nodeType": "Return",
												"src": "10981:21:13"
											}
										]
									},
									"documentation": {
										"id": 3881,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:13",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3908,
												"src": "10810:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:13"
									},
									"returnParameters": {
										"id": 3887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3908,
												"src": "10848:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3885,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:13"
									},
									"scope": 5114,
									"src": "10791:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3935,
										"nodeType": "Block",
										"src": "11360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3916,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3911,
														"src": "11374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3918,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3917,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3929,
												"nodeType": "IfStatement",
												"src": "11370:103:13",
												"trueBody": {
													"id": 3928,
													"nodeType": "Block",
													"src": "11400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3925,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3911,
																		"src": "11456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3923,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "11421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3927,
															"nodeType": "RevertStatement",
															"src": "11414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3932,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3911,
															"src": "11496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3930,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 3933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3915,
												"id": 3934,
												"nodeType": "Return",
												"src": "11482:20:13"
											}
										]
									},
									"documentation": {
										"id": 3909,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:13",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "11314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:13"
									},
									"returnParameters": {
										"id": 3915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "11352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3913,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:13"
									},
									"scope": 5114,
									"src": "11296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3963,
										"nodeType": "Block",
										"src": "11860:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3944,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3939,
														"src": "11874:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3946,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3945,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3957,
												"nodeType": "IfStatement",
												"src": "11870:103:13",
												"trueBody": {
													"id": 3956,
													"nodeType": "Block",
													"src": "11900:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3953,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3939,
																		"src": "11956:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3951,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "11921:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3955,
															"nodeType": "RevertStatement",
															"src": "11914:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3960,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3939,
															"src": "11996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3958,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 3961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3943,
												"id": 3962,
												"nodeType": "Return",
												"src": "11982:20:13"
											}
										]
									},
									"documentation": {
										"id": 3937,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:13",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "11814:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:13"
									},
									"returnParameters": {
										"id": 3943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "11852:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3941,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:13"
									},
									"scope": 5114,
									"src": "11796:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3991,
										"nodeType": "Block",
										"src": "12360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3972,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3967,
														"src": "12374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3974,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3973,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3985,
												"nodeType": "IfStatement",
												"src": "12370:103:13",
												"trueBody": {
													"id": 3984,
													"nodeType": "Block",
													"src": "12400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3967,
																		"src": "12456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3979,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "12421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 3982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3983,
															"nodeType": "RevertStatement",
															"src": "12414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3967,
															"src": "12496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3986,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 3989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3971,
												"id": 3990,
												"nodeType": "Return",
												"src": "12482:20:13"
											}
										]
									},
									"documentation": {
										"id": 3965,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:13",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3992,
												"src": "12314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:13"
									},
									"returnParameters": {
										"id": 3971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3992,
												"src": "12352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3969,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:13"
									},
									"scope": 5114,
									"src": "12296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4019,
										"nodeType": "Block",
										"src": "12860:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4000,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3995,
														"src": "12874:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 4002,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 4001,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 4005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4013,
												"nodeType": "IfStatement",
												"src": "12870:103:13",
												"trueBody": {
													"id": 4012,
													"nodeType": "Block",
													"src": "12900:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "12956:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4007,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "12921:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4011,
															"nodeType": "RevertStatement",
															"src": "12914:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4016,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3995,
															"src": "12996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 4014,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3999,
												"id": 4018,
												"nodeType": "Return",
												"src": "12982:20:13"
											}
										]
									},
									"documentation": {
										"id": 3993,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:13",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4020,
												"src": "12814:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:13"
									},
									"returnParameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4020,
												"src": "12852:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3997,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:13"
									},
									"scope": 5114,
									"src": "12796:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4047,
										"nodeType": "Block",
										"src": "13360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4028,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4023,
														"src": "13374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 4030,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 4029,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 4033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4041,
												"nodeType": "IfStatement",
												"src": "13370:103:13",
												"trueBody": {
													"id": 4040,
													"nodeType": "Block",
													"src": "13400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4037,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4023,
																		"src": "13456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4035,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "13421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4039,
															"nodeType": "RevertStatement",
															"src": "13414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4044,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4023,
															"src": "13496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 4042,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 4027,
												"id": 4046,
												"nodeType": "Return",
												"src": "13482:20:13"
											}
										]
									},
									"documentation": {
										"id": 4021,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:13",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "13314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:13"
									},
									"returnParameters": {
										"id": 4027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "13352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4025,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:13"
									},
									"scope": 5114,
									"src": "13296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4075,
										"nodeType": "Block",
										"src": "13860:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4056,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4051,
														"src": "13874:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 4058,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 4057,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 4061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4069,
												"nodeType": "IfStatement",
												"src": "13870:103:13",
												"trueBody": {
													"id": 4068,
													"nodeType": "Block",
													"src": "13900:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4051,
																		"src": "13956:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4063,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "13921:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4067,
															"nodeType": "RevertStatement",
															"src": "13914:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4051,
															"src": "13996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 4070,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 4055,
												"id": 4074,
												"nodeType": "Return",
												"src": "13982:20:13"
											}
										]
									},
									"documentation": {
										"id": 4049,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:13",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4076,
												"src": "13814:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:13"
									},
									"returnParameters": {
										"id": 4055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4076,
												"src": "13852:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4053,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:13"
									},
									"scope": 5114,
									"src": "13796:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4103,
										"nodeType": "Block",
										"src": "14360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4079,
														"src": "14374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 4086,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 4085,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 4089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4097,
												"nodeType": "IfStatement",
												"src": "14370:103:13",
												"trueBody": {
													"id": 4096,
													"nodeType": "Block",
													"src": "14400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4093,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4079,
																		"src": "14456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4091,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "14421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4095,
															"nodeType": "RevertStatement",
															"src": "14414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4079,
															"src": "14496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 4098,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 4083,
												"id": 4102,
												"nodeType": "Return",
												"src": "14482:20:13"
											}
										]
									},
									"documentation": {
										"id": 4077,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:13",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "14314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:13"
									},
									"returnParameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "14352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4081,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:13"
									},
									"scope": 5114,
									"src": "14296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4131,
										"nodeType": "Block",
										"src": "14860:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4112,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "14874:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 4114,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 4113,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 4117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4125,
												"nodeType": "IfStatement",
												"src": "14870:103:13",
												"trueBody": {
													"id": 4124,
													"nodeType": "Block",
													"src": "14900:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4121,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4107,
																		"src": "14956:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4119,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "14921:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4123,
															"nodeType": "RevertStatement",
															"src": "14914:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4107,
															"src": "14996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 4126,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 4111,
												"id": 4130,
												"nodeType": "Return",
												"src": "14982:20:13"
											}
										]
									},
									"documentation": {
										"id": 4105,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:13",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4132,
												"src": "14814:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:13"
									},
									"returnParameters": {
										"id": 4111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4132,
												"src": "14852:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4109,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:13"
									},
									"scope": 5114,
									"src": "14796:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4159,
										"nodeType": "Block",
										"src": "15360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4140,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4135,
														"src": "15374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 4142,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 4141,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 4145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4153,
												"nodeType": "IfStatement",
												"src": "15370:103:13",
												"trueBody": {
													"id": 4152,
													"nodeType": "Block",
													"src": "15400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4149,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4135,
																		"src": "15456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4147,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "15421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4151,
															"nodeType": "RevertStatement",
															"src": "15414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4135,
															"src": "15496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 4154,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 4139,
												"id": 4158,
												"nodeType": "Return",
												"src": "15482:20:13"
											}
										]
									},
									"documentation": {
										"id": 4133,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:13",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "15314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:13"
									},
									"returnParameters": {
										"id": 4139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "15352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4137,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:13"
									},
									"scope": 5114,
									"src": "15296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4187,
										"nodeType": "Block",
										"src": "15860:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4168,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "15874:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 4170,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 4169,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 4173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4181,
												"nodeType": "IfStatement",
												"src": "15870:103:13",
												"trueBody": {
													"id": 4180,
													"nodeType": "Block",
													"src": "15900:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4163,
																		"src": "15956:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4175,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "15921:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4179,
															"nodeType": "RevertStatement",
															"src": "15914:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4184,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4163,
															"src": "15996:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 4182,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 4167,
												"id": 4186,
												"nodeType": "Return",
												"src": "15982:20:13"
											}
										]
									},
									"documentation": {
										"id": 4161,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:13",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4188,
												"src": "15814:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:13"
									},
									"returnParameters": {
										"id": 4167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4188,
												"src": "15852:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4165,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:13"
									},
									"scope": 5114,
									"src": "15796:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4215,
										"nodeType": "Block",
										"src": "16360:149:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4196,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "16374:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 4198,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 4197,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 4201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4209,
												"nodeType": "IfStatement",
												"src": "16370:103:13",
												"trueBody": {
													"id": 4208,
													"nodeType": "Block",
													"src": "16400:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4191,
																		"src": "16456:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4203,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "16421:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4207,
															"nodeType": "RevertStatement",
															"src": "16414:48:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4212,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4191,
															"src": "16496:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 4210,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 4213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 4195,
												"id": 4214,
												"nodeType": "Return",
												"src": "16482:20:13"
											}
										]
									},
									"documentation": {
										"id": 4189,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:13",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "16314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:13"
									},
									"returnParameters": {
										"id": 4195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "16352:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4193,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:13"
									},
									"scope": 5114,
									"src": "16296:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4243,
										"nodeType": "Block",
										"src": "16854:146:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4224,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4219,
														"src": "16868:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 4226,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 4225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 4229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4237,
												"nodeType": "IfStatement",
												"src": "16864:101:13",
												"trueBody": {
													"id": 4236,
													"nodeType": "Block",
													"src": "16893:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4233,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4219,
																		"src": "16948:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4231,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "16914:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4235,
															"nodeType": "RevertStatement",
															"src": "16907:47:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4219,
															"src": "16987:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 4238,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:13",
															"typeDescriptions": {}
														}
													},
													"id": 4241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4223,
												"id": 4242,
												"nodeType": "Return",
												"src": "16974:19:13"
											}
										]
									},
									"documentation": {
										"id": 4217,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:13",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4244,
												"src": "16809:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:13"
									},
									"returnParameters": {
										"id": 4223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4244,
												"src": "16847:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4221,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:13"
									},
									"scope": 5114,
									"src": "16792:208:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4266,
										"nodeType": "Block",
										"src": "17236:128:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4252,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4247,
														"src": "17250:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 4253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4260,
												"nodeType": "IfStatement",
												"src": "17246:81:13",
												"trueBody": {
													"id": 4259,
													"nodeType": "Block",
													"src": "17261:66:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4256,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4247,
																		"src": "17310:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4255,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3364,
																	"src": "17282:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$__$",
																		"typeString": "function (int256) pure"
																	}
																},
																"id": 4257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4258,
															"nodeType": "RevertStatement",
															"src": "17275:41:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4263,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4247,
															"src": "17351:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 4264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4251,
												"id": 4265,
												"nodeType": "Return",
												"src": "17336:21:13"
											}
										]
									},
									"documentation": {
										"id": 4245,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:13",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 4267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4267,
												"src": "17190:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4246,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:13"
									},
									"returnParameters": {
										"id": 4251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4267,
												"src": "17227:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:13"
									},
									"scope": 5114,
									"src": "17171:193:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4292,
										"nodeType": "Block",
										"src": "17761:150:13",
										"statements": [
											{
												"expression": {
													"id": 4280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4275,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4273,
														"src": "17771:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4278,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4270,
																"src": "17791:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 4276,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 4281,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4282,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4273,
														"src": "17811:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4283,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4270,
														"src": "17825:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4291,
												"nodeType": "IfStatement",
												"src": "17807:98:13",
												"trueBody": {
													"id": 4290,
													"nodeType": "Block",
													"src": "17832:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4287,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4270,
																		"src": "17888:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4285,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "17853:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4289,
															"nodeType": "RevertStatement",
															"src": "17846:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4268,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:13",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4293,
												"src": "17705:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4269,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:13"
									},
									"returnParameters": {
										"id": 4274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4273,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4293,
												"src": "17742:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 4272,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:13"
									},
									"scope": 5114,
									"src": "17687:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4318,
										"nodeType": "Block",
										"src": "18308:150:13",
										"statements": [
											{
												"expression": {
													"id": 4306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4301,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4299,
														"src": "18318:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4304,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4296,
																"src": "18338:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 4302,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 4307,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4308,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4299,
														"src": "18358:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4309,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4296,
														"src": "18372:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4317,
												"nodeType": "IfStatement",
												"src": "18354:98:13",
												"trueBody": {
													"id": 4316,
													"nodeType": "Block",
													"src": "18379:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4313,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4296,
																		"src": "18435:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4311,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "18400:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4315,
															"nodeType": "RevertStatement",
															"src": "18393:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4294,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:13",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "18252:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4295,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:13"
									},
									"returnParameters": {
										"id": 4300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4299,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "18289:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 4298,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:13"
									},
									"scope": 5114,
									"src": "18234:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4344,
										"nodeType": "Block",
										"src": "18855:150:13",
										"statements": [
											{
												"expression": {
													"id": 4332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4327,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4325,
														"src": "18865:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4322,
																"src": "18885:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 4328,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 4333,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4334,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4325,
														"src": "18905:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4335,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4322,
														"src": "18919:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4343,
												"nodeType": "IfStatement",
												"src": "18901:98:13",
												"trueBody": {
													"id": 4342,
													"nodeType": "Block",
													"src": "18926:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4339,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4322,
																		"src": "18982:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4337,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "18947:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4341,
															"nodeType": "RevertStatement",
															"src": "18940:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4320,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:13",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4345,
												"src": "18799:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4321,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:13"
									},
									"returnParameters": {
										"id": 4326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4325,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4345,
												"src": "18836:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 4324,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:13"
									},
									"scope": 5114,
									"src": "18781:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4370,
										"nodeType": "Block",
										"src": "19402:150:13",
										"statements": [
											{
												"expression": {
													"id": 4358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4353,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4351,
														"src": "19412:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4356,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4348,
																"src": "19432:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 4354,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 4359,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4360,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4351,
														"src": "19452:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4361,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4348,
														"src": "19466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4369,
												"nodeType": "IfStatement",
												"src": "19448:98:13",
												"trueBody": {
													"id": 4368,
													"nodeType": "Block",
													"src": "19473:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4365,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4348,
																		"src": "19529:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4363,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "19494:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4367,
															"nodeType": "RevertStatement",
															"src": "19487:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4346,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:13",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4371,
												"src": "19346:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4347,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:13"
									},
									"returnParameters": {
										"id": 4352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4351,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4371,
												"src": "19383:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 4350,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:13"
									},
									"scope": 5114,
									"src": "19328:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4396,
										"nodeType": "Block",
										"src": "19949:150:13",
										"statements": [
											{
												"expression": {
													"id": 4384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4379,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4377,
														"src": "19959:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4374,
																"src": "19979:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 4380,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 4385,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4386,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4377,
														"src": "19999:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4387,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4374,
														"src": "20013:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4395,
												"nodeType": "IfStatement",
												"src": "19995:98:13",
												"trueBody": {
													"id": 4394,
													"nodeType": "Block",
													"src": "20020:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4391,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4374,
																		"src": "20076:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4389,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "20041:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4393,
															"nodeType": "RevertStatement",
															"src": "20034:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4372,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:13",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4397,
												"src": "19893:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4373,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:13"
									},
									"returnParameters": {
										"id": 4378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4377,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4397,
												"src": "19930:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 4376,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:13"
									},
									"scope": 5114,
									"src": "19875:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4422,
										"nodeType": "Block",
										"src": "20496:150:13",
										"statements": [
											{
												"expression": {
													"id": 4410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4405,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4403,
														"src": "20506:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4408,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4400,
																"src": "20526:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 4406,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 4411,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4412,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4403,
														"src": "20546:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4413,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4400,
														"src": "20560:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4421,
												"nodeType": "IfStatement",
												"src": "20542:98:13",
												"trueBody": {
													"id": 4420,
													"nodeType": "Block",
													"src": "20567:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4417,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4400,
																		"src": "20623:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4415,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "20588:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4419,
															"nodeType": "RevertStatement",
															"src": "20581:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4398,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:13",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4423,
												"src": "20440:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4399,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:13"
									},
									"returnParameters": {
										"id": 4404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4403,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4423,
												"src": "20477:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 4402,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:13"
									},
									"scope": 5114,
									"src": "20422:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4448,
										"nodeType": "Block",
										"src": "21043:150:13",
										"statements": [
											{
												"expression": {
													"id": 4436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4431,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4429,
														"src": "21053:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4434,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4426,
																"src": "21073:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 4432,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 4437,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4438,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4429,
														"src": "21093:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4439,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4426,
														"src": "21107:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4447,
												"nodeType": "IfStatement",
												"src": "21089:98:13",
												"trueBody": {
													"id": 4446,
													"nodeType": "Block",
													"src": "21114:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4443,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4426,
																		"src": "21170:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4441,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "21135:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4445,
															"nodeType": "RevertStatement",
															"src": "21128:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4424,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:13",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4449,
												"src": "20987:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4425,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:13"
									},
									"returnParameters": {
										"id": 4430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4429,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4449,
												"src": "21024:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 4428,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:13"
									},
									"scope": 5114,
									"src": "20969:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4474,
										"nodeType": "Block",
										"src": "21590:150:13",
										"statements": [
											{
												"expression": {
													"id": 4462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4457,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4455,
														"src": "21600:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4452,
																"src": "21620:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 4458,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 4463,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4464,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4455,
														"src": "21640:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4465,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4452,
														"src": "21654:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4473,
												"nodeType": "IfStatement",
												"src": "21636:98:13",
												"trueBody": {
													"id": 4472,
													"nodeType": "Block",
													"src": "21661:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4469,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4452,
																		"src": "21717:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4467,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "21682:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4471,
															"nodeType": "RevertStatement",
															"src": "21675:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4450,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:13",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4475,
												"src": "21534:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4451,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:13"
									},
									"returnParameters": {
										"id": 4456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4455,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4475,
												"src": "21571:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 4454,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:13"
									},
									"scope": 5114,
									"src": "21516:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4500,
										"nodeType": "Block",
										"src": "22137:150:13",
										"statements": [
											{
												"expression": {
													"id": 4488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4483,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4481,
														"src": "22147:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4486,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4478,
																"src": "22167:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 4484,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 4489,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4490,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4481,
														"src": "22187:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4491,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4478,
														"src": "22201:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4499,
												"nodeType": "IfStatement",
												"src": "22183:98:13",
												"trueBody": {
													"id": 4498,
													"nodeType": "Block",
													"src": "22208:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4495,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4478,
																		"src": "22264:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4493,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "22229:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4497,
															"nodeType": "RevertStatement",
															"src": "22222:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4476,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:13",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4501,
												"src": "22081:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:13"
									},
									"returnParameters": {
										"id": 4482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4481,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4501,
												"src": "22118:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 4480,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:13"
									},
									"scope": 5114,
									"src": "22063:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4526,
										"nodeType": "Block",
										"src": "22684:150:13",
										"statements": [
											{
												"expression": {
													"id": 4514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4509,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4507,
														"src": "22694:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4512,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4504,
																"src": "22714:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 4510,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 4515,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4516,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4507,
														"src": "22734:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4517,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4504,
														"src": "22748:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4525,
												"nodeType": "IfStatement",
												"src": "22730:98:13",
												"trueBody": {
													"id": 4524,
													"nodeType": "Block",
													"src": "22755:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4521,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4504,
																		"src": "22811:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4519,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "22776:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4523,
															"nodeType": "RevertStatement",
															"src": "22769:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4502,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:13",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "22628:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4503,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:13"
									},
									"returnParameters": {
										"id": 4508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4507,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "22665:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 4506,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:13"
									},
									"scope": 5114,
									"src": "22610:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4552,
										"nodeType": "Block",
										"src": "23231:150:13",
										"statements": [
											{
												"expression": {
													"id": 4540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4535,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4533,
														"src": "23241:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4530,
																"src": "23261:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 4536,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 4541,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4542,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4533,
														"src": "23281:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4543,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4530,
														"src": "23295:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4551,
												"nodeType": "IfStatement",
												"src": "23277:98:13",
												"trueBody": {
													"id": 4550,
													"nodeType": "Block",
													"src": "23302:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4530,
																		"src": "23358:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4545,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "23323:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4549,
															"nodeType": "RevertStatement",
															"src": "23316:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4528,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:13",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4553,
												"src": "23175:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4529,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:13"
									},
									"returnParameters": {
										"id": 4534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4533,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4553,
												"src": "23212:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 4532,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:13"
									},
									"scope": 5114,
									"src": "23157:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4578,
										"nodeType": "Block",
										"src": "23778:150:13",
										"statements": [
											{
												"expression": {
													"id": 4566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4561,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4559,
														"src": "23788:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4564,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4556,
																"src": "23808:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 4562,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 4567,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4568,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4559,
														"src": "23828:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4569,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4556,
														"src": "23842:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4577,
												"nodeType": "IfStatement",
												"src": "23824:98:13",
												"trueBody": {
													"id": 4576,
													"nodeType": "Block",
													"src": "23849:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4573,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4556,
																		"src": "23905:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4571,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "23870:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4575,
															"nodeType": "RevertStatement",
															"src": "23863:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4554,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:13",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4579,
												"src": "23722:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4555,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:13"
									},
									"returnParameters": {
										"id": 4560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4559,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4579,
												"src": "23759:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 4558,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:13"
									},
									"scope": 5114,
									"src": "23704:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4604,
										"nodeType": "Block",
										"src": "24325:150:13",
										"statements": [
											{
												"expression": {
													"id": 4592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4587,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4585,
														"src": "24335:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4590,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4582,
																"src": "24355:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 4588,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 4593,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4594,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4585,
														"src": "24375:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4595,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4582,
														"src": "24389:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4603,
												"nodeType": "IfStatement",
												"src": "24371:98:13",
												"trueBody": {
													"id": 4602,
													"nodeType": "Block",
													"src": "24396:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4599,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4582,
																		"src": "24452:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4597,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "24417:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4601,
															"nodeType": "RevertStatement",
															"src": "24410:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4580,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:13",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4605,
												"src": "24269:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4581,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:13"
									},
									"returnParameters": {
										"id": 4586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4585,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4605,
												"src": "24306:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 4584,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:13"
									},
									"scope": 5114,
									"src": "24251:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4630,
										"nodeType": "Block",
										"src": "24872:150:13",
										"statements": [
											{
												"expression": {
													"id": 4618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4613,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4611,
														"src": "24882:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4616,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4608,
																"src": "24902:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 4614,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 4619,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4620,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4611,
														"src": "24922:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4621,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4608,
														"src": "24936:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4629,
												"nodeType": "IfStatement",
												"src": "24918:98:13",
												"trueBody": {
													"id": 4628,
													"nodeType": "Block",
													"src": "24943:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4625,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4608,
																		"src": "24999:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4623,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "24964:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4627,
															"nodeType": "RevertStatement",
															"src": "24957:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4606,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:13",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4631,
												"src": "24816:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4607,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:13"
									},
									"returnParameters": {
										"id": 4612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4611,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4631,
												"src": "24853:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 4610,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:13"
									},
									"scope": 5114,
									"src": "24798:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4656,
										"nodeType": "Block",
										"src": "25419:150:13",
										"statements": [
											{
												"expression": {
													"id": 4644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4639,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4637,
														"src": "25429:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4642,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4634,
																"src": "25449:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 4640,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 4645,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4646,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4637,
														"src": "25469:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4647,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4634,
														"src": "25483:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4655,
												"nodeType": "IfStatement",
												"src": "25465:98:13",
												"trueBody": {
													"id": 4654,
													"nodeType": "Block",
													"src": "25490:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4651,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4634,
																		"src": "25546:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4649,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "25511:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4653,
															"nodeType": "RevertStatement",
															"src": "25504:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4632,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:13",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4657,
												"src": "25363:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4633,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:13"
									},
									"returnParameters": {
										"id": 4638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4637,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4657,
												"src": "25400:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 4636,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:13"
									},
									"scope": 5114,
									"src": "25345:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4682,
										"nodeType": "Block",
										"src": "25966:150:13",
										"statements": [
											{
												"expression": {
													"id": 4670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4665,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4663,
														"src": "25976:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4668,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4660,
																"src": "25996:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 4666,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4671,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4672,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4663,
														"src": "26016:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4673,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4660,
														"src": "26030:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4681,
												"nodeType": "IfStatement",
												"src": "26012:98:13",
												"trueBody": {
													"id": 4680,
													"nodeType": "Block",
													"src": "26037:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4677,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4660,
																		"src": "26093:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4675,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "26058:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4679,
															"nodeType": "RevertStatement",
															"src": "26051:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4658,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:13",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4683,
												"src": "25910:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:13"
									},
									"returnParameters": {
										"id": 4664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4663,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4683,
												"src": "25947:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4662,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:13"
									},
									"scope": 5114,
									"src": "25892:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4708,
										"nodeType": "Block",
										"src": "26513:150:13",
										"statements": [
											{
												"expression": {
													"id": 4696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4691,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4689,
														"src": "26523:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4686,
																"src": "26543:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 4692,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 4697,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4698,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4689,
														"src": "26563:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4699,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4686,
														"src": "26577:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4707,
												"nodeType": "IfStatement",
												"src": "26559:98:13",
												"trueBody": {
													"id": 4706,
													"nodeType": "Block",
													"src": "26584:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4703,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4686,
																		"src": "26640:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4701,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "26605:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4705,
															"nodeType": "RevertStatement",
															"src": "26598:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4684,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:13",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4709,
												"src": "26457:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4685,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:13"
									},
									"returnParameters": {
										"id": 4690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4689,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4709,
												"src": "26494:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 4688,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:13"
									},
									"scope": 5114,
									"src": "26439:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4734,
										"nodeType": "Block",
										"src": "27060:150:13",
										"statements": [
											{
												"expression": {
													"id": 4722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4717,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4715,
														"src": "27070:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4720,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4712,
																"src": "27090:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 4718,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 4723,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4724,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4715,
														"src": "27110:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4725,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4712,
														"src": "27124:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4733,
												"nodeType": "IfStatement",
												"src": "27106:98:13",
												"trueBody": {
													"id": 4732,
													"nodeType": "Block",
													"src": "27131:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4729,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4712,
																		"src": "27187:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4727,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "27152:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4731,
															"nodeType": "RevertStatement",
															"src": "27145:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4710,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:13",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4735,
												"src": "27004:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4711,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:13"
									},
									"returnParameters": {
										"id": 4716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4715,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4735,
												"src": "27041:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 4714,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:13"
									},
									"scope": 5114,
									"src": "26986:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4760,
										"nodeType": "Block",
										"src": "27607:150:13",
										"statements": [
											{
												"expression": {
													"id": 4748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4743,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4741,
														"src": "27617:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4738,
																"src": "27637:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 4744,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 4747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 4749,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4750,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4741,
														"src": "27657:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4751,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4738,
														"src": "27671:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4759,
												"nodeType": "IfStatement",
												"src": "27653:98:13",
												"trueBody": {
													"id": 4758,
													"nodeType": "Block",
													"src": "27678:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4755,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4738,
																		"src": "27734:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4753,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "27699:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4757,
															"nodeType": "RevertStatement",
															"src": "27692:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4736,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:13",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4761,
												"src": "27551:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4737,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:13"
									},
									"returnParameters": {
										"id": 4742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4741,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4761,
												"src": "27588:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 4740,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:13"
									},
									"scope": 5114,
									"src": "27533:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4786,
										"nodeType": "Block",
										"src": "28147:148:13",
										"statements": [
											{
												"expression": {
													"id": 4774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4769,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4767,
														"src": "28157:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4772,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4764,
																"src": "28176:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4770,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4775,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4776,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4767,
														"src": "28196:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4777,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4764,
														"src": "28210:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4785,
												"nodeType": "IfStatement",
												"src": "28192:97:13",
												"trueBody": {
													"id": 4784,
													"nodeType": "Block",
													"src": "28217:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4781,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4764,
																		"src": "28272:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4779,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "28238:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4783,
															"nodeType": "RevertStatement",
															"src": "28231:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4762,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:13",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4787,
												"src": "28092:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4763,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:13"
									},
									"returnParameters": {
										"id": 4768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4767,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4787,
												"src": "28129:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4766,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:13"
									},
									"scope": 5114,
									"src": "28075:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4812,
										"nodeType": "Block",
										"src": "28685:148:13",
										"statements": [
											{
												"expression": {
													"id": 4800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4795,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4793,
														"src": "28695:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4798,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4790,
																"src": "28714:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4796,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4801,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4802,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4793,
														"src": "28734:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4803,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4790,
														"src": "28748:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4811,
												"nodeType": "IfStatement",
												"src": "28730:97:13",
												"trueBody": {
													"id": 4810,
													"nodeType": "Block",
													"src": "28755:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4807,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4790,
																		"src": "28810:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4805,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "28776:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4809,
															"nodeType": "RevertStatement",
															"src": "28769:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4788,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:13",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4813,
												"src": "28630:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4789,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:13"
									},
									"returnParameters": {
										"id": 4794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4793,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4813,
												"src": "28667:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4792,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:13"
									},
									"scope": 5114,
									"src": "28613:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4838,
										"nodeType": "Block",
										"src": "29223:148:13",
										"statements": [
											{
												"expression": {
													"id": 4826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4821,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4819,
														"src": "29233:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4824,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4816,
																"src": "29252:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4822,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4827,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4828,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4819,
														"src": "29272:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4829,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4816,
														"src": "29286:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4837,
												"nodeType": "IfStatement",
												"src": "29268:97:13",
												"trueBody": {
													"id": 4836,
													"nodeType": "Block",
													"src": "29293:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4833,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4816,
																		"src": "29348:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4831,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "29314:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4835,
															"nodeType": "RevertStatement",
															"src": "29307:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4814,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:13",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4839,
												"src": "29168:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4815,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:13"
									},
									"returnParameters": {
										"id": 4820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4819,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4839,
												"src": "29205:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4818,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:13"
									},
									"scope": 5114,
									"src": "29151:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4864,
										"nodeType": "Block",
										"src": "29761:148:13",
										"statements": [
											{
												"expression": {
													"id": 4852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4847,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4845,
														"src": "29771:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4850,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4842,
																"src": "29790:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4848,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4853,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4854,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4845,
														"src": "29810:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4855,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4842,
														"src": "29824:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4863,
												"nodeType": "IfStatement",
												"src": "29806:97:13",
												"trueBody": {
													"id": 4862,
													"nodeType": "Block",
													"src": "29831:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4859,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4842,
																		"src": "29886:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4857,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "29852:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4861,
															"nodeType": "RevertStatement",
															"src": "29845:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4840,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:13",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4865,
												"src": "29706:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4841,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:13"
									},
									"returnParameters": {
										"id": 4846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4845,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4865,
												"src": "29743:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4844,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:13"
									},
									"scope": 5114,
									"src": "29689:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4890,
										"nodeType": "Block",
										"src": "30299:148:13",
										"statements": [
											{
												"expression": {
													"id": 4878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4873,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4871,
														"src": "30309:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4876,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4868,
																"src": "30328:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4874,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4879,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4880,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4871,
														"src": "30348:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4881,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4868,
														"src": "30362:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4889,
												"nodeType": "IfStatement",
												"src": "30344:97:13",
												"trueBody": {
													"id": 4888,
													"nodeType": "Block",
													"src": "30369:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4885,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4868,
																		"src": "30424:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4883,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "30390:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4887,
															"nodeType": "RevertStatement",
															"src": "30383:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4866,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:13",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4891,
												"src": "30244:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4867,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:13"
									},
									"returnParameters": {
										"id": 4872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4871,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4891,
												"src": "30281:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4870,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:13"
									},
									"scope": 5114,
									"src": "30227:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4916,
										"nodeType": "Block",
										"src": "30837:148:13",
										"statements": [
											{
												"expression": {
													"id": 4904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4899,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4897,
														"src": "30847:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4902,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4894,
																"src": "30866:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4900,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4905,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4906,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4897,
														"src": "30886:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4907,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4894,
														"src": "30900:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4915,
												"nodeType": "IfStatement",
												"src": "30882:97:13",
												"trueBody": {
													"id": 4914,
													"nodeType": "Block",
													"src": "30907:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4911,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4894,
																		"src": "30962:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4909,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "30928:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4913,
															"nodeType": "RevertStatement",
															"src": "30921:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4892,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:13",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4917,
												"src": "30782:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4893,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:13"
									},
									"returnParameters": {
										"id": 4898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4897,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4917,
												"src": "30819:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4896,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:13"
									},
									"scope": 5114,
									"src": "30765:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4942,
										"nodeType": "Block",
										"src": "31375:148:13",
										"statements": [
											{
												"expression": {
													"id": 4930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4925,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4923,
														"src": "31385:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4928,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4920,
																"src": "31404:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4926,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4931,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4932,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4923,
														"src": "31424:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4933,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4920,
														"src": "31438:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4941,
												"nodeType": "IfStatement",
												"src": "31420:97:13",
												"trueBody": {
													"id": 4940,
													"nodeType": "Block",
													"src": "31445:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4937,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4920,
																		"src": "31500:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4935,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "31466:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4939,
															"nodeType": "RevertStatement",
															"src": "31459:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4918,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:13",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4943,
												"src": "31320:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4919,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:13"
									},
									"returnParameters": {
										"id": 4924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4923,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4943,
												"src": "31357:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4922,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:13"
									},
									"scope": 5114,
									"src": "31303:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4968,
										"nodeType": "Block",
										"src": "31913:148:13",
										"statements": [
											{
												"expression": {
													"id": 4956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4951,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4949,
														"src": "31923:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4954,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4946,
																"src": "31942:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4952,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4957,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4958,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4949,
														"src": "31962:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4959,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4946,
														"src": "31976:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4967,
												"nodeType": "IfStatement",
												"src": "31958:97:13",
												"trueBody": {
													"id": 4966,
													"nodeType": "Block",
													"src": "31983:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4946,
																		"src": "32038:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4961,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "32004:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4965,
															"nodeType": "RevertStatement",
															"src": "31997:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4944,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:13",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4969,
												"src": "31858:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4945,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:13"
									},
									"returnParameters": {
										"id": 4950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4949,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4969,
												"src": "31895:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4948,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:13"
									},
									"scope": 5114,
									"src": "31841:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4994,
										"nodeType": "Block",
										"src": "32451:148:13",
										"statements": [
											{
												"expression": {
													"id": 4982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4977,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4975,
														"src": "32461:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4980,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4972,
																"src": "32480:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4978,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 4981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4983,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4984,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4975,
														"src": "32500:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4985,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4972,
														"src": "32514:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4993,
												"nodeType": "IfStatement",
												"src": "32496:97:13",
												"trueBody": {
													"id": 4992,
													"nodeType": "Block",
													"src": "32521:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4989,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4972,
																		"src": "32576:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4987,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "32542:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 4990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4991,
															"nodeType": "RevertStatement",
															"src": "32535:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4970,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:13",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4995,
												"src": "32396:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4971,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:13"
									},
									"returnParameters": {
										"id": 4976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4975,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4995,
												"src": "32433:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4974,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:13"
									},
									"scope": 5114,
									"src": "32379:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5020,
										"nodeType": "Block",
										"src": "32989:148:13",
										"statements": [
											{
												"expression": {
													"id": 5008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5003,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5001,
														"src": "32999:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5006,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4998,
																"src": "33018:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 5004,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 5007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5009,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5010,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5001,
														"src": "33038:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5011,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4998,
														"src": "33052:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5019,
												"nodeType": "IfStatement",
												"src": "33034:97:13",
												"trueBody": {
													"id": 5018,
													"nodeType": "Block",
													"src": "33059:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5015,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4998,
																		"src": "33114:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5013,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "33080:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5017,
															"nodeType": "RevertStatement",
															"src": "33073:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4996,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:13",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "32934:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4997,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:13"
									},
									"returnParameters": {
										"id": 5002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5001,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "32971:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5000,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:13"
									},
									"scope": 5114,
									"src": "32917:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5046,
										"nodeType": "Block",
										"src": "33527:148:13",
										"statements": [
											{
												"expression": {
													"id": 5034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5029,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5027,
														"src": "33537:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5032,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5024,
																"src": "33556:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 5030,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:13",
																"typeDescriptions": {}
															}
														},
														"id": 5033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 5035,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5036,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5027,
														"src": "33576:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5037,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5024,
														"src": "33590:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5045,
												"nodeType": "IfStatement",
												"src": "33572:97:13",
												"trueBody": {
													"id": 5044,
													"nodeType": "Block",
													"src": "33597:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5041,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5024,
																		"src": "33652:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5039,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "33618:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5043,
															"nodeType": "RevertStatement",
															"src": "33611:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5022,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:13",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5047,
												"src": "33472:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5023,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:13"
									},
									"returnParameters": {
										"id": 5028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5027,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 5047,
												"src": "33509:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 5026,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:13"
									},
									"scope": 5114,
									"src": "33455:220:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5072,
										"nodeType": "Block",
										"src": "34058:146:13",
										"statements": [
											{
												"expression": {
													"id": 5060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5055,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5053,
														"src": "34068:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5058,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5050,
																"src": "34086:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 5056,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:13",
																"typeDescriptions": {}
															}
														},
														"id": 5059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 5061,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5062,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5053,
														"src": "34106:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5063,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5050,
														"src": "34120:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5071,
												"nodeType": "IfStatement",
												"src": "34102:96:13",
												"trueBody": {
													"id": 5070,
													"nodeType": "Block",
													"src": "34127:71:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5067,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5050,
																		"src": "34181:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5065,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "34148:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5069,
															"nodeType": "RevertStatement",
															"src": "34141:46:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5048,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:13",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 5073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5050,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5073,
												"src": "34004:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5049,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:13"
									},
									"returnParameters": {
										"id": 5054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5053,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 5073,
												"src": "34041:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 5052,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:13"
									},
									"scope": 5114,
									"src": "33988:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5102,
										"nodeType": "Block",
										"src": "34444:250:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5081,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5076,
														"src": "34557:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 5086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 5085,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:13",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 5084,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 5087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 5088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:13",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 5082,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 5089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5096,
												"nodeType": "IfStatement",
												"src": "34553:105:13",
												"trueBody": {
													"id": 5095,
													"nodeType": "Block",
													"src": "34592:66:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 5092,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5076,
																		"src": "34641:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5091,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3376,
																	"src": "34613:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 5093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5094,
															"nodeType": "RevertStatement",
															"src": "34606:41:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5099,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5076,
															"src": "34681:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 5097,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 5100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5080,
												"id": 5101,
												"nodeType": "Return",
												"src": "34667:20:13"
											}
										]
									},
									"documentation": {
										"id": 5074,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:13",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 5103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5103,
												"src": "34398:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:13"
									},
									"returnParameters": {
										"id": 5080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5103,
												"src": "34436:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5078,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:13"
									},
									"scope": 5114,
									"src": "34380:314:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5112,
										"nodeType": "Block",
										"src": "34853:114:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34915:46:13",
													"nodeType": "YulBlock",
													"src": "34915:46:13",
													"statements": [
														{
															"nativeSrc": "34929:22:13",
															"nodeType": "YulAssignment",
															"src": "34929:22:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34948:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "34948:1:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34941:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "34941:6:13"
																		},
																		"nativeSrc": "34941:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "34941:9:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34934:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "34934:6:13"
																},
																"nativeSrc": "34934:17:13",
																"nodeType": "YulFunctionCall",
																"src": "34934:17:13"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34929:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "34929:1:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5106,
														"isOffset": false,
														"isSlot": false,
														"src": "34948:1:13",
														"valueSize": 1
													},
													{
														"declaration": 5109,
														"isOffset": false,
														"isSlot": false,
														"src": "34929:1:13",
														"valueSize": 1
													}
												],
												"id": 5111,
												"nodeType": "InlineAssembly",
												"src": "34906:55:13"
											}
										]
									},
									"documentation": {
										"id": 5104,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:13",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 5113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5113,
												"src": "34811:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:13"
									},
									"returnParameters": {
										"id": 5110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5109,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5113,
												"src": "34842:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:13"
									},
									"scope": 5114,
									"src": "34795:172:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5115,
							"src": "769:34200:13",
							"usedErrors": [
								3359,
								3364,
								3371,
								3376
							],
							"usedEvents": []
						}
					],
					"src": "192:34778:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							5114
						],
						"SignedMath": [
							5258
						]
					},
					"id": 5259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 5118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5259,
							"sourceUnit": 5115,
							"src": "135:40:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5117,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5114,
										"src": "143:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5119,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 5258,
							"linearizedBaseContracts": [
								5258
							],
							"name": "SignedMath",
							"nameLocation": "266:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5148,
										"nodeType": "Block",
										"src": "746:215:14",
										"statements": [
											{
												"id": 5147,
												"nodeType": "UncheckedBlock",
												"src": "756:199:14",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5126,
																"src": "894:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 5134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 5132,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5124,
																						"src": "900:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 5133,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5126,
																						"src": "904:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 5135,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 5140,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5122,
																							"src": "932:9:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 5138,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5114,
																							"src": "916:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$5114_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 5139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:14",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5113,
																						"src": "916:15:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 5141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 5137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 5136,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 5142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 5130,
														"id": 5146,
														"nodeType": "Return",
														"src": "887:57:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5120,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:14",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 5149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5122,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 5149,
												"src": "679:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5124,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5149,
												"src": "695:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5126,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5149,
												"src": "705:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5125,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:14"
									},
									"returnParameters": {
										"id": 5130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5149,
												"src": "738:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5128,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:14"
									},
									"scope": 5258,
									"src": "662:299:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5167,
										"nodeType": "Block",
										"src": "1102:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5160,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5152,
																"src": "1127:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 5161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5154,
																"src": "1131:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5152,
															"src": "1134:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5154,
															"src": "1137:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5159,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5149,
														"src": "1119:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5158,
												"id": 5166,
												"nodeType": "Return",
												"src": "1112:27:14"
											}
										]
									},
									"documentation": {
										"id": 5150,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 5168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5168,
												"src": "1051:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5168,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5153,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:14"
									},
									"returnParameters": {
										"id": 5158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5168,
												"src": "1094:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5156,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:14"
									},
									"scope": 5258,
									"src": "1038:108:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5186,
										"nodeType": "Block",
										"src": "1288:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5179,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5171,
																"src": "1313:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5173,
																"src": "1317:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5182,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5171,
															"src": "1320:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5183,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5173,
															"src": "1323:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5178,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5149,
														"src": "1305:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5177,
												"id": 5185,
												"nodeType": "Return",
												"src": "1298:27:14"
											}
										]
									},
									"documentation": {
										"id": 5169,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 5187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5187,
												"src": "1237:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5170,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5187,
												"src": "1247:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:14"
									},
									"returnParameters": {
										"id": 5177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5187,
												"src": "1280:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5175,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:14"
									},
									"scope": 5258,
									"src": "1224:108:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5230,
										"nodeType": "Block",
										"src": "1537:162:14",
										"statements": [
											{
												"assignments": [
													5198
												],
												"declarations": [
													{
														"constant": false,
														"id": 5198,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 5230,
														"src": "1599:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5197,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5211,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5199,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5190,
																	"src": "1611:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 5200,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5192,
																	"src": "1615:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5202,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5203,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5190,
																				"src": "1622:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5204,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5192,
																				"src": "1626:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5206,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 5207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5209,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5212,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5198,
														"src": "1651:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 5217,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5198,
																						"src": "1671:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 5216,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 5215,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 5218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 5219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5213,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5222,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5190,
																				"src": "1685:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5223,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5192,
																				"src": "1689:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5225,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5196,
												"id": 5229,
												"nodeType": "Return",
												"src": "1644:48:14"
											}
										]
									},
									"documentation": {
										"id": 5188,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 5231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5190,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5231,
												"src": "1486:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5189,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5192,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5231,
												"src": "1496:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5191,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:14"
									},
									"returnParameters": {
										"id": 5196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5231,
												"src": "1529:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5194,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:14"
									},
									"scope": 5258,
									"src": "1469:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5256,
										"nodeType": "Block",
										"src": "1843:763:14",
										"statements": [
											{
												"id": 5255,
												"nodeType": "UncheckedBlock",
												"src": "1853:747:14",
												"statements": [
													{
														"assignments": [
															5240
														],
														"declarations": [
															{
																"constant": false,
																"id": 5240,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2422:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 5255,
																"src": "2415:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 5239,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2415:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 5244,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5241,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5234,
																"src": "2429:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 5242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2429:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2415:22:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 5252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 5249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 5247,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5234,
																					"src": "2572:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 5248,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5240,
																					"src": "2576:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2572:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 5250,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2571:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 5251,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5240,
																		"src": "2584:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2571:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 5246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2563:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 5245,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2563:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 5253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2563:26:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 5238,
														"id": 5254,
														"nodeType": "Return",
														"src": "2556:33:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5232,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 5257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5234,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 5257,
												"src": "1801:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5233,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:14"
									},
									"returnParameters": {
										"id": 5238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5257,
												"src": "1834:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:14"
									},
									"scope": 5258,
									"src": "1788:818:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5259,
							"src": "258:2350:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2500:14"
				},
				"id": 14
			}
		}
	}
}